
> interaqt-cms-example@1.0.0 test
> vitest run tests/basic.test.ts


 RUN  v3.2.4 /Users/camus/Work/interqat/interaqt-old/examples/dormitory

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-eb2b-7d77-a2a4-188b6d4e78da"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-eb2b-7d77-a2a4-188b6d4e78da'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Test User","email":"test@example.com","phone":"1234567890","role":"student"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Test User","email":"test@example.com","phone":"1234567890","role":"student"}},"activity":{"_rowId":1,"id":"0198bc24-eb2b-7d77-a2a4-188b6d4e78da","&":{"id":"0198bc24-eb2d-7094-ae81-db635d0525e4"}},"id":"0198bc24-eb2d-7094-ae81-db6261afae81"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test User","email":"test@example.com","phone":"1234567890","role":"student"}'[39m,
    [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m,
    [32m'0198bc24-eb2b-7d77-a2a4-188b6d4e78da'[39m,
    [32m'0198bc24-eb2d-7094-ae81-db635d0525e4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Test User","email":"test@example.com","phone":"1234567890","role":"student","status":"active","createdAt":"2025-08-18T07:46:32.882Z","_User_bound_sourceRecordId":"0198bc24-eb2d-7094-ae81-db6261afae81","_User_bound_transformIndex":0,"id":"0198bc24-eb32-7428-8b2c-b51b81085137"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test User'[39m,
    [32m'test@example.com'[39m,
    [32m'1234567890'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:32.882Z'[39m,
    [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m,
    [33m0[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-eb32-7428-8b2c-b51b81085137"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-eb32-7428-8b2c-b51b81085137"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:32.888Z","id":"0198bc24-eb32-7428-8b2c-b51b81085137"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:32.888Z'[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m,
    [32m'0198bc24-eb32-7428-8b2c-b51b81085137'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eb2d-7094-ae81-db6261afae81'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User entity is created when CreateUser interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_6"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'test@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-ecee-7dc4-850e-0b850be46854"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-ecee-7dc4-850e-0b850be46854'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Another User","email":"another@example.com"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Another User","email":"another@example.com"}},"activity":{"_rowId":1,"id":"0198bc24-ecee-7dc4-850e-0b850be46854","&":{"id":"0198bc24-ecef-7790-9139-48e9ea064569"}},"id":"0198bc24-ecef-7790-9139-48e858e9bfef"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Another User","email":"another@example.com"}'[39m,
    [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m,
    [32m'0198bc24-ecee-7dc4-850e-0b850be46854'[39m,
    [32m'0198bc24-ecef-7790-9139-48e9ea064569'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Another User","email":"another@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:33.330Z","_User_bound_sourceRecordId":"0198bc24-ecef-7790-9139-48e858e9bfef","_User_bound_transformIndex":0,"id":"0198bc24-ecf2-7964-b00d-bf051d952ecc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Another User'[39m,
    [32m'another@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:33.330Z'[39m,
    [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m,
    [33m0[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-ecf2-7964-b00d-bf051d952ecc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-ecf2-7964-b00d-bf051d952ecc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:33.334Z","id":"0198bc24-ecf2-7964-b00d-bf051d952ecc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:33.334Z'[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m,
    [32m'0198bc24-ecf2-7964-b00d-bf051d952ecc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ecef-7790-9139-48e858e9bfef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User entity defaults to student role when no role provided
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'another@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-eea3-7c16-b3ea-6a34fd0b9c02"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-eea3-7c16-b3ea-6a34fd0b9c02'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Dormitory A","capacity":6,"floor":3,"building":"Building 1"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Dormitory A","capacity":6,"floor":3,"building":"Building 1"}},"activity":{"_rowId":1,"id":"0198bc24-eea3-7c16-b3ea-6a34fd0b9c02","&":{"id":"0198bc24-eea4-73d3-93be-582bdbaa88b9"}},"id":"0198bc24-eea4-73d3-93be-582aa7a2a9e1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dormitory A","capacity":6,"floor":3,"building":"Building 1"}'[39m,
    [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m,
    [32m'0198bc24-eea3-7c16-b3ea-6a34fd0b9c02'[39m,
    [32m'0198bc24-eea4-73d3-93be-582bdbaa88b9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Dormitory A","capacity":6,"floor":3,"building":"Building 1","status":"active","createdAt":"2025-08-18T07:46:33.767Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:33.767Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:33.767Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:33.767Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:33.767Z"},{"bedNumber":"5","status":"available","createdAt":"2025-08-18T07:46:33.767Z"},{"bedNumber":"6","status":"available","createdAt":"2025-08-18T07:46:33.767Z"}],"_Dormitory_bound_sourceRecordId":"0198bc24-eea4-73d3-93be-582aa7a2a9e1","_Dormitory_bound_transformIndex":0,"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dormitory A'[39m,
    [33m6[39m,
    [33m3[39m,
    [32m'Building 1'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m,
    [33m0[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:33.767Z","dormitory":{"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698","&":{"id":"0198bc24-eea9-751b-8e48-510783ce6fcf"}},"id":"0198bc24-eea9-751b-8e48-5106691864a1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eea9-751b-8e48-5106691864a1'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eea9-751b-8e48-510783ce6fcf'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:33.767Z","dormitory":{"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698","&":{"id":"0198bc24-eeaa-72ce-901d-45e8907155ce"}},"id":"0198bc24-eeaa-72ce-901d-45e7321631d9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eeaa-72ce-901d-45e7321631d9'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eeaa-72ce-901d-45e8907155ce'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:33.767Z","dormitory":{"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698","&":{"id":"0198bc24-eeab-7330-a94e-96c052ff101b"}},"id":"0198bc24-eeab-7330-a94e-96bfb07eed01"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eeab-7330-a94e-96bfb07eed01'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eeab-7330-a94e-96c052ff101b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:33.767Z","dormitory":{"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698","&":{"id":"0198bc24-eeac-76ba-9282-ab90ea1e08f4"}},"id":"0198bc24-eeac-76ba-9282-ab8fe100ef4d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eeac-76ba-9282-ab8fe100ef4d'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eeac-76ba-9282-ab90ea1e08f4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"5","status":"available","createdAt":"2025-08-18T07:46:33.767Z","dormitory":{"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698","&":{"id":"0198bc24-eead-7e26-b06e-cf69a918d45d"}},"id":"0198bc24-eead-7e26-b06e-cf68e25b38fd"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'5'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eead-7e26-b06e-cf68e25b38fd'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eead-7e26-b06e-cf69a918d45d'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"6","status":"available","createdAt":"2025-08-18T07:46:33.767Z","dormitory":{"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698","&":{"id":"0198bc24-eead-7e26-b06e-cf6b6b5c80d9"}},"id":"0198bc24-eead-7e26-b06e-cf6af855c276"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'6'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:33.767Z'[39m,
    [32m'0198bc24-eead-7e26-b06e-cf6af855c276'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eead-7e26-b06e-cf6b6b5c80d9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc24-eea8-73ad-af32-f5a9ef89e698"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-eea8-73ad-af32-f5a9ef89e698"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:33.777Z","id":"0198bc24-eea8-73ad-af32-f5a9ef89e698"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:33.777Z'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m,
    [32m'0198bc24-eea8-73ad-af32-f5a9ef89e698'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-eea4-73d3-93be-582aa7a2a9e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_6"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Dormitory A'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f058-7326-9bdf-e776f7c0ac39"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f058-7326-9bdf-e776f7c0ac39'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Dormitory B","capacity":4},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Dormitory B","capacity":4}},"activity":{"_rowId":1,"id":"0198bc24-f058-7326-9bdf-e776f7c0ac39","&":{"id":"0198bc24-f058-7326-9bdf-e77808305010"}},"id":"0198bc24-f058-7326-9bdf-e777a1086a89"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dormitory B","capacity":4}'[39m,
    [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m,
    [32m'0198bc24-f058-7326-9bdf-e776f7c0ac39'[39m,
    [32m'0198bc24-f058-7326-9bdf-e77808305010'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Dormitory B","capacity":4,"floor":null,"building":null,"status":"active","createdAt":"2025-08-18T07:46:34.205Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:34.205Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:34.205Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:34.205Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:34.205Z"}],"_Dormitory_bound_sourceRecordId":"0198bc24-f058-7326-9bdf-e777a1086a89","_Dormitory_bound_transformIndex":0,"id":"0198bc24-f05e-7e46-83af-8bc9cab26298"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dormitory B'[39m,
    [33m4[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:34.205Z'[39m,
    [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m,
    [33m0[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:34.205Z","dormitory":{"id":"0198bc24-f05e-7e46-83af-8bc9cab26298","&":{"id":"0198bc24-f05f-7a53-830a-cc4e148c3d8a"}},"id":"0198bc24-f05f-7a53-830a-cc4d724f4476"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:34.205Z'[39m,
    [32m'0198bc24-f05f-7a53-830a-cc4d724f4476'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f05f-7a53-830a-cc4e148c3d8a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:34.205Z","dormitory":{"id":"0198bc24-f05e-7e46-83af-8bc9cab26298","&":{"id":"0198bc24-f060-7baf-99f5-3ca575b005f9"}},"id":"0198bc24-f060-7baf-99f5-3ca46a241db2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:34.205Z'[39m,
    [32m'0198bc24-f060-7baf-99f5-3ca46a241db2'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f060-7baf-99f5-3ca575b005f9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:34.205Z","dormitory":{"id":"0198bc24-f05e-7e46-83af-8bc9cab26298","&":{"id":"0198bc24-f061-7390-bf6d-371ba7685e06"}},"id":"0198bc24-f061-7390-bf6d-371a6b69a6ec"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:34.205Z'[39m,
    [32m'0198bc24-f061-7390-bf6d-371a6b69a6ec'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f061-7390-bf6d-371ba7685e06'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:34.205Z","dormitory":{"id":"0198bc24-f05e-7e46-83af-8bc9cab26298","&":{"id":"0198bc24-f062-7aaf-8cc7-7679242117d1"}},"id":"0198bc24-f062-7aaf-8cc7-767848e0c601"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:34.205Z'[39m,
    [32m'0198bc24-f062-7aaf-8cc7-767848e0c601'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f062-7aaf-8cc7-7679242117d1'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc24-f05e-7e46-83af-8bc9cab26298"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-f05e-7e46-83af-8bc9cab26298"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:34.214Z","id":"0198bc24-f05e-7e46-83af-8bc9cab26298"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:34.214Z'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m,
    [32m'0198bc24-f05e-7e46-83af-8bc9cab26298'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f058-7326-9bdf-e777a1086a89'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory entity defaults floor and building to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Dormitory B'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f213-73f1-9de3-2654f46f980b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f213-73f1-9de3-2654f46f980b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Target User","email":"target@example.com","role":"student"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Target User","email":"target@example.com","role":"student"}},"activity":{"_rowId":1,"id":"0198bc24-f213-73f1-9de3-2654f46f980b","&":{"id":"0198bc24-f214-7688-81a5-370436d0024e"}},"id":"0198bc24-f214-7688-81a5-3703358ca49b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Target User","email":"target@example.com","role":"student"}'[39m,
    [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m,
    [32m'0198bc24-f213-73f1-9de3-2654f46f980b'[39m,
    [32m'0198bc24-f214-7688-81a5-370436d0024e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Target User","email":"target@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:34.646Z","_User_bound_sourceRecordId":"0198bc24-f214-7688-81a5-3703358ca49b","_User_bound_transformIndex":0,"id":"0198bc24-f216-7025-956b-329116b80d83"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Target User'[39m,
    [32m'target@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:34.646Z'[39m,
    [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m,
    [33m0[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f216-7025-956b-329116b80d83'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f216-7025-956b-329116b80d83"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f216-7025-956b-329116b80d83'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f216-7025-956b-329116b80d83"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f216-7025-956b-329116b80d83'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:34.650Z","id":"0198bc24-f216-7025-956b-329116b80d83"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:34.650Z'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f214-7688-81a5-3703358ca49b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'target@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
[INFO] interaction: IssuePointDeduction {}
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f222-7f9a-9b66-b8611cc4829a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f222-7f9a-9b66-b8611cc4829a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"IssuePointDeduction","interactionId":"cff5d596-7634-4a2f-8a75-4ebeb43a0d0b","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"targetUserId":"0198bc24-f216-7025-956b-329116b80d83","reason":"Late return","points":5,"category":"dormitory_rules","description":"Returned after curfew","evidence":"Security camera footage"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"targetUserId":"0198bc24-f216-7025-956b-329116b80d83","reason":"Late return","points":5,"category":"dormitory_rules","description":"Returned after curfew","evidence":"Security camera footage"}},"activity":{"_rowId":2,"id":"0198bc24-f222-7f9a-9b66-b8611cc4829a","&":{"id":"0198bc24-f223-7a22-8d90-bd8c6152d974"}},"id":"0198bc24-f222-7f9a-9b66-b862808188b9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'IssuePointDeduction'[39m,
    [32m'cff5d596-7634-4a2f-8a75-4ebeb43a0d0b'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc24-f216-7025-956b-329116b80d83","reason":"Late return","points":5,"category":"dormitory_rules","description":"Returned after curfew","evidence":"Security camera footage"}'[39m,
    [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m,
    [32m'0198bc24-f222-7f9a-9b66-b8611cc4829a'[39m,
    [32m'0198bc24-f223-7a22-8d90-bd8c6152d974'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for creation with data {"reason":"Late return","points":5,"category":"dormitory_rules","status":"active","description":"Returned after curfew","evidence":"Security camera footage","deductedAt":"2025-08-18T07:46:34.662Z","createdAt":"2025-08-18T07:46:34.662Z","user":{"id":"0198bc24-f216-7025-956b-329116b80d83","&":{"id":"0198bc24-f226-7f72-a2a2-143f04f72d43"}},"_PointDeduction_bound_sourceRecordId":"0198bc24-f222-7f9a-9b66-b862808188b9","_PointDeduction_bound_transformIndex":0,"id":"0198bc24-f226-7f72-a2a2-143e7d026ddb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "PointDeduction"\n'[39m +
    [32m'("poi_rea_44","poi_poi_45","poi_cat_46","poi_sta_47","poi_des_48","poi_evi_49","poi_ded_50","poi_cre_51","poi__52","poi__53","poi_id_55","poi__54","poi_use_104","use_id_92")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Late return'[39m,
    [33m5[39m,
    [32m'dormitory_rules'[39m,
    [32m'active'[39m,
    [32m'Returned after curfew'[39m,
    [32m'Security camera footage'[39m,
    [32m'2025-08-18T07:46:34.662Z'[39m,
    [32m'2025-08-18T07:46:34.662Z'[39m,
    [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m,
    [33m0[39m,
    [32m'0198bc24-f226-7f72-a2a2-143e7d026ddb'[39m,
    [32m'active'[39m,
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m,
    [32m'0198bc24-f226-7f72-a2a2-143f04f72d43'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f226-7f72-a2a2-143e7d026ddb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"status":"active","id":"0198bc24-f226-7f72-a2a2-143e7d026ddb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi_sta_47" = $1,"poi_id_55" = $2\n'[39m +
    [32m'WHERE "poi_id_55" = ($3)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f226-7f72-a2a2-143e7d026ddb'[39m,
    [32m'0198bc24-f226-7f72-a2a2-143e7d026ddb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f222-7f9a-9b66-b862808188b9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_rea_44" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Late return'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding UserPointDeductionRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserPointDeductionRelation"."use_id_92" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "UserPointDeductionRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("UserPointDeductionRelation"."poi_use_104" = $1 AND "UserPointDeductionRelation"."poi_id_55" = $2) AND "UserPointDeductionRelation"."use_id_92" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f216-7025-956b-329116b80d83'[39m,
    [32m'0198bc24-f226-7f72-a2a2-143e7d026ddb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f3c7-77f2-9d87-7f3c1585086b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f3c7-77f2-9d87-7f3c1585086b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-2","role":"admin"},"query":{},"payload":{"name":"Another Target","email":"another.target@example.com","role":"student"},"args":{"user":{"id":"admin-2","role":"admin"},"payload":{"name":"Another Target","email":"another.target@example.com","role":"student"}},"activity":{"_rowId":1,"id":"0198bc24-f3c7-77f2-9d87-7f3c1585086b","&":{"id":"0198bc24-f3c7-77f2-9d87-7f3eebf22228"}},"id":"0198bc24-f3c7-77f2-9d87-7f3d9c8872b1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-2","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Another Target","email":"another.target@example.com","role":"student"}'[39m,
    [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m,
    [32m'0198bc24-f3c7-77f2-9d87-7f3c1585086b'[39m,
    [32m'0198bc24-f3c7-77f2-9d87-7f3eebf22228'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Another Target","email":"another.target@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:35.082Z","_User_bound_sourceRecordId":"0198bc24-f3c7-77f2-9d87-7f3d9c8872b1","_User_bound_transformIndex":0,"id":"0198bc24-f3ca-7677-8abc-a90b731826d8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Another Target'[39m,
    [32m'another.target@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.082Z'[39m,
    [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m,
    [33m0[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f3ca-7677-8abc-a90b731826d8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f3ca-7677-8abc-a90b731826d8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:35.086Z","id":"0198bc24-f3ca-7677-8abc-a90b731826d8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:35.086Z'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3c7-77f2-9d87-7f3d9c8872b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'another.target@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
[INFO] interaction: IssuePointDeduction {}
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f3d5-71f2-9175-df93300cd9e7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f3d5-71f2-9175-df93300cd9e7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"IssuePointDeduction","interactionId":"cff5d596-7634-4a2f-8a75-4ebeb43a0d0b","user":{"id":"admin-2","role":"admin"},"query":{},"payload":{"targetUserId":"0198bc24-f3ca-7677-8abc-a90b731826d8","reason":"Noise violation","points":3,"category":"dormitory_rules"},"args":{"user":{"id":"admin-2","role":"admin"},"payload":{"targetUserId":"0198bc24-f3ca-7677-8abc-a90b731826d8","reason":"Noise violation","points":3,"category":"dormitory_rules"}},"activity":{"_rowId":2,"id":"0198bc24-f3d5-71f2-9175-df93300cd9e7","&":{"id":"0198bc24-f3d6-7799-b1a0-4eda82c1acba"}},"id":"0198bc24-f3d6-7799-b1a0-4ed95f5ddc35"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'IssuePointDeduction'[39m,
    [32m'cff5d596-7634-4a2f-8a75-4ebeb43a0d0b'[39m,
    [32m'{"id":"admin-2","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc24-f3ca-7677-8abc-a90b731826d8","reason":"Noise violation","points":3,"category":"dormitory_rules"}'[39m,
    [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m,
    [32m'0198bc24-f3d5-71f2-9175-df93300cd9e7'[39m,
    [32m'0198bc24-f3d6-7799-b1a0-4eda82c1acba'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for creation with data {"reason":"Noise violation","points":3,"category":"dormitory_rules","status":"active","description":null,"evidence":null,"deductedAt":"2025-08-18T07:46:35.098Z","createdAt":"2025-08-18T07:46:35.098Z","user":{"id":"0198bc24-f3ca-7677-8abc-a90b731826d8","&":{"id":"0198bc24-f3db-7a02-a109-5f7efbfc8790"}},"_PointDeduction_bound_sourceRecordId":"0198bc24-f3d6-7799-b1a0-4ed95f5ddc35","_PointDeduction_bound_transformIndex":0,"id":"0198bc24-f3db-7a02-a109-5f7dcbbebe44"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'insert'[39m,
  name: [32m'create record PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "PointDeduction"\n'[39m +
    [32m'("poi_rea_44","poi_poi_45","poi_cat_46","poi_sta_47","poi_des_48","poi_evi_49","poi_ded_50","poi_cre_51","poi__52","poi__53","poi_id_55","poi__54","poi_use_104","use_id_92")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Noise violation'[39m,
    [33m3[39m,
    [32m'dormitory_rules'[39m,
    [32m'active'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:35.098Z'[39m,
    [32m'2025-08-18T07:46:35.098Z'[39m,
    [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m,
    [33m0[39m,
    [32m'0198bc24-f3db-7a02-a109-5f7dcbbebe44'[39m,
    [32m'active'[39m,
    [32m'0198bc24-f3ca-7677-8abc-a90b731826d8'[39m,
    [32m'0198bc24-f3db-7a02-a109-5f7efbfc8790'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f3db-7a02-a109-5f7dcbbebe44'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"status":"active","id":"0198bc24-f3db-7a02-a109-5f7dcbbebe44"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi_sta_47" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f3db-7a02-a109-5f7dcbbebe44'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc24-f3db-7a02-a109-5f7dcbbebe44'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f3d6-7799-b1a0-4ed95f5ddc35'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_6"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_rea_44" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Noise violation'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f574-7ded-bf25-f22cb2058915"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f574-7ded-bf25-f22cb2058915'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Dorm Head","email":"dormhead@example.com","role":"dormHead"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Dorm Head","email":"dormhead@example.com","role":"dormHead"}},"activity":{"_rowId":1,"id":"0198bc24-f574-7ded-bf25-f22cb2058915","&":{"id":"0198bc24-f575-7bf2-b53b-e13ce86d0bac"}},"id":"0198bc24-f575-7bf2-b53b-e13b372ed826"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dorm Head","email":"dormhead@example.com","role":"dormHead"}'[39m,
    [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m,
    [32m'0198bc24-f574-7ded-bf25-f22cb2058915'[39m,
    [32m'0198bc24-f575-7bf2-b53b-e13ce86d0bac'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Dorm Head","email":"dormhead@example.com","phone":null,"role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:35.511Z","_User_bound_sourceRecordId":"0198bc24-f575-7bf2-b53b-e13b372ed826","_User_bound_transformIndex":0,"id":"0198bc24-f577-786a-a22f-7ee54217a5fb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dorm Head'[39m,
    [32m'dormhead@example.com'[39m,
    [1mnull[22m,
    [32m'dormHead'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.511Z'[39m,
    [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m,
    [33m0[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f577-786a-a22f-7ee54217a5fb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f577-786a-a22f-7ee54217a5fb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:35.517Z","id":"0198bc24-f577-786a-a22f-7ee54217a5fb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:35.517Z'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f575-7bf2-b53b-e13b372ed826'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f583-7277-86b1-ff26c2c9b1e0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f583-7277-86b1-ff26c2c9b1e0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Problem Student","email":"problem@example.com","role":"student"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Problem Student","email":"problem@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc24-f583-7277-86b1-ff26c2c9b1e0","&":{"id":"0198bc24-f583-7277-86b1-ff28bdb1f92a"}},"id":"0198bc24-f583-7277-86b1-ff2730329af0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Problem Student","email":"problem@example.com","role":"student"}'[39m,
    [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m,
    [32m'0198bc24-f583-7277-86b1-ff26c2c9b1e0'[39m,
    [32m'0198bc24-f583-7277-86b1-ff28bdb1f92a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Problem Student","email":"problem@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:35.526Z","_User_bound_sourceRecordId":"0198bc24-f583-7277-86b1-ff2730329af0","_User_bound_transformIndex":0,"id":"0198bc24-f586-7833-9a05-5d9555fe9f64"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Problem Student'[39m,
    [32m'problem@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.526Z'[39m,
    [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m,
    [33m0[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f586-7833-9a05-5d9555fe9f64"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f586-7833-9a05-5d9555fe9f64"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:35.530Z","id":"0198bc24-f586-7833-9a05-5d9555fe9f64"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:35.530Z'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f583-7277-86b1-ff2730329af0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'dormhead@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'problem@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f591-7db5-a9b2-7f1236890f48"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f591-7db5-a9b2-7f1236890f48'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"id":"0198bc24-f577-786a-a22f-7ee54217a5fb"},"query":{},"payload":{"targetUserId":"0198bc24-f586-7833-9a05-5d9555fe9f64","reason":"Multiple rule violations"},"args":{"user":{"id":"0198bc24-f577-786a-a22f-7ee54217a5fb"},"payload":{"targetUserId":"0198bc24-f586-7833-9a05-5d9555fe9f64","reason":"Multiple rule violations"}},"activity":{"_rowId":3,"id":"0198bc24-f591-7db5-a9b2-7f1236890f48","&":{"id":"0198bc24-f592-7080-a2b9-adbbd36b0fbb"}},"id":"0198bc24-f592-7080-a2b9-adba6bf33217"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"id":"0198bc24-f577-786a-a22f-7ee54217a5fb"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc24-f586-7833-9a05-5d9555fe9f64","reason":"Multiple rule violations"}'[39m,
    [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m,
    [32m'0198bc24-f591-7db5-a9b2-7f1236890f48'[39m,
    [32m'0198bc24-f592-7080-a2b9-adbbd36b0fbb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Multiple rule violations","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:35.543Z","updatedAt":"2025-08-18T07:46:35.543Z","targetUser":{"id":"0198bc24-f586-7833-9a05-5d9555fe9f64","&":{"id":"0198bc24-f597-76fa-b62e-ab77ee4fee08"}},"requestedBy":{"id":"0198bc24-f577-786a-a22f-7ee54217a5fb","&":{"id":"0198bc24-f597-76fa-b62e-ab784373428f"}},"_RemovalRequest_bound_sourceRecordId":"0198bc24-f592-7080-a2b9-adba6bf33217","_RemovalRequest_bound_transformIndex":0,"id":"0198bc24-f597-76fa-b62e-ab766f161b00"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Multiple rule violations'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:35.543Z'[39m,
    [32m'2025-08-18T07:46:35.543Z'[39m,
    [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m,
    [33m0[39m,
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m,
    [32m'0198bc24-f597-76fa-b62e-ab77ee4fee08'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m,
    [32m'0198bc24-f597-76fa-b62e-ab784373428f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc24-f597-76fa-b62e-ab766f161b00"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m,
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:35.546Z","id":"0198bc24-f597-76fa-b62e-ab766f161b00"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:35.546Z'[39m,
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m,
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f592-7080-a2b9-adba6bf33217'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Multiple rule violations'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_tar_106" = $2) AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m,
    [32m'0198bc24-f586-7833-9a05-5d9555fe9f64'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestInitiatorRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestInitiatorRelation"."rem_id_95" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestInitiatorRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("RemovalRequestInitiatorRelation"."rem_id_69" = $1 AND "RemovalRequestInitiatorRelation"."rem_req_107" = $2) AND "RemovalRequestInitiatorRelation"."rem_id_95" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f597-76fa-b62e-ab766f161b00'[39m,
    [32m'0198bc24-f577-786a-a22f-7ee54217a5fb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f73e-7a7e-92ce-1e26b2f43093"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f73e-7a7e-92ce-1e26b2f43093'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc24-f73e-7a7e-92ce-1e26b2f43093","&":{"id":"0198bc24-f73f-70cb-9d2a-e8eab9c83669"}},"id":"0198bc24-f73f-70cb-9d2a-e8e9421448fc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m,
    [32m'0198bc24-f73e-7a7e-92ce-1e26b2f43093'[39m,
    [32m'0198bc24-f73f-70cb-9d2a-e8eab9c83669'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:35.968Z","_User_bound_sourceRecordId":"0198bc24-f73f-70cb-9d2a-e8e9421448fc","_User_bound_transformIndex":0,"id":"0198bc24-f741-726d-b985-450663d9fab7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.968Z'[39m,
    [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m,
    [33m0[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f741-726d-b985-450663d9fab7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f741-726d-b985-450663d9fab7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:35.973Z","id":"0198bc24-f741-726d-b985-450663d9fab7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:35.973Z'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f73f-70cb-9d2a-e8e9421448fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f74a-75ce-ad27-599d4f1814f1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f74a-75ce-ad27-599d4f1814f1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"name":"Student User","email":"student@example.com","role":"student"},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"name":"Student User","email":"student@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc24-f74a-75ce-ad27-599d4f1814f1","&":{"id":"0198bc24-f74b-7578-9294-a429ed3cc993"}},"id":"0198bc24-f74b-7578-9294-a428043981d3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@example.com","role":"student"}'[39m,
    [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m,
    [32m'0198bc24-f74a-75ce-ad27-599d4f1814f1'[39m,
    [32m'0198bc24-f74b-7578-9294-a429ed3cc993'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:35.981Z","_User_bound_sourceRecordId":"0198bc24-f74b-7578-9294-a428043981d3","_User_bound_transformIndex":0,"id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.981Z'[39m,
    [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m,
    [33m0[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:35.985Z","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:35.985Z'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f758-7460-a5f8-bf083c2d79be"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f758-7460-a5f8-bf083c2d79be'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"name":"Dorm A","capacity":4,"floor":1,"building":"Building 1"},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"name":"Dorm A","capacity":4,"floor":1,"building":"Building 1"}},"activity":{"_rowId":3,"id":"0198bc24-f758-7460-a5f8-bf083c2d79be","&":{"id":"0198bc24-f759-7576-88d9-f08a4781f13a"}},"id":"0198bc24-f759-7576-88d9-f089158e42a6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dorm A","capacity":4,"floor":1,"building":"Building 1"}'[39m,
    [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m,
    [32m'0198bc24-f758-7460-a5f8-bf083c2d79be'[39m,
    [32m'0198bc24-f759-7576-88d9-f08a4781f13a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Dorm A","capacity":4,"floor":1,"building":"Building 1","status":"active","createdAt":"2025-08-18T07:46:35.996Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:35.996Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:35.996Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:35.996Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:35.996Z"}],"_Dormitory_bound_sourceRecordId":"0198bc24-f759-7576-88d9-f089158e42a6","_Dormitory_bound_transformIndex":0,"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dorm A'[39m,
    [33m4[39m,
    [33m1[39m,
    [32m'Building 1'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.996Z'[39m,
    [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m,
    [33m0[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:35.996Z","dormitory":{"id":"0198bc24-f75c-79eb-8f5b-a5713886492f","&":{"id":"0198bc24-f75d-7a73-b6ab-731b171e6e5b"}},"id":"0198bc24-f75d-7a73-b6ab-731a4cb401ef"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:35.996Z'[39m,
    [32m'0198bc24-f75d-7a73-b6ab-731a4cb401ef'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75d-7a73-b6ab-731b171e6e5b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:35.996Z","dormitory":{"id":"0198bc24-f75c-79eb-8f5b-a5713886492f","&":{"id":"0198bc24-f75e-7f31-bcea-fd5549382a52"}},"id":"0198bc24-f75e-7f31-bcea-fd54aa647751"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:35.996Z'[39m,
    [32m'0198bc24-f75e-7f31-bcea-fd54aa647751'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75e-7f31-bcea-fd5549382a52'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:35.996Z","dormitory":{"id":"0198bc24-f75c-79eb-8f5b-a5713886492f","&":{"id":"0198bc24-f75f-76ff-8022-9975dae56b8c"}},"id":"0198bc24-f75f-76ff-8022-9974625d9627"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:35.996Z'[39m,
    [32m'0198bc24-f75f-76ff-8022-9974625d9627'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75f-76ff-8022-9975dae56b8c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:35.996Z","dormitory":{"id":"0198bc24-f75c-79eb-8f5b-a5713886492f","&":{"id":"0198bc24-f760-723a-818b-3294ef9d0f8a"}},"id":"0198bc24-f760-723a-818b-32934058341a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:35.996Z'[39m,
    [32m'0198bc24-f760-723a-818b-32934058341a'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f760-723a-818b-3294ef9d0f8a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.004Z","id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.004Z'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f759-7576-88d9-f089158e42a6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Dorm A'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f76a-78ac-80d3-ea5e41de2e58"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f76a-78ac-80d3-ea5e41de2e58'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","dormitoryId":"0198bc24-f75c-79eb-8f5b-a5713886492f","bedNumber":1},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","dormitoryId":"0198bc24-f75c-79eb-8f5b-a5713886492f","bedNumber":1}},"activity":{"_rowId":4,"id":"0198bc24-f76a-78ac-80d3-ea5e41de2e58","&":{"id":"0198bc24-f76a-78ac-80d3-ea60163af402"}},"id":"0198bc24-f76a-78ac-80d3-ea5f34593735"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","dormitoryId":"0198bc24-f75c-79eb-8f5b-a5713886492f","bedNumber":1}'[39m,
    [32m'0198bc24-f76a-78ac-80d3-ea5f34593735'[39m,
    [32m'0198bc24-f76a-78ac-80d3-ea5e41de2e58'[39m,
    [32m'0198bc24-f76a-78ac-80d3-ea60163af402'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f76a-78ac-80d3-ea5f34593735'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f76a-78ac-80d3-ea5f34593735'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f76a-78ac-80d3-ea5f34593735'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f76a-78ac-80d3-ea5f34593735'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc24-f74d-7439-a61e-d97242c8e654"},"target":{"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc24-f770-745e-9596-6b2ce99cb2a4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.981Z'[39m,
    [32m'2025-08-18T07:46:35.985Z'[39m,
    [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserBedRelation to flash out, for creation with data {"source":{"id":"0198bc24-f74d-7439-a61e-d97242c8e654"},"target":{"id":"0198bc24-f75d-7a73-b6ab-731a4cb401ef"},"_type":"StateNode","uuid":"c94cf259-f391-4d60-bfba-00ddfc0ca377","name":"exists","_UserBedRelation_bound_currentState":"exists","id":"0198bc24-f776-727c-ab06-d0a4aab801c6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserBedRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__87","use_id_88","use_bed_101","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18","use_dor_100","use__85","use_id_86")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f776-727c-ab06-d0a4aab801c6'[39m,
    [32m'0198bc24-f75d-7a73-b6ab-731a4cb401ef'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:35.981Z'[39m,
    [32m'2025-08-18T07:46:35.985Z'[39m,
    [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'exists'[39m,
    [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f76a-78ac-80d3-ea5f34593735'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_dor_100" = $2) AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: RemoveUserFromDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'RemoveUserFromDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f77a-7ecd-99c7-82d0b8e1c35f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f77a-7ecd-99c7-82d0b8e1c35f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"RemoveUserFromDormitory","interactionId":"a0163348-44fd-4ca2-b3de-537825c27009","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","reason":"Testing removal"},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","reason":"Testing removal"}},"activity":{"_rowId":5,"id":"0198bc24-f77a-7ecd-99c7-82d0b8e1c35f","&":{"id":"0198bc24-f77b-78fd-91d7-0bf22e008ed2"}},"id":"0198bc24-f77b-78fd-91d7-0bf1bd0bcc04"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'RemoveUserFromDormitory'[39m,
    [32m'a0163348-44fd-4ca2-b3de-537825c27009'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","reason":"Testing removal"}'[39m,
    [32m'0198bc24-f77b-78fd-91d7-0bf1bd0bcc04'[39m,
    [32m'0198bc24-f77a-7ecd-99c7-82d0b8e1c35f'[39m,
    [32m'0198bc24-f77b-78fd-91d7-0bf22e008ed2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f77b-78fd-91d7-0bf1bd0bcc04'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_status_bound_currentState":"removed","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__16" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"removed","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f77b-78fd-91d7-0bf1bd0bcc04'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f77b-78fd-91d7-0bf1bd0bcc04'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f77b-78fd-91d7-0bf1bd0bcc04'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_86" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting UserDormitoryRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_86" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [ [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m ] ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete UserDormitoryRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_26"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_86" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'use update to delete UserDormitoryRelation because of sameRowData'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__85" = $1,"use_id_86" = $2,"use_dor_100" = $3\n'[39m +
    [32m'WHERE "use_id_86" = $4\n'[39m +
    [32m' RETURNING "use_id_86" AS id'[39m,
  params: [ [1mnull[22m, [1mnull[22m, [1mnull[22m, [32m'0198bc24-f770-745e-9596-6b2ce99cb2a4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_88" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f776-727c-ab06-d0a4aab801c6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting UserBedRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_88" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [ [32m'0198bc24-f776-727c-ab06-d0a4aab801c6'[39m ] ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete UserBedRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_26"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_88" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f776-727c-ab06-d0a4aab801c6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'use update to delete UserBedRelation because of sameRowData'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__87" = $1,"use_id_88" = $2,"use_bed_101" = $3\n'[39m +
    [32m'WHERE "use_id_88" = $4\n'[39m +
    [32m' RETURNING "use_id_88" AS id'[39m,
  params: [ [1mnull[22m, [1mnull[22m, [1mnull[22m, [32m'0198bc24-f776-727c-ab06-d0a4aab801c6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f77b-78fd-91d7-0bf1bd0bcc04'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'RemoveUserFromDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_dor_100" = $2) AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f78e-710a-a177-6dc5d723efdf"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f78e-710a-a177-6dc5d723efdf'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","dormitoryId":"0198bc24-f75c-79eb-8f5b-a5713886492f","bedNumber":1},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","dormitoryId":"0198bc24-f75c-79eb-8f5b-a5713886492f","bedNumber":1}},"activity":{"_rowId":6,"id":"0198bc24-f78e-710a-a177-6dc5d723efdf","&":{"id":"0198bc24-f78f-7f03-8914-79d1a2240c77"}},"id":"0198bc24-f78f-7f03-8914-79d00ef3e8dd"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f74d-7439-a61e-d97242c8e654","dormitoryId":"0198bc24-f75c-79eb-8f5b-a5713886492f","bedNumber":1}'[39m,
    [32m'0198bc24-f78f-7f03-8914-79d00ef3e8dd'[39m,
    [32m'0198bc24-f78e-710a-a177-6dc5d723efdf'[39m,
    [32m'0198bc24-f78f-7f03-8914-79d1a2240c77'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f78f-7f03-8914-79d00ef3e8dd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f78f-7f03-8914-79d00ef3e8dd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f78f-7f03-8914-79d00ef3e8dd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f78f-7f03-8914-79d00ef3e8dd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc24-f74d-7439-a61e-d97242c8e654"},"target":{"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc24-f794-7505-8b4b-097b0b510a60"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f794-7505-8b4b-097b0b510a60'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'2025-08-18T07:46:35.981Z'[39m,
    [32m'2025-08-18T07:46:35.985Z'[39m,
    [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f794-7505-8b4b-097b0b510a60'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc24-f75c-79eb-8f5b-a5713886492f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserBedRelation to flash out, for creation with data {"source":{"id":"0198bc24-f74d-7439-a61e-d97242c8e654"},"target":{"id":"0198bc24-f75d-7a73-b6ab-731a4cb401ef"},"_type":"StateNode","uuid":"c94cf259-f391-4d60-bfba-00ddfc0ca377","name":"exists","_UserBedRelation_bound_currentState":"exists","id":"0198bc24-f799-7c33-8594-7701d904f2ef"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserBedRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__87","use_id_88","use_bed_101","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18","use_dor_100","use__85","use_id_86")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f799-7c33-8594-7701d904f2ef'[39m,
    [32m'0198bc24-f75d-7a73-b6ab-731a4cb401ef'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'2025-08-18T07:46:35.981Z'[39m,
    [32m'2025-08-18T07:46:35.985Z'[39m,
    [32m'0198bc24-f74b-7578-9294-a428043981d3'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m,
    [32m'exists'[39m,
    [32m'0198bc24-f794-7505-8b4b-097b0b510a60'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f78f-7f03-8914-79d00ef3e8dd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_dor_100" = $2) AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f79c-7e9d-b628-f80173477adf"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f79c-7e9d-b628-f80173477adf'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"targetUserId":"0198bc24-f74d-7439-a61e-d97242c8e654","reason":"Test removal via request"},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"targetUserId":"0198bc24-f74d-7439-a61e-d97242c8e654","reason":"Test removal via request"}},"activity":{"_rowId":7,"id":"0198bc24-f79c-7e9d-b628-f80173477adf","&":{"id":"0198bc24-f79d-78fe-a472-4e8ea300be5e"}},"id":"0198bc24-f79d-78fe-a472-4e8d9396b3b8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc24-f74d-7439-a61e-d97242c8e654","reason":"Test removal via request"}'[39m,
    [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m,
    [32m'0198bc24-f79c-7e9d-b628-f80173477adf'[39m,
    [32m'0198bc24-f79d-78fe-a472-4e8ea300be5e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Test removal via request","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:36.067Z","updatedAt":"2025-08-18T07:46:36.067Z","targetUser":{"id":"0198bc24-f74d-7439-a61e-d97242c8e654","&":{"id":"0198bc24-f7a3-784b-9787-23ae6f1ae0d8"}},"requestedBy":{"id":"0198bc24-f741-726d-b985-450663d9fab7","&":{"id":"0198bc24-f7a3-784b-9787-23af0b7caa02"}},"_RemovalRequest_bound_sourceRecordId":"0198bc24-f79d-78fe-a472-4e8d9396b3b8","_RemovalRequest_bound_transformIndex":0,"id":"0198bc24-f7a3-784b-9787-23adcad8709e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Test removal via request'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:36.067Z'[39m,
    [32m'2025-08-18T07:46:36.067Z'[39m,
    [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m,
    [33m0[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f7a3-784b-9787-23ae6f1ae0d8'[39m,
    [32m'0198bc24-f741-726d-b985-450663d9fab7'[39m,
    [32m'0198bc24-f7a3-784b-9787-23af0b7caa02'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc24-f7a3-784b-9787-23adcad8709e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.070Z","id":"0198bc24-f7a3-784b-9787-23adcad8709e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.070Z'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f79d-78fe-a472-4e8d9396b3b8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test removal via request'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[INFO] interaction: ProcessRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f7aa-761d-b5b1-181c07b56dac"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f7aa-761d-b5b1-181c07b56dac'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"ProcessRemovalRequest","interactionId":"0bd3bd79-5e1c-4142-aab5-ddbc08b8f126","user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"query":{},"payload":{"requestId":"0198bc24-f7a3-784b-9787-23adcad8709e","decision":"approved","adminComment":"Approved for testing"},"args":{"user":{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"},"payload":{"requestId":"0198bc24-f7a3-784b-9787-23adcad8709e","decision":"approved","adminComment":"Approved for testing"}},"activity":{"_rowId":8,"id":"0198bc24-f7aa-761d-b5b1-181c07b56dac","&":{"id":"0198bc24-f7aa-761d-b5b1-181e5ebcd22e"}},"id":"0198bc24-f7aa-761d-b5b1-181dd471f6e6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'ProcessRemovalRequest'[39m,
    [32m'0bd3bd79-5e1c-4142-aab5-ddbc08b8f126'[39m,
    [32m'{"id":"0198bc24-f741-726d-b985-450663d9fab7","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"requestId":"0198bc24-f7a3-784b-9787-23adcad8709e","decision":"approved","adminComment":"Approved for testing"}'[39m,
    [32m'0198bc24-f7aa-761d-b5b1-181dd471f6e6'[39m,
    [32m'0198bc24-f7aa-761d-b5b1-181c07b56dac'[39m,
    [32m'0198bc24-f7aa-761d-b5b1-181e5ebcd22e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7aa-761d-b5b1-181dd471f6e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_updatedAt_bound_currentState":"updated","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__17" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'updated'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.081Z","id":"0198bc24-f74d-7439-a61e-d97242c8e654"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.081Z'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7aa-761d-b5b1-181dd471f6e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7aa-761d-b5b1-181dd471f6e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7aa-761d-b5b1-181dd471f6e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"_RemovalRequest_status_bound_currentState":"approved","id":"0198bc24-f7a3-784b-9787-23adcad8709e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem__65" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"approved","id":"0198bc24-f7a3-784b-9787-23adcad8709e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m,
    [32m'0198bc24-f7a3-784b-9787-23adcad8709e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [90mundefined[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
    → TypeError: Cannot read properties of undefined (reading 'status')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'status')
      at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: ProcessRemovalRequest {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (interactionName: ProcessRemovalRequest)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
        → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_dor_100" = $2) AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-f74d-7439-a61e-d97242c8e654'[39m,
    [32m'0198bc24-f75c-79eb-8f5b-a5713886492f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f95e-715d-9e98-74223c66a788"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f95e-715d-9e98-74223c66a788'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc24-f95e-715d-9e98-74223c66a788","&":{"id":"0198bc24-f95f-784e-a2dd-8c8be2ce7a80"}},"id":"0198bc24-f95f-784e-a2dd-8c8aa35931bb"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m,
    [32m'0198bc24-f95e-715d-9e98-74223c66a788'[39m,
    [32m'0198bc24-f95f-784e-a2dd-8c8be2ce7a80'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:36.513Z","_User_bound_sourceRecordId":"0198bc24-f95f-784e-a2dd-8c8aa35931bb","_User_bound_transformIndex":0,"id":"0198bc24-f961-7920-b46a-619562e46e72"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:36.513Z'[39m,
    [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m,
    [33m0[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f961-7920-b46a-619562e46e72"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f961-7920-b46a-619562e46e72"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.519Z","id":"0198bc24-f961-7920-b46a-619562e46e72"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.519Z'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f95f-784e-a2dd-8c8aa35931bb'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f96e-74a9-a2a2-d097eef24c7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f96e-74a9-a2a2-d097eef24c7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"name":"Student User","email":"student@example.com","role":"student"},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"name":"Student User","email":"student@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc24-f96e-74a9-a2a2-d097eef24c7d","&":{"id":"0198bc24-f96f-75b8-b878-39d5f9726ba3"}},"id":"0198bc24-f96f-75b8-b878-39d45690a537"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@example.com","role":"student"}'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [32m'0198bc24-f96e-74a9-a2a2-d097eef24c7d'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d5f9726ba3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:36.528Z","_User_bound_sourceRecordId":"0198bc24-f96f-75b8-b878-39d45690a537","_User_bound_transformIndex":0,"id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:36.528Z'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [33m0[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.532Z","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.532Z'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f97b-7091-98c8-d3288ad6becd"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f97b-7091-98c8-d3288ad6becd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"name":"Dorm B","capacity":4},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"name":"Dorm B","capacity":4}},"activity":{"_rowId":3,"id":"0198bc24-f97b-7091-98c8-d3288ad6becd","&":{"id":"0198bc24-f97c-7c28-a3f5-4e3b883cd76c"}},"id":"0198bc24-f97c-7c28-a3f5-4e3a312432b1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dorm B","capacity":4}'[39m,
    [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m,
    [32m'0198bc24-f97b-7091-98c8-d3288ad6becd'[39m,
    [32m'0198bc24-f97c-7c28-a3f5-4e3b883cd76c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Dorm B","capacity":4,"floor":null,"building":null,"status":"active","createdAt":"2025-08-18T07:46:36.543Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:36.543Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:36.543Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:36.543Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:36.543Z"}],"_Dormitory_bound_sourceRecordId":"0198bc24-f97c-7c28-a3f5-4e3a312432b1","_Dormitory_bound_transformIndex":0,"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dorm B'[39m,
    [33m4[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:36.543Z'[39m,
    [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m,
    [33m0[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:36.543Z","dormitory":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5","&":{"id":"0198bc24-f980-7d59-9689-e67e9fda19ee"}},"id":"0198bc24-f980-7d59-9689-e67dcbeb0001"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:36.543Z'[39m,
    [32m'0198bc24-f980-7d59-9689-e67dcbeb0001'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f980-7d59-9689-e67e9fda19ee'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:36.543Z","dormitory":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5","&":{"id":"0198bc24-f981-70da-84bb-81571f7567bc"}},"id":"0198bc24-f981-70da-84bb-8156183de692"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:36.543Z'[39m,
    [32m'0198bc24-f981-70da-84bb-8156183de692'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f981-70da-84bb-81571f7567bc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:36.543Z","dormitory":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5","&":{"id":"0198bc24-f983-7816-8cb5-8423a4c8b030"}},"id":"0198bc24-f983-7816-8cb5-8422b6127621"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:36.543Z'[39m,
    [32m'0198bc24-f983-7816-8cb5-8422b6127621'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f983-7816-8cb5-8423a4c8b030'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:36.543Z","dormitory":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5","&":{"id":"0198bc24-f983-7816-8cb5-8425f47f0c67"}},"id":"0198bc24-f983-7816-8cb5-842469f2e75c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:36.543Z'[39m,
    [32m'0198bc24-f983-7816-8cb5-842469f2e75c'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f983-7816-8cb5-8425f47f0c67'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.551Z","id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.551Z'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97c-7c28-a3f5-4e3a312432b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Dorm B'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Bed"."bed_id_43" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f98d-71af-a4cc-611bd80f2731"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f98d-71af-a4cc-611bd80f2731'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5","bedNumber":1},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5","bedNumber":1}},"activity":{"_rowId":4,"id":"0198bc24-f98d-71af-a4cc-611bd80f2731","&":{"id":"0198bc24-f98e-7811-9183-d09408f9dfb3"}},"id":"0198bc24-f98e-7811-9183-d0938b760a58"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5","bedNumber":1}'[39m,
    [32m'0198bc24-f98e-7811-9183-d0938b760a58'[39m,
    [32m'0198bc24-f98d-71af-a4cc-611bd80f2731'[39m,
    [32m'0198bc24-f98e-7811-9183-d09408f9dfb3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f98e-7811-9183-d0938b760a58'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f98e-7811-9183-d0938b760a58'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f98e-7811-9183-d0938b760a58'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f98e-7811-9183-d0938b760a58'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc24-f970-7314-9bab-93e05b464aae"},"target":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc24-f993-7f52-b4e4-7cfec573025b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:36.528Z'[39m,
    [32m'2025-08-18T07:46:36.532Z'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserBedRelation to flash out, for creation with data {"source":{"id":"0198bc24-f970-7314-9bab-93e05b464aae"},"target":{"id":"0198bc24-f980-7d59-9689-e67dcbeb0001"},"_type":"StateNode","uuid":"c94cf259-f391-4d60-bfba-00ddfc0ca377","name":"exists","_UserBedRelation_bound_currentState":"exists","id":"0198bc24-f998-78db-b1e3-8395358af357"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserBedRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__87","use_id_88","use_bed_101","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18","use_dor_100","use__85","use_id_86")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f998-78db-b1e3-8395358af357'[39m,
    [32m'0198bc24-f980-7d59-9689-e67dcbeb0001'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:36.528Z'[39m,
    [32m'2025-08-18T07:46:36.532Z'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'exists'[39m,
    [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f98e-7811-9183-d0938b760a58'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'LEFT JOIN "Bed" AS \n'[39m +
    [32m'"UserBedRelation_target" ON \n'[39m +
    [32m'"UserBedRelation"."use_bed_101" = "UserBedRelation_target"."bed_id_43"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: RemoveUserFromDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'RemoveUserFromDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f99c-7bda-9fb2-f3f6b1deffc8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f99c-7bda-9fb2-f3f6b1deffc8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"RemoveUserFromDormitory","interactionId":"a0163348-44fd-4ca2-b3de-537825c27009","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae"},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae"}},"activity":{"_rowId":5,"id":"0198bc24-f99c-7bda-9fb2-f3f6b1deffc8","&":{"id":"0198bc24-f99c-7bda-9fb2-f3f82b920d51"}},"id":"0198bc24-f99c-7bda-9fb2-f3f71ef2dc38"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'RemoveUserFromDormitory'[39m,
    [32m'a0163348-44fd-4ca2-b3de-537825c27009'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
    [32m'0198bc24-f99c-7bda-9fb2-f3f71ef2dc38'[39m,
    [32m'0198bc24-f99c-7bda-9fb2-f3f6b1deffc8'[39m,
    [32m'0198bc24-f99c-7bda-9fb2-f3f82b920d51'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f99c-7bda-9fb2-f3f71ef2dc38'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_status_bound_currentState":"removed","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__16" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"removed","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f99c-7bda-9fb2-f3f71ef2dc38'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f99c-7bda-9fb2-f3f71ef2dc38'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f99c-7bda-9fb2-f3f71ef2dc38'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_86" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting UserDormitoryRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_86" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [ [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m ] ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete UserDormitoryRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_26"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_86" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'use update to delete UserDormitoryRelation because of sameRowData'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__85" = $1,"use_id_86" = $2,"use_dor_100" = $3\n'[39m +
    [32m'WHERE "use_id_86" = $4\n'[39m +
    [32m' RETURNING "use_id_86" AS id'[39m,
  params: [ [1mnull[22m, [1mnull[22m, [1mnull[22m, [32m'0198bc24-f993-7f52-b4e4-7cfec573025b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_88" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f998-78db-b1e3-8395358af357'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting UserBedRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_88" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [ [32m'0198bc24-f998-78db-b1e3-8395358af357'[39m ] ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete UserBedRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_26"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_88" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f998-78db-b1e3-8395358af357'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'use update to delete UserBedRelation because of sameRowData'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__87" = $1,"use_id_88" = $2,"use_bed_101" = $3\n'[39m +
    [32m'WHERE "use_id_88" = $4\n'[39m +
    [32m' RETURNING "use_id_88" AS id'[39m,
  params: [ [1mnull[22m, [1mnull[22m, [1mnull[22m, [32m'0198bc24-f998-78db-b1e3-8395358af357'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f99c-7bda-9fb2-f3f71ef2dc38'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'RemoveUserFromDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f9af-7542-8295-8b19179b24ee"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f9af-7542-8295-8b19179b24ee'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5"},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}},"activity":{"_rowId":6,"id":"0198bc24-f9af-7542-8295-8b19179b24ee","&":{"id":"0198bc24-f9af-7542-8295-8b1be8a853f5"}},"id":"0198bc24-f9af-7542-8295-8b1a388d45ce"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
    [32m'0198bc24-f9af-7542-8295-8b1a388d45ce'[39m,
    [32m'0198bc24-f9af-7542-8295-8b19179b24ee'[39m,
    [32m'0198bc24-f9af-7542-8295-8b1be8a853f5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9af-7542-8295-8b1a388d45ce'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9af-7542-8295-8b1a388d45ce'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9af-7542-8295-8b1a388d45ce'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9af-7542-8295-8b1a388d45ce'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc24-f970-7314-9bab-93e05b464aae"},"target":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc24-f9b5-7723-b6a0-95b92d74b356"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f9b5-7723-b6a0-95b92d74b356'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'2025-08-18T07:46:36.528Z'[39m,
    [32m'2025-08-18T07:46:36.532Z'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f9b5-7723-b6a0-95b92d74b356'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stderr | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)

Caused by:
  → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
    → TypeError: Cannot read properties of null (reading 'id')

Stack trace:
  TypeError: Cannot read properties of null (reading 'id')
      at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)
  
  Caused by:
    → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: AssignUserToDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (interactionName: AssignUserToDormitory)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
        → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: RemoveUserFromDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'RemoveUserFromDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f9bb-7ac8-b592-a0ac45eaa015"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f9bb-7ac8-b592-a0ac45eaa015'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"RemoveUserFromDormitory","interactionId":"a0163348-44fd-4ca2-b3de-537825c27009","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae"},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae"}},"activity":{"_rowId":7,"id":"0198bc24-f9bb-7ac8-b592-a0ac45eaa015","&":{"id":"0198bc24-f9bc-7751-87b1-909c6f5c8a94"}},"id":"0198bc24-f9bc-7751-87b1-909b75dd3e72"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'RemoveUserFromDormitory'[39m,
    [32m'a0163348-44fd-4ca2-b3de-537825c27009'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
    [32m'0198bc24-f9bc-7751-87b1-909b75dd3e72'[39m,
    [32m'0198bc24-f9bb-7ac8-b592-a0ac45eaa015'[39m,
    [32m'0198bc24-f9bc-7751-87b1-909c6f5c8a94'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9bc-7751-87b1-909b75dd3e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9bc-7751-87b1-909b75dd3e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9bc-7751-87b1-909b75dd3e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9bc-7751-87b1-909b75dd3e72'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'RemoveUserFromDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stderr | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)

Caused by:
  → ComputationError: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id')
    → TypeError: Cannot read properties of undefined (reading 'id')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'id')
      at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)
  
  Caused by:
    → ComputationError: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id')
      → TypeError: Cannot read properties of undefined (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: RemoveUserFromDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id') (interactionName: RemoveUserFromDormitory)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id')
      → ComputationError: Computation execution failed. Caused by: Cannot read properties of undefined (reading 'id')
        → TypeError: Cannot read properties of undefined (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f9c3-7494-83b4-8dba61dc0b74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f9c3-7494-83b4-8dba61dc0b74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5","bedNumber":2},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5","bedNumber":2}},"activity":{"_rowId":8,"id":"0198bc24-f9c3-7494-83b4-8dba61dc0b74","&":{"id":"0198bc24-f9c4-7386-80a3-8641e3379bf1"}},"id":"0198bc24-f9c4-7386-80a3-864025e99f11"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-f970-7314-9bab-93e05b464aae","dormitoryId":"0198bc24-f97f-7118-a61a-b4e72d271ed5","bedNumber":2}'[39m,
    [32m'0198bc24-f9c4-7386-80a3-864025e99f11'[39m,
    [32m'0198bc24-f9c3-7494-83b4-8dba61dc0b74'[39m,
    [32m'0198bc24-f9c4-7386-80a3-8641e3379bf1'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9c4-7386-80a3-864025e99f11'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9c4-7386-80a3-864025e99f11'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9c4-7386-80a3-864025e99f11'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9c4-7386-80a3-864025e99f11'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc24-f970-7314-9bab-93e05b464aae"},"target":{"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc24-f9c9-7b92-b0b3-417a0313ee8f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f9c9-7b92-b0b3-417a0313ee8f'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'2025-08-18T07:46:36.528Z'[39m,
    [32m'2025-08-18T07:46:36.532Z'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f9c9-7b92-b0b3-417a0313ee8f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc24-f97f-7118-a61a-b4e72d271ed5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserBedRelation to flash out, for creation with data {"source":{"id":"0198bc24-f970-7314-9bab-93e05b464aae"},"target":{"id":"0198bc24-f981-70da-84bb-8156183de692"},"_type":"StateNode","uuid":"c94cf259-f391-4d60-bfba-00ddfc0ca377","name":"exists","_UserBedRelation_bound_currentState":"exists","id":"0198bc24-f9ce-7493-897f-6ba443a36529"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserBedRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__87","use_id_88","use_bed_101","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18","use_dor_100","use__85","use_id_86")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-f9ce-7493-897f-6ba443a36529'[39m,
    [32m'0198bc24-f981-70da-84bb-8156183de692'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'2025-08-18T07:46:36.528Z'[39m,
    [32m'2025-08-18T07:46:36.532Z'[39m,
    [32m'0198bc24-f96f-75b8-b878-39d45690a537'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'removed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f97f-7118-a61a-b4e72d271ed5'[39m,
    [32m'exists'[39m,
    [32m'0198bc24-f9c9-7b92-b0b3-417a0313ee8f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9c4-7386-80a3-864025e99f11'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'LEFT JOIN "Bed" AS \n'[39m +
    [32m'"UserBedRelation_target" ON \n'[39m +
    [32m'"UserBedRelation"."use_bed_101" = "UserBedRelation_target"."bed_id_43"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f9d3-7979-96bd-a29689a06c3a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f9d3-7979-96bd-a29689a06c3a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"targetUserId":"0198bc24-f970-7314-9bab-93e05b464aae","reason":"Test removal with bed"},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"targetUserId":"0198bc24-f970-7314-9bab-93e05b464aae","reason":"Test removal with bed"}},"activity":{"_rowId":9,"id":"0198bc24-f9d3-7979-96bd-a29689a06c3a","&":{"id":"0198bc24-f9d3-7979-96bd-a298dfdb83e3"}},"id":"0198bc24-f9d3-7979-96bd-a2970b49f3e6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc24-f970-7314-9bab-93e05b464aae","reason":"Test removal with bed"}'[39m,
    [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m,
    [32m'0198bc24-f9d3-7979-96bd-a29689a06c3a'[39m,
    [32m'0198bc24-f9d3-7979-96bd-a298dfdb83e3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Test removal with bed","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:36.632Z","updatedAt":"2025-08-18T07:46:36.632Z","targetUser":{"id":"0198bc24-f970-7314-9bab-93e05b464aae","&":{"id":"0198bc24-f9d8-7d13-8bbe-229e15850a95"}},"requestedBy":{"id":"0198bc24-f961-7920-b46a-619562e46e72","&":{"id":"0198bc24-f9d8-7d13-8bbe-229f7aab4ab6"}},"_RemovalRequest_bound_sourceRecordId":"0198bc24-f9d3-7979-96bd-a2970b49f3e6","_RemovalRequest_bound_transformIndex":0,"id":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Test removal with bed'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:36.632Z'[39m,
    [32m'2025-08-18T07:46:36.632Z'[39m,
    [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m,
    [33m0[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229e15850a95'[39m,
    [32m'0198bc24-f961-7920-b46a-619562e46e72'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229f7aab4ab6'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.635Z","id":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.635Z'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d3-7979-96bd-a2970b49f3e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test removal with bed'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[INFO] interaction: ProcessRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-f9de-750d-80c7-2344ff11e7ef"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-f9de-750d-80c7-2344ff11e7ef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"ProcessRemovalRequest","interactionId":"0bd3bd79-5e1c-4142-aab5-ddbc08b8f126","user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"query":{},"payload":{"requestId":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761","decision":"approved","adminComment":"Approved"},"args":{"user":{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"},"payload":{"requestId":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761","decision":"approved","adminComment":"Approved"}},"activity":{"_rowId":10,"id":"0198bc24-f9de-750d-80c7-2344ff11e7ef","&":{"id":"0198bc24-f9df-7109-a0ef-18cf0c6e73c4"}},"id":"0198bc24-f9df-7109-a0ef-18ce296ac24b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'ProcessRemovalRequest'[39m,
    [32m'0bd3bd79-5e1c-4142-aab5-ddbc08b8f126'[39m,
    [32m'{"id":"0198bc24-f961-7920-b46a-619562e46e72","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"requestId":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761","decision":"approved","adminComment":"Approved"}'[39m,
    [32m'0198bc24-f9df-7109-a0ef-18ce296ac24b'[39m,
    [32m'0198bc24-f9de-750d-80c7-2344ff11e7ef'[39m,
    [32m'0198bc24-f9df-7109-a0ef-18cf0c6e73c4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9df-7109-a0ef-18ce296ac24b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_updatedAt_bound_currentState":"updated","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__17" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'updated'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:36.645Z","id":"0198bc24-f970-7314-9bab-93e05b464aae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:36.645Z'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m,
    [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9df-7109-a0ef-18ce296ac24b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9df-7109-a0ef-18ce296ac24b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9df-7109-a0ef-18ce296ac24b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"_RemovalRequest_status_bound_currentState":"approved","id":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem__65" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"approved","id":"0198bc24-f9d8-7d13-8bbe-229d5fe7a761"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m,
    [32m'0198bc24-f9d8-7d13-8bbe-229d5fe7a761'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [90mundefined[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stderr | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
    → TypeError: Cannot read properties of undefined (reading 'status')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'status')
      at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: ProcessRemovalRequest {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (interactionName: ProcessRemovalRequest)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
        → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserBedRelation"."use_id_18" = $1 AND "UserBedRelation"."use_id_88" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-f970-7314-9bab-93e05b464aae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Admin'[39m,
    [32m'admin@test.com'[39m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.065Z'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.071Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.071Z'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m,
    [32m'0198bc24-fb89-7313-a986-40832cb3a679'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-fb90-79cb-b1f2-932b7c63c6ad"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-fb90-79cb-b1f2-932b7c63c6ad'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"query":{},"payload":{"name":"Student User","email":"student@test.com","role":"student"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"payload":{"name":"Student User","email":"student@test.com","role":"student"}},"activity":{"_rowId":1,"id":"0198bc24-fb90-79cb-b1f2-932b7c63c6ad","&":{"id":"0198bc24-fb91-7c1f-9015-a43df37a05e4"}},"id":"0198bc24-fb91-7c1f-9015-a43c17d2b75a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@test.com","role":"student"}'[39m,
    [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m,
    [32m'0198bc24-fb90-79cb-b1f2-932b7c63c6ad'[39m,
    [32m'0198bc24-fb91-7c1f-9015-a43df37a05e4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@test.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:37.075Z","_User_bound_sourceRecordId":"0198bc24-fb91-7c1f-9015-a43c17d2b75a","_User_bound_transformIndex":0,"id":"0198bc24-fb93-7200-8959-beb265231c51"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@test.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.075Z'[39m,
    [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m,
    [33m0[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-fb93-7200-8959-beb265231c51"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-fb93-7200-8959-beb265231c51"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.078Z","id":"0198bc24-fb93-7200-8959-beb265231c51"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.078Z'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@test.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-fb9c-7bef-a68a-acd66c9350e4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-fb9c-7bef-a68a-acd66c9350e4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"query":{},"payload":{"name":"Test Dormitory","capacity":4,"floor":1,"building":"Building A"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"payload":{"name":"Test Dormitory","capacity":4,"floor":1,"building":"Building A"}},"activity":{"_rowId":2,"id":"0198bc24-fb9c-7bef-a68a-acd66c9350e4","&":{"id":"0198bc24-fb9d-7247-afdf-dc95878df401"}},"id":"0198bc24-fb9d-7247-afdf-dc9457552c76"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test Dormitory","capacity":4,"floor":1,"building":"Building A"}'[39m,
    [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m,
    [32m'0198bc24-fb9c-7bef-a68a-acd66c9350e4'[39m,
    [32m'0198bc24-fb9d-7247-afdf-dc95878df401'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Test Dormitory","capacity":4,"floor":1,"building":"Building A","status":"active","createdAt":"2025-08-18T07:46:37.088Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:37.088Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:37.088Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:37.088Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:37.088Z"}],"_Dormitory_bound_sourceRecordId":"0198bc24-fb9d-7247-afdf-dc9457552c76","_Dormitory_bound_transformIndex":0,"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test Dormitory'[39m,
    [33m4[39m,
    [33m1[39m,
    [32m'Building A'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.088Z'[39m,
    [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m,
    [33m0[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:37.088Z","dormitory":{"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","&":{"id":"0198bc24-fba2-765f-8bb8-c67524f79a09"}},"id":"0198bc24-fba2-765f-8bb8-c6748b7f20d2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.088Z'[39m,
    [32m'0198bc24-fba2-765f-8bb8-c6748b7f20d2'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba2-765f-8bb8-c67524f79a09'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:37.088Z","dormitory":{"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","&":{"id":"0198bc24-fba3-701b-aa9a-66c2d82af79a"}},"id":"0198bc24-fba3-701b-aa9a-66c1f94db632"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.088Z'[39m,
    [32m'0198bc24-fba3-701b-aa9a-66c1f94db632'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba3-701b-aa9a-66c2d82af79a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:37.088Z","dormitory":{"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","&":{"id":"0198bc24-fba3-701b-aa9a-66c4c36468a9"}},"id":"0198bc24-fba3-701b-aa9a-66c337db16d1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.088Z'[39m,
    [32m'0198bc24-fba3-701b-aa9a-66c337db16d1'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba3-701b-aa9a-66c4c36468a9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:37.088Z","dormitory":{"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","&":{"id":"0198bc24-fba4-707f-8fac-5307e8aab368"}},"id":"0198bc24-fba4-707f-8fac-53069f5d75a3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.088Z'[39m,
    [32m'0198bc24-fba4-707f-8fac-53069f5d75a3'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba4-707f-8fac-5307e8aab368'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.096Z","id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.096Z'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb9d-7247-afdf-dc9457552c76'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test Dormitory'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-fbad-7f90-87ae-22c48e98e83c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-fbad-7f90-87ae-22c48e98e83c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"query":{},"payload":{"userId":"0198bc24-fb93-7200-8959-beb265231c51","dormitoryId":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","bedNumber":1},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"payload":{"userId":"0198bc24-fb93-7200-8959-beb265231c51","dormitoryId":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","bedNumber":1}},"activity":{"_rowId":3,"id":"0198bc24-fbad-7f90-87ae-22c48e98e83c","&":{"id":"0198bc24-fbad-7f90-87ae-22c610a224a3"}},"id":"0198bc24-fbad-7f90-87ae-22c578c4dee7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-fb93-7200-8959-beb265231c51","dormitoryId":"0198bc24-fba0-7e1d-9aef-8b73e5a81117","bedNumber":1}'[39m,
    [32m'0198bc24-fbad-7f90-87ae-22c578c4dee7'[39m,
    [32m'0198bc24-fbad-7f90-87ae-22c48e98e83c'[39m,
    [32m'0198bc24-fbad-7f90-87ae-22c610a224a3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fbad-7f90-87ae-22c578c4dee7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fbad-7f90-87ae-22c578c4dee7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fbad-7f90-87ae-22c578c4dee7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fbad-7f90-87ae-22c578c4dee7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc24-fb93-7200-8959-beb265231c51"},"target":{"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc24-fbb1-745e-b0d1-1a48b07b72a6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-fbb1-745e-b0d1-1a48b07b72a6'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'Student User'[39m,
    [32m'student@test.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.075Z'[39m,
    [32m'2025-08-18T07:46:37.078Z'[39m,
    [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fbb1-745e-b0d1-1a48b07b72a6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc24-fba0-7e1d-9aef-8b73e5a81117"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserBedRelation to flash out, for creation with data {"source":{"id":"0198bc24-fb93-7200-8959-beb265231c51"},"target":{"id":"0198bc24-fba2-765f-8bb8-c6748b7f20d2"},"_type":"StateNode","uuid":"c94cf259-f391-4d60-bfba-00ddfc0ca377","name":"exists","_UserBedRelation_bound_currentState":"exists","id":"0198bc24-fbb7-782d-bd79-688269ed7f7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserBedRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__87","use_id_88","use_bed_101","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18","use_dor_100","use__85","use_id_86")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc24-fbb7-782d-bd79-688269ed7f7d'[39m,
    [32m'0198bc24-fba2-765f-8bb8-c6748b7f20d2'[39m,
    [32m'Student User'[39m,
    [32m'student@test.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.075Z'[39m,
    [32m'2025-08-18T07:46:37.078Z'[39m,
    [32m'0198bc24-fb91-7c1f-9015-a43c17d2b75a'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m,
    [32m'0198bc24-fba0-7e1d-9aef-8b73e5a81117'[39m,
    [32m'exists'[39m,
    [32m'0198bc24-fbb1-745e-b0d1-1a48b07b72a6'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fbad-7f90-87ae-22c578c4dee7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'LEFT JOIN "Dormitory" AS \n'[39m +
    [32m'"UserDormitoryRelation_target" ON \n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" = "UserDormitoryRelation_target"."dor_id_36"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("UserDormitoryRelation"."use_id_18" = $1 AND "UserDormitoryRelation"."use_id_86" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
[INFO] interaction: AssignDormHead {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignDormHead'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-fbbb-7a3f-8301-e40f40f71031"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-fbbb-7a3f-8301-e40f40f71031'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignDormHead","interactionId":"d789d402-2e27-4090-be4d-d0ff5a8b5eb6","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"query":{},"payload":{"userId":"0198bc24-fb93-7200-8959-beb265231c51"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"},"payload":{"userId":"0198bc24-fb93-7200-8959-beb265231c51"}},"activity":{"_rowId":4,"id":"0198bc24-fbbb-7a3f-8301-e40f40f71031","&":{"id":"0198bc24-fbbb-7a3f-8301-e41169577b04"}},"id":"0198bc24-fbbb-7a3f-8301-e410d9cf3e94"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignDormHead'[39m,
    [32m'd789d402-2e27-4090-be4d-d0ff5a8b5eb6'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.065Z","id":"0198bc24-fb89-7313-a986-40832cb3a679"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc24-fb93-7200-8959-beb265231c51"}'[39m,
    [32m'0198bc24-fbbb-7a3f-8301-e410d9cf3e94'[39m,
    [32m'0198bc24-fbbb-7a3f-8301-e40f40f71031'[39m,
    [32m'0198bc24-fbbb-7a3f-8301-e41169577b04'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fbbb-7a3f-8301-e410d9cf3e94'[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
[ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → TypeError: Cannot read properties of undefined (reading 'call')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'call')
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
      at Array.map (<anonymous>)
      at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
      at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}
[ERROR] interaction: AssignDormHead {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (interactionName: AssignDormHead)
  
  Caused by:
    → ComputationError: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call')
      → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignDormHead'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
{
  type: [32m'query'[39m,
  name: [32m'finding DormitoryDormHeadRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"DormitoryDormHeadRelation"."dor_id_91" AS "FIELD_0",\n'[39m +
    [32m'"DormitoryDormHeadRelation"."dor_id_36" AS "FIELD_1",\n'[39m +
    [32m'"DormitoryDormHeadRelation"."dor_dor_103" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "DormitoryDormHeadRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("DormitoryDormHeadRelation"."dor_dor_103" = $1 AND "DormitoryDormHeadRelation"."dor_id_91" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fb93-7200-8959-beb265231c51'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.533Z","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Admin'[39m,
    [32m'admin@test.com'[39m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.533Z'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.538Z","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.538Z'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m,
    [32m'0198bc24-fd5d-70ea-ba98-c1a17c68b253'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-fd64-7218-acbf-505b04326118"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-fd64-7218-acbf-505b04326118'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.533Z","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"},"query":{},"payload":{"name":"Test Dorm","capacity":4,"floor":2,"building":"Building A"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.533Z","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"},"payload":{"name":"Test Dorm","capacity":4,"floor":2,"building":"Building A"}},"activity":{"_rowId":1,"id":"0198bc24-fd64-7218-acbf-505b04326118","&":{"id":"0198bc24-fd65-7cba-8389-c6e903e5dfdc"}},"id":"0198bc24-fd64-7218-acbf-505c204c9f10"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.533Z","id":"0198bc24-fd5d-70ea-ba98-c1a17c68b253"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test Dorm","capacity":4,"floor":2,"building":"Building A"}'[39m,
    [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m,
    [32m'0198bc24-fd64-7218-acbf-505b04326118'[39m,
    [32m'0198bc24-fd65-7cba-8389-c6e903e5dfdc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Test Dorm","capacity":4,"floor":2,"building":"Building A","status":"active","createdAt":"2025-08-18T07:46:37.543Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:37.543Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:37.543Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:37.543Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:37.543Z"}],"_Dormitory_bound_sourceRecordId":"0198bc24-fd64-7218-acbf-505c204c9f10","_Dormitory_bound_transformIndex":0,"id":"0198bc24-fd67-7202-b74e-28810acd1f85"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test Dorm'[39m,
    [33m4[39m,
    [33m2[39m,
    [32m'Building A'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.543Z'[39m,
    [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m,
    [33m0[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:37.543Z","dormitory":{"id":"0198bc24-fd67-7202-b74e-28810acd1f85","&":{"id":"0198bc24-fd69-7743-8455-a9c589078ca1"}},"id":"0198bc24-fd69-7743-8455-a9c41bf10935"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.543Z'[39m,
    [32m'0198bc24-fd69-7743-8455-a9c41bf10935'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd69-7743-8455-a9c589078ca1'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:37.543Z","dormitory":{"id":"0198bc24-fd67-7202-b74e-28810acd1f85","&":{"id":"0198bc24-fd69-7743-8455-a9c7bd9f36c9"}},"id":"0198bc24-fd69-7743-8455-a9c69be5fc1f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.543Z'[39m,
    [32m'0198bc24-fd69-7743-8455-a9c69be5fc1f'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd69-7743-8455-a9c7bd9f36c9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:37.543Z","dormitory":{"id":"0198bc24-fd67-7202-b74e-28810acd1f85","&":{"id":"0198bc24-fd6a-7152-a60e-b76e934e1407"}},"id":"0198bc24-fd6a-7152-a60e-b76d3a9e26c4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.543Z'[39m,
    [32m'0198bc24-fd6a-7152-a60e-b76d3a9e26c4'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd6a-7152-a60e-b76e934e1407'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:37.543Z","dormitory":{"id":"0198bc24-fd67-7202-b74e-28810acd1f85","&":{"id":"0198bc24-fd6b-7e48-a404-601b0d1e81b2"}},"id":"0198bc24-fd6b-7e48-a404-601a125cc0df"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:37.543Z'[39m,
    [32m'0198bc24-fd6b-7e48-a404-601a125cc0df'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd6b-7e48-a404-601b0d1e81b2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc24-fd67-7202-b74e-28810acd1f85"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc24-fd67-7202-b74e-28810acd1f85"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.550Z","id":"0198bc24-fd67-7202-b74e-28810acd1f85"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.550Z'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m,
    [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-fd64-7218-acbf-505c204c9f10'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test Dorm'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Bed entities are created automatically with Dormitory
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_dor_102" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-fd67-7202-b74e-28810acd1f85'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Admin'[39m,
    [32m'admin@test.com'[39m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.965Z'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-ff0d-705e-805e-5be6dba53054"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-ff0d-705e-805e-5be6dba53054"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.970Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.970Z'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m,
    [32m'0198bc24-ff0d-705e-805e-5be6dba53054'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-ff13-7ccd-8834-760d806f7689"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-ff13-7ccd-8834-760d806f7689'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"},"query":{},"payload":{"name":"Test Student","email":"student@test.com","role":"student"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"},"payload":{"name":"Test Student","email":"student@test.com","role":"student"}},"activity":{"_rowId":1,"id":"0198bc24-ff13-7ccd-8834-760d806f7689","&":{"id":"0198bc24-ff14-7f74-9418-505b551609bd"}},"id":"0198bc24-ff14-7f74-9418-505acee65188"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test Student","email":"student@test.com","role":"student"}'[39m,
    [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m,
    [32m'0198bc24-ff13-7ccd-8834-760d806f7689'[39m,
    [32m'0198bc24-ff14-7f74-9418-505b551609bd'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Test Student","email":"student@test.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:37.974Z","_User_bound_sourceRecordId":"0198bc24-ff14-7f74-9418-505acee65188","_User_bound_transformIndex":0,"id":"0198bc24-ff16-7e17-90ae-1a35c591721e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test Student'[39m,
    [32m'student@test.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.974Z'[39m,
    [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m,
    [33m0[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-ff16-7e17-90ae-1a35c591721e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-ff16-7e17-90ae-1a35c591721e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.977Z","id":"0198bc24-ff16-7e17-90ae-1a35c591721e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.977Z'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff14-7f74-9418-505acee65188'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@test.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-ff20-772c-8266-aee44550a32e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-ff20-772c-8266-aee44550a32e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"},"query":{},"payload":{"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"},"payload":{"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead"}},"activity":{"_rowId":2,"id":"0198bc24-ff20-772c-8266-aee44550a32e","&":{"id":"0198bc24-ff20-772c-8266-aee6bbf354d3"}},"id":"0198bc24-ff20-772c-8266-aee592f7bf67"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:37.965Z","id":"0198bc24-ff0d-705e-805e-5be6dba53054"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead"}'[39m,
    [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m,
    [32m'0198bc24-ff20-772c-8266-aee44550a32e'[39m,
    [32m'0198bc24-ff20-772c-8266-aee6bbf354d3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Dorm Head","email":"dormhead@test.com","phone":null,"role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:37.986Z","_User_bound_sourceRecordId":"0198bc24-ff20-772c-8266-aee592f7bf67","_User_bound_transformIndex":0,"id":"0198bc24-ff22-79c5-bde7-c6b128038a86"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dorm Head'[39m,
    [32m'dormhead@test.com'[39m,
    [1mnull[22m,
    [32m'dormHead'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:37.986Z'[39m,
    [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m,
    [33m0[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc24-ff22-79c5-bde7-c6b128038a86"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc24-ff22-79c5-bde7-c6b128038a86"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:37.991Z","id":"0198bc24-ff22-79c5-bde7-c6b128038a86"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:37.991Z'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff20-772c-8266-aee592f7bf67'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'dormhead@test.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
[INFO] interaction: IssuePointDeduction {}
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc24-ff2d-79ba-8f54-0ff8a28d9a91"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc24-ff2d-79ba-8f54-0ff8a28d9a91'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"IssuePointDeduction","interactionId":"cff5d596-7634-4a2f-8a75-4ebeb43a0d0b","user":{"id":"0198bc24-ff22-79c5-bde7-c6b128038a86","name":"Dorm Head","email":"dormhead@test.com"},"query":{},"payload":{"targetUserId":"0198bc24-ff16-7e17-90ae-1a35c591721e","reason":"Test deduction","points":5,"category":"hygiene"},"args":{"user":{"id":"0198bc24-ff22-79c5-bde7-c6b128038a86","name":"Dorm Head","email":"dormhead@test.com"},"payload":{"targetUserId":"0198bc24-ff16-7e17-90ae-1a35c591721e","reason":"Test deduction","points":5,"category":"hygiene"}},"activity":{"_rowId":3,"id":"0198bc24-ff2d-79ba-8f54-0ff8a28d9a91","&":{"id":"0198bc24-ff2e-7bad-a506-0419e7020399"}},"id":"0198bc24-ff2e-7bad-a506-041841e598a2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'IssuePointDeduction'[39m,
    [32m'cff5d596-7634-4a2f-8a75-4ebeb43a0d0b'[39m,
    [32m'{"id":"0198bc24-ff22-79c5-bde7-c6b128038a86","name":"Dorm Head","email":"dormhead@test.com"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc24-ff16-7e17-90ae-1a35c591721e","reason":"Test deduction","points":5,"category":"hygiene"}'[39m,
    [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m,
    [32m'0198bc24-ff2d-79ba-8f54-0ff8a28d9a91'[39m,
    [32m'0198bc24-ff2e-7bad-a506-0419e7020399'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for creation with data {"reason":"Test deduction","points":5,"category":"hygiene","status":"active","description":null,"evidence":null,"deductedAt":"2025-08-18T07:46:38.001Z","createdAt":"2025-08-18T07:46:38.001Z","user":{"id":"0198bc24-ff16-7e17-90ae-1a35c591721e","&":{"id":"0198bc24-ff32-7de4-8a88-0a38df76ca06"}},"issuedBy":{"id":"0198bc24-ff22-79c5-bde7-c6b128038a86","&":{"id":"0198bc24-ff32-7de4-8a88-0a392589cb62"}},"_PointDeduction_bound_sourceRecordId":"0198bc24-ff2e-7bad-a506-041841e598a2","_PointDeduction_bound_transformIndex":0,"id":"0198bc24-ff32-7de4-8a88-0a373b465df3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'insert'[39m,
  name: [32m'create record PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "PointDeduction"\n'[39m +
    [32m'("poi_rea_44","poi_poi_45","poi_cat_46","poi_sta_47","poi_des_48","poi_evi_49","poi_ded_50","poi_cre_51","poi__52","poi__53","poi_id_55","poi__54","poi_use_104","use_id_92","poi_iss_105","ded_id_93")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16) \n'[39m,
  params: [
    [32m'Test deduction'[39m,
    [33m5[39m,
    [32m'hygiene'[39m,
    [32m'active'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:38.001Z'[39m,
    [32m'2025-08-18T07:46:38.001Z'[39m,
    [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m,
    [33m0[39m,
    [32m'0198bc24-ff32-7de4-8a88-0a373b465df3'[39m,
    [32m'active'[39m,
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m,
    [32m'0198bc24-ff32-7de4-8a88-0a38df76ca06'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m,
    [32m'0198bc24-ff32-7de4-8a88-0a392589cb62'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc24-ff32-7de4-8a88-0a373b465df3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"status":"active","id":"0198bc24-ff32-7de4-8a88-0a373b465df3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi_sta_47" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc24-ff32-7de4-8a88-0a373b465df3'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc24-ff32-7de4-8a88-0a373b465df3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc24-ff2e-7bad-a506-041841e598a2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"PointDeduction_user" ON \n'[39m +
    [32m'"PointDeduction"."poi_use_104" = "PointDeduction_user"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"PointDeduction_issuedBy" ON \n'[39m +
    [32m'"PointDeduction"."poi_iss_105" = "PointDeduction_issuedBy"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_rea_44" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test deduction'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding UserPointDeductionRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserPointDeductionRelation"."use_id_92" AS "FIELD_0",\n'[39m +
    [32m'"UserPointDeductionRelation"."poi_use_104" AS "FIELD_1",\n'[39m +
    [32m'"UserPointDeductionRelation"."poi_id_55" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "UserPointDeductionRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("UserPointDeductionRelation"."poi_use_104" = $1 AND "UserPointDeductionRelation"."poi_id_55" = $2) AND "UserPointDeductionRelation"."use_id_92" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-ff16-7e17-90ae-1a35c591721e'[39m,
    [32m'0198bc24-ff32-7de4-8a88-0a373b465df3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction
{
  type: [32m'query'[39m,
  name: [32m'finding DeductionIssuerRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"DeductionIssuerRelation"."ded_id_93" AS "FIELD_0",\n'[39m +
    [32m'"DeductionIssuerRelation"."poi_id_55" AS "FIELD_1",\n'[39m +
    [32m'"DeductionIssuerRelation"."poi_iss_105" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "DeductionIssuerRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("DeductionIssuerRelation"."poi_id_55" = $1 AND "DeductionIssuerRelation"."poi_iss_105" = $2) AND "DeductionIssuerRelation"."ded_id_93" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc24-ff32-7de4-8a88-0a373b465df3'[39m,
    [32m'0198bc24-ff22-79c5-bde7-c6b128038a86'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Admin'[39m,
    [32m'admin@test.com'[39m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.434Z'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.437Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.437Z'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m,
    [32m'0198bc25-00e2-7eb4-bae4-19fde0559002'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-00e7-7ac2-b2d0-d71ff55874c2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-00e7-7ac2-b2d0-d71ff55874c2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"},"query":{},"payload":{"name":"Dorm Head","email":"dormhead2@test.com","role":"dormHead"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"},"payload":{"name":"Dorm Head","email":"dormhead2@test.com","role":"dormHead"}},"activity":{"_rowId":1,"id":"0198bc25-00e7-7ac2-b2d0-d71ff55874c2","&":{"id":"0198bc25-00e7-7ac2-b2d0-d7218564196a"}},"id":"0198bc25-00e7-7ac2-b2d0-d7201c529e7c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Dorm Head","email":"dormhead2@test.com","role":"dormHead"}'[39m,
    [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m,
    [32m'0198bc25-00e7-7ac2-b2d0-d71ff55874c2'[39m,
    [32m'0198bc25-00e7-7ac2-b2d0-d7218564196a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Dorm Head","email":"dormhead2@test.com","phone":null,"role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:38.442Z","_User_bound_sourceRecordId":"0198bc25-00e7-7ac2-b2d0-d7201c529e7c","_User_bound_transformIndex":0,"id":"0198bc25-00ea-7613-bdca-fe7ac67ab153"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Dorm Head'[39m,
    [32m'dormhead2@test.com'[39m,
    [1mnull[22m,
    [32m'dormHead'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.442Z'[39m,
    [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m,
    [33m0[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-00ea-7613-bdca-fe7ac67ab153"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-00ea-7613-bdca-fe7ac67ab153"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.446Z","id":"0198bc25-00ea-7613-bdca-fe7ac67ab153"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.446Z'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00e7-7ac2-b2d0-d7201c529e7c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'dormhead2@test.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-00f4-7010-bde6-66785e02449c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-00f4-7010-bde6-66785e02449c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"},"query":{},"payload":{"name":"Target Student","email":"target@test.com","role":"student"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"},"payload":{"name":"Target Student","email":"target@test.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-00f4-7010-bde6-66785e02449c","&":{"id":"0198bc25-00f4-7010-bde6-667a420175f0"}},"id":"0198bc25-00f4-7010-bde6-66792dbde8e5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.434Z","id":"0198bc25-00e2-7eb4-bae4-19fde0559002"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Target Student","email":"target@test.com","role":"student"}'[39m,
    [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m,
    [32m'0198bc25-00f4-7010-bde6-66785e02449c'[39m,
    [32m'0198bc25-00f4-7010-bde6-667a420175f0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Target Student","email":"target@test.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:38.454Z","_User_bound_sourceRecordId":"0198bc25-00f4-7010-bde6-66792dbde8e5","_User_bound_transformIndex":0,"id":"0198bc25-00f6-71cd-8f72-117195dfdcd9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Target Student'[39m,
    [32m'target@test.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.454Z'[39m,
    [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m,
    [33m0[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-00f6-71cd-8f72-117195dfdcd9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-00f6-71cd-8f72-117195dfdcd9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.458Z","id":"0198bc25-00f6-71cd-8f72-117195dfdcd9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.458Z'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-00f4-7010-bde6-66792dbde8e5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'target@test.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0102-7324-8d12-3a3b5c448929"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0102-7324-8d12-3a3b5c448929'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"id":"0198bc25-00ea-7613-bdca-fe7ac67ab153","name":"Dorm Head","email":"dormhead2@test.com"},"query":{},"payload":{"targetUserId":"0198bc25-00f6-71cd-8f72-117195dfdcd9","reason":"Test removal"},"args":{"user":{"id":"0198bc25-00ea-7613-bdca-fe7ac67ab153","name":"Dorm Head","email":"dormhead2@test.com"},"payload":{"targetUserId":"0198bc25-00f6-71cd-8f72-117195dfdcd9","reason":"Test removal"}},"activity":{"_rowId":3,"id":"0198bc25-0102-7324-8d12-3a3b5c448929","&":{"id":"0198bc25-0102-7324-8d12-3a3d7e664188"}},"id":"0198bc25-0102-7324-8d12-3a3c989643a8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"id":"0198bc25-00ea-7613-bdca-fe7ac67ab153","name":"Dorm Head","email":"dormhead2@test.com"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc25-00f6-71cd-8f72-117195dfdcd9","reason":"Test removal"}'[39m,
    [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m,
    [32m'0198bc25-0102-7324-8d12-3a3b5c448929'[39m,
    [32m'0198bc25-0102-7324-8d12-3a3d7e664188'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Test removal","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:38.471Z","updatedAt":"2025-08-18T07:46:38.471Z","targetUser":{"id":"0198bc25-00f6-71cd-8f72-117195dfdcd9","&":{"id":"0198bc25-0107-7b9c-a950-3a28ac94c30e"}},"requestedBy":{"id":"0198bc25-00ea-7613-bdca-fe7ac67ab153","&":{"id":"0198bc25-0107-7b9c-a950-3a29483f7f81"}},"_RemovalRequest_bound_sourceRecordId":"0198bc25-0102-7324-8d12-3a3c989643a8","_RemovalRequest_bound_transformIndex":0,"id":"0198bc25-0107-7b9c-a950-3a27d9dcb07c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Test removal'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:38.471Z'[39m,
    [32m'2025-08-18T07:46:38.471Z'[39m,
    [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m,
    [33m0[39m,
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m,
    [32m'0198bc25-0107-7b9c-a950-3a28ac94c30e'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m,
    [32m'0198bc25-0107-7b9c-a950-3a29483f7f81'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc25-0107-7b9c-a950-3a27d9dcb07c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m,
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.473Z","id":"0198bc25-0107-7b9c-a950-3a27d9dcb07c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.473Z'[39m,
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m,
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0102-7324-8d12-3a3c989643a8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequest_targetUser" ON \n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" = "RemovalRequest_targetUser"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequest_requestedBy" ON \n'[39m +
    [32m'"RemovalRequest"."rem_req_107" = "RemovalRequest_requestedBy"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test removal'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_69" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_tar_106" = $2) AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m,
    [32m'0198bc25-00f6-71cd-8f72-117195dfdcd9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestInitiatorRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestInitiatorRelation"."rem_id_95" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestInitiatorRelation"."rem_id_69" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestInitiatorRelation"."rem_req_107" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestInitiatorRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("RemovalRequestInitiatorRelation"."rem_id_69" = $1 AND "RemovalRequestInitiatorRelation"."rem_req_107" = $2) AND "RemovalRequestInitiatorRelation"."rem_id_95" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc25-0107-7b9c-a950-3a27d9dcb07c'[39m,
    [32m'0198bc25-00ea-7613-bdca-fe7ac67ab153'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Admin'[39m,
    [32m'admin@test.com'[39m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.905Z'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.909Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.909Z'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student to Remove","email":"student@test.com","role":"student","status":"active","createdAt":"2025-08-18T07:46:38.911Z","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Student to Remove'[39m,
    [32m'student@test.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.911Z'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.916Z","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.916Z'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:38.917Z","id":"0198bc25-02c5-733e-b29d-17f086655cf2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_id_18","use__11","use__12","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13) \n'[39m,
  params: [
    [32m'Dorm Head'[39m,
    [32m'dormhead@test.com'[39m,
    [32m'dormHead'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.917Z'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-02c5-733e-b29d-17f086655cf2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-02c5-733e-b29d-17f086655cf2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.921Z","id":"0198bc25-02c5-733e-b29d-17f086655cf2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.921Z'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-02cb-7add-8b7a-956a01c20d9d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-02cb-7add-8b7a-956a01c20d9d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"},"query":{},"payload":{"name":"Test Dorm","capacity":4,"building":"A","floor":1},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"},"payload":{"name":"Test Dorm","capacity":4,"building":"A","floor":1}},"activity":{"_rowId":1,"id":"0198bc25-02cb-7add-8b7a-956a01c20d9d","&":{"id":"0198bc25-02cc-732c-bd08-c0cee6d95815"}},"id":"0198bc25-02cc-732c-bd08-c0cd89e5f936"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test Dorm","capacity":4,"building":"A","floor":1}'[39m,
    [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m,
    [32m'0198bc25-02cb-7add-8b7a-956a01c20d9d'[39m,
    [32m'0198bc25-02cc-732c-bd08-c0cee6d95815'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Test Dorm","capacity":4,"floor":1,"building":"A","status":"active","createdAt":"2025-08-18T07:46:38.927Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:38.927Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:38.927Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:38.927Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:38.927Z"}],"_Dormitory_bound_sourceRecordId":"0198bc25-02cc-732c-bd08-c0cd89e5f936","_Dormitory_bound_transformIndex":0,"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test Dorm'[39m,
    [33m4[39m,
    [33m1[39m,
    [32m'A'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.927Z'[39m,
    [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m,
    [33m0[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:38.927Z","dormitory":{"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","&":{"id":"0198bc25-02d0-7c42-87f4-2da5442d231a"}},"id":"0198bc25-02d0-7c42-87f4-2da42f7fb6f3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:38.927Z'[39m,
    [32m'0198bc25-02d0-7c42-87f4-2da42f7fb6f3'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02d0-7c42-87f4-2da5442d231a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:38.927Z","dormitory":{"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","&":{"id":"0198bc25-02d0-7c42-87f4-2da7fad61c03"}},"id":"0198bc25-02d0-7c42-87f4-2da665fda990"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:38.927Z'[39m,
    [32m'0198bc25-02d0-7c42-87f4-2da665fda990'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02d0-7c42-87f4-2da7fad61c03'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:38.927Z","dormitory":{"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","&":{"id":"0198bc25-02d1-7985-996d-17b1e4d5434a"}},"id":"0198bc25-02d1-7985-996d-17b07af5b694"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:38.927Z'[39m,
    [32m'0198bc25-02d1-7985-996d-17b07af5b694'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02d1-7985-996d-17b1e4d5434a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:38.927Z","dormitory":{"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","&":{"id":"0198bc25-02d2-71b7-b794-df2b4db5be8e"}},"id":"0198bc25-02d2-71b7-b794-df2a867f7505"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:38.927Z'[39m,
    [32m'0198bc25-02d2-71b7-b794-df2a867f7505'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02d2-71b7-b794-df2b4db5be8e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.937Z","id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.937Z'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cc-732c-bd08-c0cd89e5f936'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test Dorm'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-02de-747b-a7d1-99c19648e489"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-02de-747b-a7d1-99c19648e489'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"},"query":{},"payload":{"userId":"0198bc25-02bf-76d7-8349-fafe7634fe74","dormitoryId":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","bedNumber":1},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"},"payload":{"userId":"0198bc25-02bf-76d7-8349-fafe7634fe74","dormitoryId":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","bedNumber":1}},"activity":{"_rowId":2,"id":"0198bc25-02de-747b-a7d1-99c19648e489","&":{"id":"0198bc25-02de-747b-a7d1-99c3c9dedd32"}},"id":"0198bc25-02de-747b-a7d1-99c27cd7f8ab"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-02bf-76d7-8349-fafe7634fe74","dormitoryId":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c","bedNumber":1}'[39m,
    [32m'0198bc25-02de-747b-a7d1-99c27cd7f8ab'[39m,
    [32m'0198bc25-02de-747b-a7d1-99c19648e489'[39m,
    [32m'0198bc25-02de-747b-a7d1-99c3c9dedd32'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02de-747b-a7d1-99c27cd7f8ab'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02de-747b-a7d1-99c27cd7f8ab'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02de-747b-a7d1-99c27cd7f8ab'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02de-747b-a7d1-99c27cd7f8ab'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc25-02bf-76d7-8349-fafe7634fe74"},"target":{"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc25-02e4-7b51-96d2-86825fd57bd5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc25-02e4-7b51-96d2-86825fd57bd5'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'Student to Remove'[39m,
    [32m'student@test.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.911Z'[39m,
    [32m'2025-08-18T07:46:38.916Z'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02e4-7b51-96d2-86825fd57bd5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc25-02cf-7eee-bb6a-2a0642f23c9c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Bed from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Bed"."bed_bed_37" = $1 AND "Bed"."bed_id_43" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserBedRelation to flash out, for creation with data {"source":{"id":"0198bc25-02bf-76d7-8349-fafe7634fe74"},"target":{"id":"0198bc25-02d0-7c42-87f4-2da42f7fb6f3"},"_type":"StateNode","uuid":"c94cf259-f391-4d60-bfba-00ddfc0ca377","name":"exists","_UserBedRelation_bound_currentState":"exists","id":"0198bc25-02e9-7cdb-9abc-d9c9836c464d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_0",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_1",\n'[39m +
    [32m'"UserBedRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserBedRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserBedRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserBedRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserBedRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserBedRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserBedRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserBedRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserBedRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserBedRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserBedRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserBedRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserBedRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserBedRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserBedRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserBedRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserBedRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserBedRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserBedRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserBedRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserBedRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserBedRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserBedRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserBedRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserBedRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserBedRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record UserBedRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__87","use_id_88","use_bed_101","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18","use_dor_100","use__85","use_id_86")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc25-02e9-7cdb-9abc-d9c9836c464d'[39m,
    [32m'0198bc25-02d0-7c42-87f4-2da42f7fb6f3'[39m,
    [32m'Student to Remove'[39m,
    [32m'student@test.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:38.911Z'[39m,
    [32m'2025-08-18T07:46:38.916Z'[39m,
    [32m''[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02cf-7eee-bb6a-2a0642f23c9c'[39m,
    [32m'exists'[39m,
    [32m'0198bc25-02e4-7b51-96d2-86825fd57bd5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02de-747b-a7d1-99c27cd7f8ab'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-02ee-7261-b032-6cb99f3d543a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-02ee-7261-b032-6cb99f3d543a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"_rowId":3,"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:38.917Z","id":"0198bc25-02c5-733e-b29d-17f086655cf2"},"query":{},"payload":{"targetUserId":"0198bc25-02bf-76d7-8349-fafe7634fe74","reason":"Test removal"},"args":{"user":{"_rowId":3,"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:38.917Z","id":"0198bc25-02c5-733e-b29d-17f086655cf2"},"payload":{"targetUserId":"0198bc25-02bf-76d7-8349-fafe7634fe74","reason":"Test removal"}},"activity":{"_rowId":3,"id":"0198bc25-02ee-7261-b032-6cb99f3d543a","&":{"id":"0198bc25-02ef-7ad8-8997-a5dfc291971e"}},"id":"0198bc25-02ef-7ad8-8997-a5de20e5796f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"_rowId":3,"name":"Dorm Head","email":"dormhead@test.com","role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:38.917Z","id":"0198bc25-02c5-733e-b29d-17f086655cf2"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc25-02bf-76d7-8349-fafe7634fe74","reason":"Test removal"}'[39m,
    [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m,
    [32m'0198bc25-02ee-7261-b032-6cb99f3d543a'[39m,
    [32m'0198bc25-02ef-7ad8-8997-a5dfc291971e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Test removal","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:38.964Z","updatedAt":"2025-08-18T07:46:38.964Z","targetUser":{"id":"0198bc25-02bf-76d7-8349-fafe7634fe74","&":{"id":"0198bc25-02f4-7758-b243-8e6b60745dad"}},"requestedBy":{"id":"0198bc25-02c5-733e-b29d-17f086655cf2","&":{"id":"0198bc25-02f4-7758-b243-8e6c65969ecf"}},"_RemovalRequest_bound_sourceRecordId":"0198bc25-02ef-7ad8-8997-a5de20e5796f","_RemovalRequest_bound_transformIndex":0,"id":"0198bc25-02f4-7758-b243-8e6a99ed5da7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Test removal'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:38.964Z'[39m,
    [32m'2025-08-18T07:46:38.964Z'[39m,
    [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m,
    [33m0[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6b60745dad'[39m,
    [32m'0198bc25-02c5-733e-b29d-17f086655cf2'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6c65969ecf'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc25-02f4-7758-b243-8e6a99ed5da7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.968Z","id":"0198bc25-02f4-7758-b243-8e6a99ed5da7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.968Z'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02ef-7ad8-8997-a5de20e5796f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test removal'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
[INFO] interaction: ProcessRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-02fa-7d28-aad5-7b5b7b207d39"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-02fa-7d28-aad5-7b5b7b207d39'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"ProcessRemovalRequest","interactionId":"0bd3bd79-5e1c-4142-aab5-ddbc08b8f126","user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"},"query":{},"payload":{"requestId":"0198bc25-02f4-7758-b243-8e6a99ed5da7","decision":"approved","adminComment":"Approved for testing"},"args":{"user":{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"},"payload":{"requestId":"0198bc25-02f4-7758-b243-8e6a99ed5da7","decision":"approved","adminComment":"Approved for testing"}},"activity":{"_rowId":4,"id":"0198bc25-02fa-7d28-aad5-7b5b7b207d39","&":{"id":"0198bc25-02fc-77a8-b7cd-d4fc6af67651"}},"id":"0198bc25-02fc-77a8-b7cd-d4fb0121cde8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'ProcessRemovalRequest'[39m,
    [32m'0bd3bd79-5e1c-4142-aab5-ddbc08b8f126'[39m,
    [32m'{"_rowId":1,"name":"Admin","email":"admin@test.com","role":"admin","status":"active","createdAt":"2025-08-18T07:46:38.905Z","id":"0198bc25-02b9-7f51-972d-980b274ab86c"}'[39m,
    [32m'{}'[39m,
    [32m'{"requestId":"0198bc25-02f4-7758-b243-8e6a99ed5da7","decision":"approved","adminComment":"Approved for testing"}'[39m,
    [32m'0198bc25-02fc-77a8-b7cd-d4fb0121cde8'[39m,
    [32m'0198bc25-02fa-7d28-aad5-7b5b7b207d39'[39m,
    [32m'0198bc25-02fc-77a8-b7cd-d4fc6af67651'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02fc-77a8-b7cd-d4fb0121cde8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_status_bound_currentState":"removed","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__16" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"removed","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_updatedAt_bound_currentState":"updated","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__17" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'updated'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:38.983Z","id":"0198bc25-02bf-76d7-8349-fafe7634fe74"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:38.983Z'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m,
    [32m'0198bc25-02bf-76d7-8349-fafe7634fe74'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02fc-77a8-b7cd-d4fb0121cde8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02fc-77a8-b7cd-d4fb0121cde8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02fc-77a8-b7cd-d4fb0121cde8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"_RemovalRequest_status_bound_currentState":"approved","id":"0198bc25-02f4-7758-b243-8e6a99ed5da7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem__65" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"approved","id":"0198bc25-02f4-7758-b243-8e6a99ed5da7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m,
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [90mundefined[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
[ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
    → TypeError: Cannot read properties of undefined (reading 'status')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'status')
      at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: ProcessRemovalRequest {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (interactionName: ProcessRemovalRequest)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
        → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_69" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'(("RemovalRequestAdminRelation"."rem_id_69" = $1 AND "RemovalRequestAdminRelation"."rem_pro_108" = $2) AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [
    [32m'0198bc25-02f4-7758-b243-8e6a99ed5da7'[39m,
    [32m'0198bc25-02b9-7f51-972d-980b274ab86c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-04c7-7176-9784-90e6bbaf8963"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-04c7-7176-9784-90e6bbaf8963'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-04c7-7176-9784-90e6bbaf8963","&":{"id":"0198bc25-04c8-751b-9fd9-472b12abd9eb"}},"id":"0198bc25-04c8-751b-9fd9-472a67eb92f4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m,
    [32m'0198bc25-04c7-7176-9784-90e6bbaf8963'[39m,
    [32m'0198bc25-04c8-751b-9fd9-472b12abd9eb'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:39.434Z","_User_bound_sourceRecordId":"0198bc25-04c8-751b-9fd9-472a67eb92f4","_User_bound_transformIndex":0,"id":"0198bc25-04ca-713f-9953-b9a37398a01c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:39.434Z'[39m,
    [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m,
    [33m0[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-04ca-713f-9953-b9a37398a01c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-04ca-713f-9953-b9a37398a01c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:39.439Z","id":"0198bc25-04ca-713f-9953-b9a37398a01c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:39.439Z'[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m,
    [32m'0198bc25-04ca-713f-9953-b9a37398a01c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04c8-751b-9fd9-472a67eb92f4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-04d5-74cf-959d-113c0f8acf25"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-04d5-74cf-959d-113c0f8acf25'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-04ca-713f-9953-b9a37398a01c","role":"student"},"query":{},"payload":{"name":"Original Name","email":"user@example.com","phone":"1234567890","role":"student"},"args":{"user":{"id":"0198bc25-04ca-713f-9953-b9a37398a01c","role":"student"},"payload":{"name":"Original Name","email":"user@example.com","phone":"1234567890","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-04d5-74cf-959d-113c0f8acf25","&":{"id":"0198bc25-04d5-74cf-959d-113e2094d53e"}},"id":"0198bc25-04d5-74cf-959d-113d75fd85dc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-04ca-713f-9953-b9a37398a01c","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Original Name","email":"user@example.com","phone":"1234567890","role":"student"}'[39m,
    [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m,
    [32m'0198bc25-04d5-74cf-959d-113c0f8acf25'[39m,
    [32m'0198bc25-04d5-74cf-959d-113e2094d53e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Original Name","email":"user@example.com","phone":"1234567890","role":"student","status":"active","createdAt":"2025-08-18T07:46:39.447Z","_User_bound_sourceRecordId":"0198bc25-04d5-74cf-959d-113d75fd85dc","_User_bound_transformIndex":0,"id":"0198bc25-04d7-7e0a-bf6b-ee937b39db65"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Original Name'[39m,
    [32m'user@example.com'[39m,
    [32m'1234567890'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:39.447Z'[39m,
    [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m,
    [33m0[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-04d7-7e0a-bf6b-ee937b39db65"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-04d7-7e0a-bf6b-ee937b39db65"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:39.451Z","id":"0198bc25-04d7-7e0a-bf6b-ee937b39db65"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:39.451Z'[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m,
    [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04d5-74cf-959d-113d75fd85dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'user@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
[INFO] interaction: UpdateUserProfile {}
{
  type: [32m'scheme'[39m,
  name: [32m'UpdateUserProfile'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-04e3-7d69-ba08-4259c886f73a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-04e3-7d69-ba08-4259c886f73a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"UpdateUserProfile","interactionId":"90bcaa51-0dde-496c-a925-0e0395e0eaa5","user":{"id":"0198bc25-04ca-713f-9953-b9a37398a01c","role":"student"},"query":{},"payload":{"userId":"0198bc25-04d7-7e0a-bf6b-ee937b39db65","name":"Updated Name","phone":"9876543210"},"args":{"user":{"id":"0198bc25-04ca-713f-9953-b9a37398a01c","role":"student"},"payload":{"userId":"0198bc25-04d7-7e0a-bf6b-ee937b39db65","name":"Updated Name","phone":"9876543210"}},"activity":{"_rowId":3,"id":"0198bc25-04e3-7d69-ba08-4259c886f73a","&":{"id":"0198bc25-04e3-7d69-ba08-425b8d2bb2bc"}},"id":"0198bc25-04e3-7d69-ba08-425a25ca9ef0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'UpdateUserProfile'[39m,
    [32m'90bcaa51-0dde-496c-a925-0e0395e0eaa5'[39m,
    [32m'{"id":"0198bc25-04ca-713f-9953-b9a37398a01c","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-04d7-7e0a-bf6b-ee937b39db65","name":"Updated Name","phone":"9876543210"}'[39m,
    [32m'0198bc25-04e3-7d69-ba08-425a25ca9ef0'[39m,
    [32m'0198bc25-04e3-7d69-ba08-4259c886f73a'[39m,
    [32m'0198bc25-04e3-7d69-ba08-425b8d2bb2bc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04e3-7d69-ba08-425a25ca9ef0'[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
[ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → TypeError: Cannot read properties of undefined (reading 'call')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'call')
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
      at Array.map (<anonymous>)
      at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
      at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}
[ERROR] interaction: UpdateUserProfile {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (interactionName: UpdateUserProfile)
  
  Caused by:
    → ComputationError: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call')
      → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'scheme'[39m,
  name: [32m'UpdateUserProfile'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-04d7-7e0a-bf6b-ee937b39db65'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-068f-7ab3-8cad-56fcaf5a711f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-068f-7ab3-8cad-56fcaf5a711f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-068f-7ab3-8cad-56fcaf5a711f","&":{"id":"0198bc25-068f-7ab3-8cad-56fec303f960"}},"id":"0198bc25-068f-7ab3-8cad-56fd45341e90"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m,
    [32m'0198bc25-068f-7ab3-8cad-56fcaf5a711f'[39m,
    [32m'0198bc25-068f-7ab3-8cad-56fec303f960'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:39.889Z","_User_bound_sourceRecordId":"0198bc25-068f-7ab3-8cad-56fd45341e90","_User_bound_transformIndex":0,"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:39.889Z'[39m,
    [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m,
    [33m0[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:39.893Z","id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:39.893Z'[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m,
    [32m'0198bc25-0691-7b5e-82b8-dc9bde68ff0b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-068f-7ab3-8cad-56fd45341e90'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-069b-752e-bd2e-44ec42a495aa"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-069b-752e-bd2e-44ec42a495aa'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"query":{},"payload":{"name":"Student User","email":"student@example.com","role":"student"},"args":{"user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"payload":{"name":"Student User","email":"student@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-069b-752e-bd2e-44ec42a495aa","&":{"id":"0198bc25-069c-7ec9-bb46-8baa5e4fa43a"}},"id":"0198bc25-069c-7ec9-bb46-8ba94efc7b36"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@example.com","role":"student"}'[39m,
    [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m,
    [32m'0198bc25-069b-752e-bd2e-44ec42a495aa'[39m,
    [32m'0198bc25-069c-7ec9-bb46-8baa5e4fa43a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:39.901Z","_User_bound_sourceRecordId":"0198bc25-069c-7ec9-bb46-8ba94efc7b36","_User_bound_transformIndex":0,"id":"0198bc25-069d-7786-8e64-252fd4d916a7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:39.901Z'[39m,
    [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m,
    [33m0[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-069d-7786-8e64-252fd4d916a7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-069d-7786-8e64-252fd4d916a7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:39.905Z","id":"0198bc25-069d-7786-8e64-252fd4d916a7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:39.905Z'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-06a7-7d80-adfc-c75c2b618083"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-06a7-7d80-adfc-c75c2b618083'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"query":{},"payload":{"name":"Test Dorm","capacity":4},"args":{"user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"payload":{"name":"Test Dorm","capacity":4}},"activity":{"_rowId":3,"id":"0198bc25-06a7-7d80-adfc-c75c2b618083","&":{"id":"0198bc25-06a8-7f03-8541-9715c4352ba1"}},"id":"0198bc25-06a8-7f03-8541-971444f47c02"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test Dorm","capacity":4}'[39m,
    [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m,
    [32m'0198bc25-06a7-7d80-adfc-c75c2b618083'[39m,
    [32m'0198bc25-06a8-7f03-8541-9715c4352ba1'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Test Dorm","capacity":4,"floor":null,"building":null,"status":"active","createdAt":"2025-08-18T07:46:39.916Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:39.916Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:39.916Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:39.916Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:39.916Z"}],"_Dormitory_bound_sourceRecordId":"0198bc25-06a8-7f03-8541-971444f47c02","_Dormitory_bound_transformIndex":0,"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test Dorm'[39m,
    [33m4[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:39.916Z'[39m,
    [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m,
    [33m0[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:39.916Z","dormitory":{"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d","&":{"id":"0198bc25-06ad-75a8-a08e-7fb57354fca0"}},"id":"0198bc25-06ad-75a8-a08e-7fb4fdcd5033"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:39.916Z'[39m,
    [32m'0198bc25-06ad-75a8-a08e-7fb4fdcd5033'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06ad-75a8-a08e-7fb57354fca0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:39.916Z","dormitory":{"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d","&":{"id":"0198bc25-06ae-7c1f-9536-e61c40d565b3"}},"id":"0198bc25-06ae-7c1f-9536-e61be08b1351"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:39.916Z'[39m,
    [32m'0198bc25-06ae-7c1f-9536-e61be08b1351'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06ae-7c1f-9536-e61c40d565b3'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:39.916Z","dormitory":{"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d","&":{"id":"0198bc25-06af-70db-9001-3fca31a6672e"}},"id":"0198bc25-06af-70db-9001-3fc905705aa0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:39.916Z'[39m,
    [32m'0198bc25-06af-70db-9001-3fc905705aa0'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06af-70db-9001-3fca31a6672e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:39.916Z","dormitory":{"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d","&":{"id":"0198bc25-06af-70db-9001-3fccc245f99c"}},"id":"0198bc25-06af-70db-9001-3fcb83e28614"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:39.916Z'[39m,
    [32m'0198bc25-06af-70db-9001-3fcb83e28614'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06af-70db-9001-3fccc245f99c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:39.923Z","id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:39.923Z'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06a8-7f03-8541-971444f47c02'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test Dorm'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-06b7-7a30-8311-2e4305cb2f6e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-06b7-7a30-8311-2e4305cb2f6e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"query":{},"payload":{"userId":"0198bc25-069d-7786-8e64-252fd4d916a7","dormitoryId":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"},"args":{"user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"payload":{"userId":"0198bc25-069d-7786-8e64-252fd4d916a7","dormitoryId":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}},"activity":{"_rowId":4,"id":"0198bc25-06b7-7a30-8311-2e4305cb2f6e","&":{"id":"0198bc25-06b8-7575-8ee9-7ca0cde36448"}},"id":"0198bc25-06b8-7575-8ee9-7c9f3374603f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-069d-7786-8e64-252fd4d916a7","dormitoryId":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}'[39m,
    [32m'0198bc25-06b8-7575-8ee9-7c9f3374603f'[39m,
    [32m'0198bc25-06b7-7a30-8311-2e4305cb2f6e'[39m,
    [32m'0198bc25-06b8-7575-8ee9-7ca0cde36448'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06b8-7575-8ee9-7c9f3374603f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06b8-7575-8ee9-7c9f3374603f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06b8-7575-8ee9-7c9f3374603f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06b8-7575-8ee9-7c9f3374603f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc25-069d-7786-8e64-252fd4d916a7"},"target":{"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc25-06bd-76c0-b28c-4c3583ea65c2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc25-06bd-76c0-b28c-4c3583ea65c2'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:39.901Z'[39m,
    [32m'2025-08-18T07:46:39.905Z'[39m,
    [32m'0198bc25-069c-7ec9-bb46-8ba94efc7b36'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-06bd-76c0-b28c-4c3583ea65c2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc25-06ac-71be-b20e-dbbd2f01fe7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m,
    [32m'0198bc25-06ac-71be-b20e-dbbd2f01fe7d'[39m
  ]
}

stderr | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)

Caused by:
  → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
    → TypeError: Cannot read properties of null (reading 'id')

Stack trace:
  TypeError: Cannot read properties of null (reading 'id')
      at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)
  
  Caused by:
    → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: AssignUserToDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (interactionName: AssignUserToDormitory)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
        → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[INFO] interaction: AssignDormHead {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignDormHead'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-06c3-7227-be03-b30dd8b712b9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-06c3-7227-be03-b30dd8b712b9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignDormHead","interactionId":"d789d402-2e27-4090-be4d-d0ff5a8b5eb6","user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"query":{},"payload":{"userId":"0198bc25-069d-7786-8e64-252fd4d916a7"},"args":{"user":{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"},"payload":{"userId":"0198bc25-069d-7786-8e64-252fd4d916a7"}},"activity":{"_rowId":5,"id":"0198bc25-06c3-7227-be03-b30dd8b712b9","&":{"id":"0198bc25-06c3-7227-be03-b30f2a0756a4"}},"id":"0198bc25-06c3-7227-be03-b30ee99cc2a0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignDormHead'[39m,
    [32m'd789d402-2e27-4090-be4d-d0ff5a8b5eb6'[39m,
    [32m'{"id":"0198bc25-0691-7b5e-82b8-dc9bde68ff0b","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-069d-7786-8e64-252fd4d916a7"}'[39m,
    [32m'0198bc25-06c3-7227-be03-b30ee99cc2a0'[39m,
    [32m'0198bc25-06c3-7227-be03-b30dd8b712b9'[39m,
    [32m'0198bc25-06c3-7227-be03-b30f2a0756a4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-06c3-7227-be03-b30ee99cc2a0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'scheme'[39m,
  name: [32m'AssignDormHead'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stderr | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
[ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → TypeError: Cannot read properties of undefined (reading 'call')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'call')
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
      at Array.map (<anonymous>)
      at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
      at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}
[ERROR] interaction: AssignDormHead {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (interactionName: AssignDormHead)
  
  Caused by:
    → ComputationError: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call')
      → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-069d-7786-8e64-252fd4d916a7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0869-7f77-a73c-1883e24518e4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0869-7f77-a73c-1883e24518e4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-0869-7f77-a73c-1883e24518e4","&":{"id":"0198bc25-086a-7943-9d9f-cec20e520f25"}},"id":"0198bc25-086a-7943-9d9f-cec14a3809f3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m,
    [32m'0198bc25-0869-7f77-a73c-1883e24518e4'[39m,
    [32m'0198bc25-086a-7943-9d9f-cec20e520f25'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:40.364Z","_User_bound_sourceRecordId":"0198bc25-086a-7943-9d9f-cec14a3809f3","_User_bound_transformIndex":0,"id":"0198bc25-086c-709e-bae4-62271094ff06"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:40.364Z'[39m,
    [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m,
    [33m0[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-086c-709e-bae4-62271094ff06"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-086c-709e-bae4-62271094ff06"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.368Z","id":"0198bc25-086c-709e-bae4-62271094ff06"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.368Z'[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m,
    [32m'0198bc25-086c-709e-bae4-62271094ff06'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-086a-7943-9d9f-cec14a3809f3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0877-7742-a2db-429146e2096b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0877-7742-a2db-429146e2096b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"},"query":{},"payload":{"name":"Student User","email":"student@example.com","role":"student"},"args":{"user":{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"},"payload":{"name":"Student User","email":"student@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-0877-7742-a2db-429146e2096b","&":{"id":"0198bc25-0878-720a-901e-02209589a14b"}},"id":"0198bc25-0878-720a-901e-021fe34e3de7"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@example.com","role":"student"}'[39m,
    [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m,
    [32m'0198bc25-0877-7742-a2db-429146e2096b'[39m,
    [32m'0198bc25-0878-720a-901e-02209589a14b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:40.378Z","_User_bound_sourceRecordId":"0198bc25-0878-720a-901e-021fe34e3de7","_User_bound_transformIndex":0,"id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:40.378Z'[39m,
    [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m,
    [33m0[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.381Z","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.381Z'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0878-720a-901e-021fe34e3de7'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0883-7496-9a27-5ea9a629ac55"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0883-7496-9a27-5ea9a629ac55'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"},"query":{},"payload":{"name":"DormHead User","email":"dormhead@example.com","role":"student"},"args":{"user":{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"},"payload":{"name":"DormHead User","email":"dormhead@example.com","role":"student"}},"activity":{"_rowId":3,"id":"0198bc25-0883-7496-9a27-5ea9a629ac55","&":{"id":"0198bc25-0885-72f2-b9a3-c5880f0ef357"}},"id":"0198bc25-0885-72f2-b9a3-c587406a51b1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"DormHead User","email":"dormhead@example.com","role":"student"}'[39m,
    [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m,
    [32m'0198bc25-0883-7496-9a27-5ea9a629ac55'[39m,
    [32m'0198bc25-0885-72f2-b9a3-c5880f0ef357'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"DormHead User","email":"dormhead@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:40.390Z","_User_bound_sourceRecordId":"0198bc25-0885-72f2-b9a3-c587406a51b1","_User_bound_transformIndex":0,"id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'DormHead User'[39m,
    [32m'dormhead@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:40.390Z'[39m,
    [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m,
    [33m0[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.394Z","id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.394Z'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0885-72f2-b9a3-c587406a51b1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'dormhead@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0890-7cf6-9404-69f6dcba4c4a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0890-7cf6-9404-69f6dcba4c4a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"},"query":{},"payload":{"targetUserId":"0198bc25-087a-7933-9e9b-017cd05fede9","reason":"Test removal"},"args":{"user":{"id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"},"payload":{"targetUserId":"0198bc25-087a-7933-9e9b-017cd05fede9","reason":"Test removal"}},"activity":{"_rowId":4,"id":"0198bc25-0890-7cf6-9404-69f6dcba4c4a","&":{"id":"0198bc25-0891-75f6-bc65-44032fdd50c2"}},"id":"0198bc25-0891-75f6-bc65-4402457c42d5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"id":"0198bc25-0886-7714-87ee-a9f5f0947ad5"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc25-087a-7933-9e9b-017cd05fede9","reason":"Test removal"}'[39m,
    [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m,
    [32m'0198bc25-0890-7cf6-9404-69f6dcba4c4a'[39m,
    [32m'0198bc25-0891-75f6-bc65-44032fdd50c2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Test removal","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:40.405Z","updatedAt":"2025-08-18T07:46:40.405Z","targetUser":{"id":"0198bc25-087a-7933-9e9b-017cd05fede9","&":{"id":"0198bc25-0895-7767-9164-4f01c147c4f4"}},"requestedBy":{"id":"0198bc25-0886-7714-87ee-a9f5f0947ad5","&":{"id":"0198bc25-0895-7767-9164-4f02baafd890"}},"_RemovalRequest_bound_sourceRecordId":"0198bc25-0891-75f6-bc65-4402457c42d5","_RemovalRequest_bound_transformIndex":0,"id":"0198bc25-0895-7767-9164-4f00c7a1f0e9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Test removal'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:40.405Z'[39m,
    [32m'2025-08-18T07:46:40.405Z'[39m,
    [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m,
    [33m0[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-0895-7767-9164-4f01c147c4f4'[39m,
    [32m'0198bc25-0886-7714-87ee-a9f5f0947ad5'[39m,
    [32m'0198bc25-0895-7767-9164-4f02baafd890'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc25-0895-7767-9164-4f00c7a1f0e9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.409Z","id":"0198bc25-0895-7767-9164-4f00c7a1f0e9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.409Z'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0891-75f6-bc65-4402457c42d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test removal'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
[INFO] interaction: ProcessRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-089c-79d6-88ec-2da5c38d5892"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-089c-79d6-88ec-2da5c38d5892'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"ProcessRemovalRequest","interactionId":"0bd3bd79-5e1c-4142-aab5-ddbc08b8f126","user":{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"},"query":{},"payload":{"requestId":"0198bc25-0895-7767-9164-4f00c7a1f0e9","decision":"approved","comment":"Approved for testing"},"args":{"user":{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"},"payload":{"requestId":"0198bc25-0895-7767-9164-4f00c7a1f0e9","decision":"approved","comment":"Approved for testing"}},"activity":{"_rowId":5,"id":"0198bc25-089c-79d6-88ec-2da5c38d5892","&":{"id":"0198bc25-089d-7054-b455-b7b0886e934d"}},"id":"0198bc25-089d-7054-b455-b7af44bda7b5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'ProcessRemovalRequest'[39m,
    [32m'0bd3bd79-5e1c-4142-aab5-ddbc08b8f126'[39m,
    [32m'{"id":"0198bc25-086c-709e-bae4-62271094ff06","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"requestId":"0198bc25-0895-7767-9164-4f00c7a1f0e9","decision":"approved","comment":"Approved for testing"}'[39m,
    [32m'0198bc25-089d-7054-b455-b7af44bda7b5'[39m,
    [32m'0198bc25-089c-79d6-88ec-2da5c38d5892'[39m,
    [32m'0198bc25-089d-7054-b455-b7b0886e934d'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-089d-7054-b455-b7af44bda7b5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_status_bound_currentState":"removed","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__16" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"removed","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'removed'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestTargetRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_id_94" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestTargetRelation"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"RemovalRequestTargetRelation_target" ON \n'[39m +
    [32m'"RemovalRequestTargetRelation"."rem_tar_106" = "RemovalRequestTargetRelation_target"."use_id_18"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestTargetRelation"."rem_id_69" = $1 AND "RemovalRequestTargetRelation"."rem_id_94" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"_User_updatedAt_bound_currentState":"updated","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use__17" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'updated'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.422Z","id":"0198bc25-087a-7933-9e9b-017cd05fede9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.422Z'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m,
    [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-089d-7054-b455-b7af44bda7b5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-089d-7054-b455-b7af44bda7b5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-089d-7054-b455-b7af44bda7b5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"_RemovalRequest_status_bound_currentState":"approved","id":"0198bc25-0895-7767-9164-4f00c7a1f0e9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem__65" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"approved","id":"0198bc25-0895-7767-9164-4f00c7a1f0e9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'approved'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m,
    [32m'0198bc25-0895-7767-9164-4f00c7a1f0e9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [90mundefined[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
[ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
    → TypeError: Cannot read properties of undefined (reading 'status')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'status')
      at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: ProcessRemovalRequest {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status') (interactionName: ProcessRemovalRequest)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
      → ComputationStateError: Failed to retrieve last value for incremental computation. Caused by: Cannot read properties of undefined (reading 'status')
        → TypeError: Cannot read properties of undefined (reading 'status')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'status')
        at Controller.retrieveLastValue (/Users/camus/Work/interqat/interaqt-old/src/runtime/Controller.ts:193:20)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:619:45)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:25)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'scheme'[39m,
  name: [32m'ProcessRemovalRequest'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-087a-7933-9e9b-017cd05fede9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0a55-767f-8b7b-3c4bd5c258df"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0a55-767f-8b7b-3c4bd5c258df'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-0a55-767f-8b7b-3c4bd5c258df","&":{"id":"0198bc25-0a56-733b-a61b-36418e97d916"}},"id":"0198bc25-0a56-733b-a61b-3640fb952247"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m,
    [32m'0198bc25-0a55-767f-8b7b-3c4bd5c258df'[39m,
    [32m'0198bc25-0a56-733b-a61b-36418e97d916'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:40.855Z","_User_bound_sourceRecordId":"0198bc25-0a56-733b-a61b-3640fb952247","_User_bound_transformIndex":0,"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:40.855Z'[39m,
    [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m,
    [33m0[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.858Z","id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.858Z'[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m,
    [32m'0198bc25-0a57-7b66-81b9-ad32da68f3d0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a56-733b-a61b-3640fb952247'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0a62-7cda-a013-19615bd882da"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0a62-7cda-a013-19615bd882da'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0","role":"student"},"query":{},"payload":{"name":"Test User","email":"test@example.com","role":"student"},"args":{"user":{"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0","role":"student"},"payload":{"name":"Test User","email":"test@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-0a62-7cda-a013-19615bd882da","&":{"id":"0198bc25-0a62-7cda-a013-196371d6bd30"}},"id":"0198bc25-0a62-7cda-a013-1962704a1a6f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test User","email":"test@example.com","role":"student"}'[39m,
    [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m,
    [32m'0198bc25-0a62-7cda-a013-19615bd882da'[39m,
    [32m'0198bc25-0a62-7cda-a013-196371d6bd30'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Test User","email":"test@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:40.868Z","_User_bound_sourceRecordId":"0198bc25-0a62-7cda-a013-1962704a1a6f","_User_bound_transformIndex":0,"id":"0198bc25-0a64-7fca-b764-55fe54573da2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test User'[39m,
    [32m'test@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:40.868Z'[39m,
    [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m,
    [33m0[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0a64-7fca-b764-55fe54573da2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0a64-7fca-b764-55fe54573da2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:40.873Z","id":"0198bc25-0a64-7fca-b764-55fe54573da2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:40.873Z'[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m,
    [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a62-7cda-a013-1962704a1a6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'test@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
[INFO] interaction: UpdateUserProfile {}
{
  type: [32m'scheme'[39m,
  name: [32m'UpdateUserProfile'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0a7b-7e44-911a-cd70678b99a4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0a7b-7e44-911a-cd70678b99a4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"UpdateUserProfile","interactionId":"90bcaa51-0dde-496c-a925-0e0395e0eaa5","user":{"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0","role":"student"},"query":{},"payload":{"userId":"0198bc25-0a64-7fca-b764-55fe54573da2","name":"Updated Name"},"args":{"user":{"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0","role":"student"},"payload":{"userId":"0198bc25-0a64-7fca-b764-55fe54573da2","name":"Updated Name"}},"activity":{"_rowId":3,"id":"0198bc25-0a7b-7e44-911a-cd70678b99a4","&":{"id":"0198bc25-0a7c-7ed5-aa03-2a62b3cdbf20"}},"id":"0198bc25-0a7c-7ed5-aa03-2a614b5b42cf"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'UpdateUserProfile'[39m,
    [32m'90bcaa51-0dde-496c-a925-0e0395e0eaa5'[39m,
    [32m'{"id":"0198bc25-0a57-7b66-81b9-ad32da68f3d0","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-0a64-7fca-b764-55fe54573da2","name":"Updated Name"}'[39m,
    [32m'0198bc25-0a7c-7ed5-aa03-2a614b5b42cf'[39m,
    [32m'0198bc25-0a7b-7e44-911a-cd70678b99a4'[39m,
    [32m'0198bc25-0a7c-7ed5-aa03-2a62b3cdbf20'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a7c-7ed5-aa03-2a614b5b42cf'[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
[ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → TypeError: Cannot read properties of undefined (reading 'call')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'call')
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
      at Array.map (<anonymous>)
      at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
      at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}
[ERROR] interaction: UpdateUserProfile {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (interactionName: UpdateUserProfile)
  
  Caused by:
    → ComputationError: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call')
      → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'scheme'[39m,
  name: [32m'UpdateUserProfile'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0a64-7fca-b764-55fe54573da2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0c23-73d7-a263-ef66a7bc56a4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0c23-73d7-a263-ef66a7bc56a4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-0c23-73d7-a263-ef66a7bc56a4","&":{"id":"0198bc25-0c24-72fe-8108-729caed23508"}},"id":"0198bc25-0c24-72fe-8108-729b082a3f6f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m,
    [32m'0198bc25-0c23-73d7-a263-ef66a7bc56a4'[39m,
    [32m'0198bc25-0c24-72fe-8108-729caed23508'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:41.318Z","_User_bound_sourceRecordId":"0198bc25-0c24-72fe-8108-729b082a3f6f","_User_bound_transformIndex":0,"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.318Z'[39m,
    [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m,
    [33m0[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.322Z","id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.322Z'[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m,
    [32m'0198bc25-0c26-7a4f-8ce9-d2af21da9ff9'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c24-72fe-8108-729b082a3f6f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0c32-7e7f-9465-86250741a389"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0c32-7e7f-9465-86250741a389'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9","role":"student"},"query":{},"payload":{"name":"Original Dorm","capacity":4,"floor":1,"building":"A"},"args":{"user":{"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9","role":"student"},"payload":{"name":"Original Dorm","capacity":4,"floor":1,"building":"A"}},"activity":{"_rowId":2,"id":"0198bc25-0c32-7e7f-9465-86250741a389","&":{"id":"0198bc25-0c32-7e7f-9465-8627947fd333"}},"id":"0198bc25-0c32-7e7f-9465-8626f369bee9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Original Dorm","capacity":4,"floor":1,"building":"A"}'[39m,
    [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m,
    [32m'0198bc25-0c32-7e7f-9465-86250741a389'[39m,
    [32m'0198bc25-0c32-7e7f-9465-8627947fd333'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Original Dorm","capacity":4,"floor":1,"building":"A","status":"active","createdAt":"2025-08-18T07:46:41.333Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:41.333Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:41.333Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:41.333Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:41.333Z"}],"_Dormitory_bound_sourceRecordId":"0198bc25-0c32-7e7f-9465-8626f369bee9","_Dormitory_bound_transformIndex":0,"id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Original Dorm'[39m,
    [33m4[39m,
    [33m1[39m,
    [32m'A'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.333Z'[39m,
    [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m,
    [33m0[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:41.333Z","dormitory":{"id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","&":{"id":"0198bc25-0c36-72ae-8011-f43da53b6bce"}},"id":"0198bc25-0c36-72ae-8011-f43c6f37e830"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.333Z'[39m,
    [32m'0198bc25-0c36-72ae-8011-f43c6f37e830'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c36-72ae-8011-f43da53b6bce'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:41.333Z","dormitory":{"id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","&":{"id":"0198bc25-0c37-7adf-9a71-b7288e598f8e"}},"id":"0198bc25-0c37-7adf-9a71-b7274126a670"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.333Z'[39m,
    [32m'0198bc25-0c37-7adf-9a71-b7274126a670'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c37-7adf-9a71-b7288e598f8e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:41.333Z","dormitory":{"id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","&":{"id":"0198bc25-0c38-7163-b582-8aa6f5069499"}},"id":"0198bc25-0c38-7163-b582-8aa5d96e87c1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.333Z'[39m,
    [32m'0198bc25-0c38-7163-b582-8aa5d96e87c1'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c38-7163-b582-8aa6f5069499'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:41.333Z","dormitory":{"id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","&":{"id":"0198bc25-0c39-7eaa-809a-483d76910f68"}},"id":"0198bc25-0c39-7eaa-809a-483c02f2580d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.333Z'[39m,
    [32m'0198bc25-0c39-7eaa-809a-483c02f2580d'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c39-7eaa-809a-483d76910f68'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.340Z","id":"0198bc25-0c35-71db-88d0-1a5f8ae496a0"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.340Z'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m,
    [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c32-7e7f-9465-8626f369bee9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Original Dorm'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
[INFO] interaction: UpdateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'UpdateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0c42-7247-a08b-64702b38da1e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0c42-7247-a08b-64702b38da1e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"UpdateDormitory","interactionId":"93bf791e-7980-40d5-af6a-a35c2bddb2b8","user":{"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9","role":"student"},"query":{},"payload":{"dormitoryId":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","name":"Updated Dorm","floor":2,"building":"B"},"args":{"user":{"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9","role":"student"},"payload":{"dormitoryId":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","name":"Updated Dorm","floor":2,"building":"B"}},"activity":{"_rowId":3,"id":"0198bc25-0c42-7247-a08b-64702b38da1e","&":{"id":"0198bc25-0c43-78b1-928f-b2b377d24fc0"}},"id":"0198bc25-0c43-78b1-928f-b2b2b594e74e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'UpdateDormitory'[39m,
    [32m'93bf791e-7980-40d5-af6a-a35c2bddb2b8'[39m,
    [32m'{"id":"0198bc25-0c26-7a4f-8ce9-d2af21da9ff9","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"dormitoryId":"0198bc25-0c35-71db-88d0-1a5f8ae496a0","name":"Updated Dorm","floor":2,"building":"B"}'[39m,
    [32m'0198bc25-0c43-78b1-928f-b2b2b594e74e'[39m,
    [32m'0198bc25-0c42-7247-a08b-64702b38da1e'[39m,
    [32m'0198bc25-0c43-78b1-928f-b2b377d24fc0'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c43-78b1-928f-b2b2b594e74e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c43-78b1-928f-b2b2b594e74e'[39m ]
}

stderr | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
[ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)

Caused by:
  → TypeError: Cannot read properties of undefined (reading 'call')

Stack trace:
  TypeError: Cannot read properties of undefined (reading 'call')
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
      at Array.map (<anonymous>)
      at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
      at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (computationName: StateMachine, handleName: PropertyStateMachineHandle)
  
  Caused by:
    → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}
[ERROR] interaction: UpdateDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call') (interactionName: UpdateDormitory)
  
  Caused by:
    → ComputationError: Failed to compute dirty records and events. Caused by: Cannot read properties of undefined (reading 'call')
      → TypeError: Cannot read properties of undefined (reading 'call')
  
  Stack trace:
    TypeError: Cannot read properties of undefined (reading 'call')
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:105:48
        at Array.map (<anonymous>)
        at PropertyStateMachineHandle.computeDirtyRecords (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:103:42)
        at Scheduler.computeEventBasedDirtyRecordsAndEvents (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:431:61)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:458:60)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'UpdateDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0c35-71db-88d0-1a5f8ae496a0'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0def-7c81-97a8-445403944b85"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0def-7c81-97a8-445403944b85'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-0def-7c81-97a8-445403944b85","&":{"id":"0198bc25-0df0-7877-b334-d38a52e472ee"}},"id":"0198bc25-0df0-7877-b334-d3899145557c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m,
    [32m'0198bc25-0def-7c81-97a8-445403944b85'[39m,
    [32m'0198bc25-0df0-7877-b334-d38a52e472ee'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:41.777Z","_User_bound_sourceRecordId":"0198bc25-0df0-7877-b334-d3899145557c","_User_bound_transformIndex":0,"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.777Z'[39m,
    [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m,
    [33m0[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0df2-7895-9d16-fc303a6a7e69"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0df2-7895-9d16-fc303a6a7e69"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.782Z","id":"0198bc25-0df2-7895-9d16-fc303a6a7e69"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.782Z'[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m,
    [32m'0198bc25-0df2-7895-9d16-fc303a6a7e69'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0df0-7877-b334-d3899145557c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: CreateDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0dfe-7443-9cf2-e314ed6f42e6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0dfe-7443-9cf2-e314ed6f42e6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateDormitory","interactionId":"ed9c1e31-84b7-46a2-b910-d059645db171","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"name":"Test Dorm","capacity":4},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"name":"Test Dorm","capacity":4}},"activity":{"_rowId":2,"id":"0198bc25-0dfe-7443-9cf2-e314ed6f42e6","&":{"id":"0198bc25-0dff-77d1-825b-254e488e26ad"}},"id":"0198bc25-0dfe-7443-9cf2-e315b2fe79ae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateDormitory'[39m,
    [32m'ed9c1e31-84b7-46a2-b910-d059645db171'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Test Dorm","capacity":4}'[39m,
    [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m,
    [32m'0198bc25-0dfe-7443-9cf2-e314ed6f42e6'[39m,
    [32m'0198bc25-0dff-77d1-825b-254e488e26ad'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for creation with data {"name":"Test Dorm","capacity":4,"floor":null,"building":null,"status":"active","createdAt":"2025-08-18T07:46:41.793Z","beds":[{"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:41.793Z"},{"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:41.793Z"},{"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:41.793Z"},{"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:41.793Z"}],"_Dormitory_bound_sourceRecordId":"0198bc25-0dfe-7443-9cf2-e315b2fe79ae","_Dormitory_bound_transformIndex":0,"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Dormitory"\n'[39m +
    [32m'("dor_nam_19","dor_cap_20","dor_flo_21","dor_bui_22","dor_sta_23","dor_cre_27","dor__29","dor__30","dor_id_36","dor__31","dor__32","dor__33","dor__34","dor__35")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Test Dorm'[39m,
    [33m4[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.793Z'[39m,
    [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m,
    [33m0[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'nameState'[39m,
    [32m'floorState'[39m,
    [32m'buildingState'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"1","status":"available","createdAt":"2025-08-18T07:46:41.793Z","dormitory":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2","&":{"id":"0198bc25-0e03-7f45-80f7-c1328d31c35e"}},"id":"0198bc25-0e03-7f45-80f7-c1310a9d1684"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'1'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.793Z'[39m,
    [32m'0198bc25-0e03-7f45-80f7-c1310a9d1684'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e03-7f45-80f7-c1328d31c35e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"2","status":"available","createdAt":"2025-08-18T07:46:41.793Z","dormitory":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2","&":{"id":"0198bc25-0e04-7a66-bb53-f3436f90dafc"}},"id":"0198bc25-0e04-7a66-bb53-f34271e48a4f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'2'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.793Z'[39m,
    [32m'0198bc25-0e04-7a66-bb53-f34271e48a4f'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e04-7a66-bb53-f3436f90dafc'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"3","status":"available","createdAt":"2025-08-18T07:46:41.793Z","dormitory":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2","&":{"id":"0198bc25-0e05-71c3-9046-91d8c8a11dd4"}},"id":"0198bc25-0e05-71c3-9046-91d7f55285ce"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'3'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.793Z'[39m,
    [32m'0198bc25-0e05-71c3-9046-91d7f55285ce'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e05-71c3-9046-91d8c8a11dd4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Bed to flash out, for creation with data {"bedNumber":"4","status":"available","createdAt":"2025-08-18T07:46:41.793Z","dormitory":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2","&":{"id":"0198bc25-0e05-71c3-9046-91da58ad31fa"}},"id":"0198bc25-0e05-71c3-9046-91d919075c60"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Bed"."bed_bed_37" AS "FIELD_0",\n'[39m +
    [32m'"Bed"."bed_sta_38" AS "FIELD_1",\n'[39m +
    [32m'"Bed"."bed_isa_39" AS "FIELD_2",\n'[39m +
    [32m'"Bed"."bed_ass_40" AS "FIELD_3",\n'[39m +
    [32m'"Bed"."bed_cre_41" AS "FIELD_4",\n'[39m +
    [32m'"Bed"."bed_upd_42" AS "FIELD_5",\n'[39m +
    [32m'"Bed"."bed_id_43" AS "FIELD_6",\n'[39m +
    [32m'"Bed"."bed_dor_102" AS "FIELD_7",\n'[39m +
    [32m'"Bed"."dor_id_89" AS "FIELD_8"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Bed" AS "Bed"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record Dormitory.beds'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "Bed"\n'[39m +
    [32m'("bed_bed_37","bed_sta_38","bed_cre_41","bed_id_43","bed_dor_102","dor_id_89")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6) \n'[39m,
  params: [
    [32m'4'[39m,
    [32m'available'[39m,
    [32m'2025-08-18T07:46:41.793Z'[39m,
    [32m'0198bc25-0e05-71c3-9046-91d919075c60'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e05-71c3-9046-91da58ad31fa'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"status":"active","id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_sta_23" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":0,"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m0[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.800Z","id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_upd_28" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.800Z'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0dfe-7443-9cf2-e315b2fe79ae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateDormitory'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_nam_19" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test Dorm'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0e0f-7f67-9bc9-15f2b6216718"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0e0f-7f67-9bc9-15f2b6216718'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"name":"Student 1","email":"student1@example.com","role":"student"},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"name":"Student 1","email":"student1@example.com","role":"student"}},"activity":{"_rowId":3,"id":"0198bc25-0e0f-7f67-9bc9-15f2b6216718","&":{"id":"0198bc25-0e10-74ed-890a-73409010d0ea"}},"id":"0198bc25-0e10-74ed-890a-733f2c610c1d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student 1","email":"student1@example.com","role":"student"}'[39m,
    [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m,
    [32m'0198bc25-0e0f-7f67-9bc9-15f2b6216718'[39m,
    [32m'0198bc25-0e10-74ed-890a-73409010d0ea'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student 1","email":"student1@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:41.810Z","_User_bound_sourceRecordId":"0198bc25-0e10-74ed-890a-733f2c610c1d","_User_bound_transformIndex":0,"id":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student 1'[39m,
    [32m'student1@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.810Z'[39m,
    [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m,
    [33m0[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.814Z","id":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.814Z'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student1@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0e1b-7e02-827c-fe4c4d7412f8"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0e1b-7e02-827c-fe4c4d7412f8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"userId":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"userId":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"}},"activity":{"_rowId":4,"id":"0198bc25-0e1b-7e02-827c-fe4c4d7412f8","&":{"id":"0198bc25-0e1c-777a-9b02-5130475e4938"}},"id":"0198bc25-0e1c-777a-9b02-512f93669d33"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
    [32m'0198bc25-0e1c-777a-9b02-512f93669d33'[39m,
    [32m'0198bc25-0e1b-7e02-827c-fe4c4d7412f8'[39m,
    [32m'0198bc25-0e1c-777a-9b02-5130475e4938'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e1c-777a-9b02-512f93669d33'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e1c-777a-9b02-512f93669d33'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e1c-777a-9b02-512f93669d33'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e1c-777a-9b02-512f93669d33'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc25-0e12-7bf5-917c-d00b48c7eeb8"},"target":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc25-0e20-75e4-bd39-3a177be2b0d5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc25-0e20-75e4-bd39-3a177be2b0d5'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'Student 1'[39m,
    [32m'student1@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.810Z'[39m,
    [32m'2025-08-18T07:46:41.814Z'[39m,
    [32m'0198bc25-0e10-74ed-890a-733f2c610c1d'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-0e12-7bf5-917c-d00b48c7eeb8'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e20-75e4-bd39-3a177be2b0d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m
  ]
}

stderr | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)

Caused by:
  → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
    → TypeError: Cannot read properties of null (reading 'id')

Stack trace:
  TypeError: Cannot read properties of null (reading 'id')
      at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)
  
  Caused by:
    → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: AssignUserToDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (interactionName: AssignUserToDormitory)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
        → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0e28-73bd-81a8-b0e0fa8febd3"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0e28-73bd-81a8-b0e0fa8febd3'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"name":"Student 2","email":"student2@example.com","role":"student"},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"name":"Student 2","email":"student2@example.com","role":"student"}},"activity":{"_rowId":5,"id":"0198bc25-0e28-73bd-81a8-b0e0fa8febd3","&":{"id":"0198bc25-0e28-73bd-81a8-b0e2a28d6a8c"}},"id":"0198bc25-0e28-73bd-81a8-b0e13ae3afae"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student 2","email":"student2@example.com","role":"student"}'[39m,
    [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m,
    [32m'0198bc25-0e28-73bd-81a8-b0e0fa8febd3'[39m,
    [32m'0198bc25-0e28-73bd-81a8-b0e2a28d6a8c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student 2","email":"student2@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:41.834Z","_User_bound_sourceRecordId":"0198bc25-0e28-73bd-81a8-b0e13ae3afae","_User_bound_transformIndex":0,"id":"0198bc25-0e2b-7c63-8232-530d269d445a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student 2'[39m,
    [32m'student2@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.834Z'[39m,
    [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m,
    [33m0[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0e2b-7c63-8232-530d269d445a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0e2b-7c63-8232-530d269d445a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.839Z","id":"0198bc25-0e2b-7c63-8232-530d269d445a"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.839Z'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student2@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0e35-7daf-804a-fa31ee805738"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0e35-7daf-804a-fa31ee805738'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"userId":"0198bc25-0e2b-7c63-8232-530d269d445a","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"userId":"0198bc25-0e2b-7c63-8232-530d269d445a","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"}},"activity":{"_rowId":6,"id":"0198bc25-0e35-7daf-804a-fa31ee805738","&":{"id":"0198bc25-0e35-7daf-804a-fa33e8e922d6"}},"id":"0198bc25-0e35-7daf-804a-fa322baf8d4e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-0e2b-7c63-8232-530d269d445a","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
    [32m'0198bc25-0e35-7daf-804a-fa322baf8d4e'[39m,
    [32m'0198bc25-0e35-7daf-804a-fa31ee805738'[39m,
    [32m'0198bc25-0e35-7daf-804a-fa33e8e922d6'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e35-7daf-804a-fa322baf8d4e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e35-7daf-804a-fa322baf8d4e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e35-7daf-804a-fa322baf8d4e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e35-7daf-804a-fa322baf8d4e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc25-0e2b-7c63-8232-530d269d445a"},"target":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc25-0e3b-7506-a3bf-20ac510c78d5"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc25-0e3b-7506-a3bf-20ac510c78d5'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'Student 2'[39m,
    [32m'student2@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.834Z'[39m,
    [32m'2025-08-18T07:46:41.839Z'[39m,
    [32m'0198bc25-0e28-73bd-81a8-b0e13ae3afae'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-0e2b-7c63-8232-530d269d445a'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e3b-7506-a3bf-20ac510c78d5'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stderr | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)

Caused by:
  → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
    → TypeError: Cannot read properties of null (reading 'id')

Stack trace:
  TypeError: Cannot read properties of null (reading 'id')
      at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)
  
  Caused by:
    → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: AssignUserToDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (interactionName: AssignUserToDormitory)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
        → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0e41-75b9-986d-f9493d9b9e01"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0e41-75b9-986d-f9493d9b9e01'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"name":"Student 3","email":"student3@example.com","role":"student"},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"name":"Student 3","email":"student3@example.com","role":"student"}},"activity":{"_rowId":7,"id":"0198bc25-0e41-75b9-986d-f9493d9b9e01","&":{"id":"0198bc25-0e42-7cfc-929e-4735f36e0c0f"}},"id":"0198bc25-0e42-7cfc-929e-47341fe26320"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student 3","email":"student3@example.com","role":"student"}'[39m,
    [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m,
    [32m'0198bc25-0e41-75b9-986d-f9493d9b9e01'[39m,
    [32m'0198bc25-0e42-7cfc-929e-4735f36e0c0f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student 3","email":"student3@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:41.859Z","_User_bound_sourceRecordId":"0198bc25-0e42-7cfc-929e-47341fe26320","_User_bound_transformIndex":0,"id":"0198bc25-0e43-7daf-95ca-1b278f059870"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student 3'[39m,
    [32m'student3@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.859Z'[39m,
    [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m,
    [33m0[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-0e43-7daf-95ca-1b278f059870"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-0e43-7daf-95ca-1b278f059870"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:41.863Z","id":"0198bc25-0e43-7daf-95ca-1b278f059870"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:41.863Z'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student3@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[INFO] interaction: AssignUserToDormitory {}
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-0e4d-7680-9ec2-090277788cdd"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-0e4d-7680-9ec2-090277788cdd'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AssignUserToDormitory","interactionId":"8f95f0ea-dd77-41df-a31d-3472b5dcee72","user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"query":{},"payload":{"userId":"0198bc25-0e43-7daf-95ca-1b278f059870","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"},"args":{"user":{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"},"payload":{"userId":"0198bc25-0e43-7daf-95ca-1b278f059870","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"}},"activity":{"_rowId":8,"id":"0198bc25-0e4d-7680-9ec2-090277788cdd","&":{"id":"0198bc25-0e4e-7fda-b088-d0a18a98653e"}},"id":"0198bc25-0e4e-7fda-b088-d0a068fcbea4"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AssignUserToDormitory'[39m,
    [32m'8f95f0ea-dd77-41df-a31d-3472b5dcee72'[39m,
    [32m'{"id":"0198bc25-0df2-7895-9d16-fc303a6a7e69","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"userId":"0198bc25-0e43-7daf-95ca-1b278f059870","dormitoryId":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
    [32m'0198bc25-0e4e-7fda-b088-d0a068fcbea4'[39m,
    [32m'0198bc25-0e4d-7680-9ec2-090277788cdd'[39m,
    [32m'0198bc25-0e4e-7fda-b088-d0a18a98653e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e4e-7fda-b088-d0a068fcbea4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e4e-7fda-b088-d0a068fcbea4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e4e-7fda-b088-d0a068fcbea4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e4e-7fda-b088-d0a068fcbea4'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for UserDormitoryRelation to flash out, for creation with data {"source":{"id":"0198bc25-0e43-7daf-95ca-1b278f059870"},"target":{"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"},"_type":"StateNode","uuid":"c3b984f8-d803-4732-becd-c872df32399f","name":"exists","_UserDormitoryRelation_bound_currentState":"exists","id":"0198bc25-0e53-76c4-9411-6af158389f63"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_0",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_1",\n'[39m +
    [32m'"UserDormitoryRelation"."use_nam_1" AS "FIELD_2",\n'[39m +
    [32m'"UserDormitoryRelation"."use_ema_2" AS "FIELD_3",\n'[39m +
    [32m'"UserDormitoryRelation"."use_pho_3" AS "FIELD_4",\n'[39m +
    [32m'"UserDormitoryRelation"."use_rol_4" AS "FIELD_5",\n'[39m +
    [32m'"UserDormitoryRelation"."use_sta_5" AS "FIELD_6",\n'[39m +
    [32m'"UserDormitoryRelation"."use_tot_6" AS "FIELD_7",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isr_7" AS "FIELD_8",\n'[39m +
    [32m'"UserDormitoryRelation"."use_isd_8" AS "FIELD_9",\n'[39m +
    [32m'"UserDormitoryRelation"."use_cre_9" AS "FIELD_10",\n'[39m +
    [32m'"UserDormitoryRelation"."use_upd_10" AS "FIELD_11",\n'[39m +
    [32m'"UserDormitoryRelation"."use__11" AS "FIELD_12",\n'[39m +
    [32m'"UserDormitoryRelation"."use__12" AS "FIELD_13",\n'[39m +
    [32m'"UserDormitoryRelation"."use__13" AS "FIELD_14",\n'[39m +
    [32m'"UserDormitoryRelation"."use__14" AS "FIELD_15",\n'[39m +
    [32m'"UserDormitoryRelation"."use__15" AS "FIELD_16",\n'[39m +
    [32m'"UserDormitoryRelation"."use__16" AS "FIELD_17",\n'[39m +
    [32m'"UserDormitoryRelation"."use__17" AS "FIELD_18",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" AS "FIELD_19",\n'[39m +
    [32m'"UserDormitoryRelation"."use_dor_100" AS "FIELD_20",\n'[39m +
    [32m'"UserDormitoryRelation"."use__85" AS "FIELD_21",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_86" AS "FIELD_22",\n'[39m +
    [32m'"UserDormitoryRelation"."use_bed_101" AS "FIELD_23",\n'[39m +
    [32m'"UserDormitoryRelation"."use__87" AS "FIELD_24",\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_88" AS "FIELD_25"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "UserDormitoryRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"UserDormitoryRelation"."use_id_18" = $1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record with same row data for delete User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'delete'[39m,
  name: [32m'delete record User as row'[39m,
  sql: [32m'\nDELETE FROM "User"\nWHERE "use_id_18" = $1\n'[39m,
  params: [ [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record UserDormitoryRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use__85","use_id_86","use_dor_100","use_nam_1","use_ema_2","use_rol_4","use_sta_5","use_cre_9","use_upd_10","use__11","use__12","use__13","use__14","use__15","use__16","use__17","use_id_18")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17) \n'[39m,
  params: [
    [32m'exists'[39m,
    [32m'0198bc25-0e53-76c4-9411-6af158389f63'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'Student 3'[39m,
    [32m'student3@example.com'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:41.859Z'[39m,
    [32m'2025-08-18T07:46:41.863Z'[39m,
    [32m'0198bc25-0e42-7cfc-929e-47341fe26320'[39m,
    [33m0[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-0e43-7daf-95ca-1b278f059870'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'LEFT JOIN "User" AS \n'[39m +
    [32m'"Dormitory_users" ON \n'[39m +
    [32m'"Dormitory"."dor_id_36" = "Dormitory_users"."use_dor_100"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory_users"."use_id_86" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e53-76c4-9411-6af158389f63'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding related record: Dormitory.users'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_dor_100" = $1)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for Dormitory to flash out, for updating with data {"occupancy":1,"id":"0198bc25-0e02-77e1-8044-fa9403533ba2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'update'[39m,
  name: [32m'update record Dormitory by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "Dormitory"\n'[39m +
    [32m'SET "dor_occ_24" = $1,"dor_id_36" = $2\n'[39m +
    [32m'WHERE "dor_id_36" = ($3)\n'[39m +
    [32m'         RETURNING "dor_id_36" AS id'[39m,
  params: [
    [33m1[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m,
    [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AssignUserToDormitory'[39m,
  sql: [32m'ROLLBACK'[39m,
  params: [90mundefined[39m
}

stderr | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
[ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)

Caused by:
  → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
    → TypeError: Cannot read properties of null (reading 'id')

Stack trace:
  TypeError: Cannot read properties of null (reading 'id')
      at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
      at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
      at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
      at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
      at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
  ... (truncated)
[ERROR] systemError: unknownError {
  error: [ComputationError] Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (computationName: StateMachine, handleName: RecordStateMachineHandle)
  
  Caused by:
    → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}
[ERROR] interaction: AssignUserToDormitory {
  error: [InteractionExecutionError] Interaction execution failed. Caused by: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id') (interactionName: AssignUserToDormitory)
  
  Caused by:
    → ComputationError: Failed to run computation for dirty record. Caused by: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
      → ComputationError: Computation execution failed. Caused by: Cannot read properties of null (reading 'id')
        → TypeError: Cannot read properties of null (reading 'id')
  
  Stack trace:
    TypeError: Cannot read properties of null (reading 'id')
        at RecordStateMachineHandle.incrementalPatchCompute (/Users/camus/Work/interqat/interaqt-old/src/runtime/computations/StateMachine.ts:175:46)
        at Scheduler.runComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:650:63)
        at Scheduler.runDirtyRecordsComputation (/Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:473:36)
        at /Users/camus/Work/interqat/interaqt-old/src/runtime/Scheduler.ts:316:25
        at MonoStorage.dispatch (/Users/camus/Work/interqat/interaqt-old/src/runtime/MonoSystem.ts:133:37)
    ... (truncated)
}

stdout | tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" = $1 AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-0e02-77e1-8044-fa9403533ba2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-1001-7216-a665-c20bd57d7e97"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-1001-7216-a665-c20bd57d7e97'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-1001-7216-a665-c20bd57d7e97","&":{"id":"0198bc25-1002-7779-a019-4b38f10f2063"}},"id":"0198bc25-1002-7779-a019-4b37e3a1c3fc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m,
    [32m'0198bc25-1001-7216-a665-c20bd57d7e97'[39m,
    [32m'0198bc25-1002-7779-a019-4b38f10f2063'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:42.307Z","_User_bound_sourceRecordId":"0198bc25-1002-7779-a019-4b37e3a1c3fc","_User_bound_transformIndex":0,"id":"0198bc25-1003-7339-ab70-a6532447c421"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:42.307Z'[39m,
    [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m,
    [33m0[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-1003-7339-ab70-a6532447c421"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-1003-7339-ab70-a6532447c421"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.311Z","id":"0198bc25-1003-7339-ab70-a6532447c421"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.311Z'[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m,
    [32m'0198bc25-1003-7339-ab70-a6532447c421'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1002-7779-a019-4b37e3a1c3fc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-100e-713a-8a3d-0eb5f75a8772"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-100e-713a-8a3d-0eb5f75a8772'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"},"query":{},"payload":{"name":"Student User","email":"student@example.com","role":"student"},"args":{"user":{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"},"payload":{"name":"Student User","email":"student@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-100e-713a-8a3d-0eb5f75a8772","&":{"id":"0198bc25-100f-7f0d-ac5b-221c64f6b320"}},"id":"0198bc25-100f-7f0d-ac5b-221b39a319ef"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@example.com","role":"student"}'[39m,
    [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m,
    [32m'0198bc25-100e-713a-8a3d-0eb5f75a8772'[39m,
    [32m'0198bc25-100f-7f0d-ac5b-221c64f6b320'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:42.320Z","_User_bound_sourceRecordId":"0198bc25-100f-7f0d-ac5b-221b39a319ef","_User_bound_transformIndex":0,"id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:42.320Z'[39m,
    [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m,
    [33m0[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.325Z","id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.325Z'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-100f-7f0d-ac5b-221b39a319ef'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-101a-7831-907d-12fefe1ed251"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-101a-7831-907d-12fefe1ed251'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"},"query":{},"payload":{"name":"DormHead User","email":"dormhead@example.com","role":"dormHead"},"args":{"user":{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"},"payload":{"name":"DormHead User","email":"dormhead@example.com","role":"dormHead"}},"activity":{"_rowId":3,"id":"0198bc25-101a-7831-907d-12fefe1ed251","&":{"id":"0198bc25-101b-78ba-9546-b0bda65c37cd"}},"id":"0198bc25-101b-78ba-9546-b0bc03f60ce6"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"DormHead User","email":"dormhead@example.com","role":"dormHead"}'[39m,
    [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m,
    [32m'0198bc25-101a-7831-907d-12fefe1ed251'[39m,
    [32m'0198bc25-101b-78ba-9546-b0bda65c37cd'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"DormHead User","email":"dormhead@example.com","phone":null,"role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:42.334Z","_User_bound_sourceRecordId":"0198bc25-101b-78ba-9546-b0bc03f60ce6","_User_bound_transformIndex":0,"id":"0198bc25-101e-7aa1-81e2-ee6478724e96"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'DormHead User'[39m,
    [32m'dormhead@example.com'[39m,
    [1mnull[22m,
    [32m'dormHead'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:42.334Z'[39m,
    [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m,
    [33m0[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-101e-7aa1-81e2-ee6478724e96"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-101e-7aa1-81e2-ee6478724e96"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.337Z","id":"0198bc25-101e-7aa1-81e2-ee6478724e96"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.337Z'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-101b-78ba-9546-b0bc03f60ce6'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'dormhead@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
[INFO] interaction: IssuePointDeduction {}
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-1028-7c1a-b935-e0b08961ae7d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-1028-7c1a-b935-e0b08961ae7d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"IssuePointDeduction","interactionId":"cff5d596-7634-4a2f-8a75-4ebeb43a0d0b","user":{"id":"0198bc25-101e-7aa1-81e2-ee6478724e96"},"query":{},"payload":{"targetUserId":"0198bc25-1010-7e98-9de8-84b8ae175c7e","points":5,"reason":"Test deduction"},"args":{"user":{"id":"0198bc25-101e-7aa1-81e2-ee6478724e96"},"payload":{"targetUserId":"0198bc25-1010-7e98-9de8-84b8ae175c7e","points":5,"reason":"Test deduction"}},"activity":{"_rowId":4,"id":"0198bc25-1028-7c1a-b935-e0b08961ae7d","&":{"id":"0198bc25-1029-7107-b895-441e2bddf23f"}},"id":"0198bc25-1029-7107-b895-441d906ac4dc"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'IssuePointDeduction'[39m,
    [32m'cff5d596-7634-4a2f-8a75-4ebeb43a0d0b'[39m,
    [32m'{"id":"0198bc25-101e-7aa1-81e2-ee6478724e96"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc25-1010-7e98-9de8-84b8ae175c7e","points":5,"reason":"Test deduction"}'[39m,
    [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m,
    [32m'0198bc25-1028-7c1a-b935-e0b08961ae7d'[39m,
    [32m'0198bc25-1029-7107-b895-441e2bddf23f'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for creation with data {"reason":"Test deduction","points":5,"status":"active","description":null,"evidence":null,"deductedAt":"2025-08-18T07:46:42.348Z","createdAt":"2025-08-18T07:46:42.348Z","user":{"id":"0198bc25-1010-7e98-9de8-84b8ae175c7e","&":{"id":"0198bc25-102d-7c88-a750-b773f1815773"}},"issuedBy":{"id":"0198bc25-101e-7aa1-81e2-ee6478724e96","&":{"id":"0198bc25-102d-7c88-a750-b7747dae0ac4"}},"_PointDeduction_bound_sourceRecordId":"0198bc25-1029-7107-b895-441d906ac4dc","_PointDeduction_bound_transformIndex":0,"id":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "PointDeduction"\n'[39m +
    [32m'("poi_rea_44","poi_poi_45","poi_cat_46","poi_sta_47","poi_des_48","poi_evi_49","poi_ded_50","poi_cre_51","poi__52","poi__53","poi_id_55","poi__54","poi_use_104","use_id_92","poi_iss_105","ded_id_93")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16) \n'[39m,
  params: [
    [32m'Test deduction'[39m,
    [33m5[39m,
    [90mundefined[39m,
    [32m'active'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:42.348Z'[39m,
    [32m'2025-08-18T07:46:42.348Z'[39m,
    [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m,
    [33m0[39m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m,
    [32m'active'[39m,
    [32m'0198bc25-1010-7e98-9de8-84b8ae175c7e'[39m,
    [32m'0198bc25-102d-7c88-a750-b773f1815773'[39m,
    [32m'0198bc25-101e-7aa1-81e2-ee6478724e96'[39m,
    [32m'0198bc25-102d-7c88-a750-b7747dae0ac4'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"status":"active","id":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi_sta_47" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1029-7107-b895-441d906ac4dc'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m'IssuePointDeduction'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_rea_44" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test deduction'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
[INFO] interaction: AppealDeduction {}
{
  type: [32m'scheme'[39m,
  name: [32m'AppealDeduction'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-1032-7a2b-91c8-b6d910698882"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-1032-7a2b-91c8-b6d910698882'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"AppealDeduction","interactionId":"cd465494-7bf7-4dd8-b821-37a6bc8c37be","user":{"id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"},"query":{},"payload":{"deductionId":"0198bc25-102d-7c88-a750-b77251078c31","appealReason":"Not fair"},"args":{"user":{"id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"},"payload":{"deductionId":"0198bc25-102d-7c88-a750-b77251078c31","appealReason":"Not fair"}},"activity":{"_rowId":5,"id":"0198bc25-1032-7a2b-91c8-b6d910698882","&":{"id":"0198bc25-1034-76ad-aabe-09483384fe4b"}},"id":"0198bc25-1034-76ad-aabe-094777864264"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'AppealDeduction'[39m,
    [32m'cd465494-7bf7-4dd8-b821-37a6bc8c37be'[39m,
    [32m'{"id":"0198bc25-1010-7e98-9de8-84b8ae175c7e"}'[39m,
    [32m'{}'[39m,
    [32m'{"deductionId":"0198bc25-102d-7c88-a750-b77251078c31","appealReason":"Not fair"}'[39m,
    [32m'0198bc25-1034-76ad-aabe-094777864264'[39m,
    [32m'0198bc25-1032-7a2b-91c8-b6d910698882'[39m,
    [32m'0198bc25-1034-76ad-aabe-09483384fe4b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1034-76ad-aabe-094777864264'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1034-76ad-aabe-094777864264'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1034-76ad-aabe-094777864264'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"_PointDeduction_status_bound_currentState":"appealed","id":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi__54" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'appealed'[39m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"status":"appealed","id":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi_sta_47" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'appealed'[39m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1034-76ad-aabe-094777864264'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1034-76ad-aabe-094777864264'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m'AppealDeduction'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
[INFO] interaction: CancelDeduction {}
{
  type: [32m'scheme'[39m,
  name: [32m'CancelDeduction'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-103e-7303-9765-497852e2b989"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-103e-7303-9765-497852e2b989'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CancelDeduction","interactionId":"7d185bd0-79db-4fdf-b709-a978cfdb3817","user":{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"},"query":{},"payload":{"deductionId":"0198bc25-102d-7c88-a750-b77251078c31"},"args":{"user":{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"},"payload":{"deductionId":"0198bc25-102d-7c88-a750-b77251078c31"}},"activity":{"_rowId":6,"id":"0198bc25-103e-7303-9765-497852e2b989","&":{"id":"0198bc25-103e-7303-9765-497a4dcc1573"}},"id":"0198bc25-103e-7303-9765-49797cda719c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CancelDeduction'[39m,
    [32m'7d185bd0-79db-4fdf-b709-a978cfdb3817'[39m,
    [32m'{"id":"0198bc25-1003-7339-ab70-a6532447c421","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"deductionId":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
    [32m'0198bc25-103e-7303-9765-49797cda719c'[39m,
    [32m'0198bc25-103e-7303-9765-497852e2b989'[39m,
    [32m'0198bc25-103e-7303-9765-497a4dcc1573'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-103e-7303-9765-49797cda719c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-103e-7303-9765-49797cda719c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-103e-7303-9765-49797cda719c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"_PointDeduction_status_bound_currentState":"cancelled","id":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi__54" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'cancelled'[39m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for PointDeduction to flash out, for updating with data {"status":"cancelled","id":"0198bc25-102d-7c88-a750-b77251078c31"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'update'[39m,
  name: [32m'update record PointDeduction by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "PointDeduction"\n'[39m +
    [32m'SET "poi_sta_47" = $1,"poi_id_55" = $2,"poi_des_48" = $3,"poi_evi_49" = $4\n'[39m +
    [32m'WHERE "poi_id_55" = ($5)\n'[39m +
    [32m'         RETURNING "poi_id_55" AS id'[39m,
  params: [
    [32m'cancelled'[39m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-103e-7303-9765-49797cda719c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-103e-7303-9765-49797cda719c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CancelDeduction'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > PointDeduction.status transitions correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" = $1 AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-102d-7c88-a750-b77251078c31'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-11f4-7157-9f4c-9478d9b79b0d"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-11f4-7157-9f4c-9478d9b79b0d'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"admin-1","role":"admin"},"query":{},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"},"args":{"user":{"id":"admin-1","role":"admin"},"payload":{"name":"Admin User","email":"admin@example.com","role":"admin"}},"activity":{"_rowId":1,"id":"0198bc25-11f4-7157-9f4c-9478d9b79b0d","&":{"id":"0198bc25-11f5-7cf1-9f7c-f1356dd22087"}},"id":"0198bc25-11f5-7cf1-9f7c-f134436e9199"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"admin-1","role":"admin"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Admin User","email":"admin@example.com","role":"admin"}'[39m,
    [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m,
    [32m'0198bc25-11f4-7157-9f4c-9478d9b79b0d'[39m,
    [32m'0198bc25-11f5-7cf1-9f7c-f1356dd22087'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Admin User","email":"admin@example.com","phone":null,"role":"admin","status":"active","createdAt":"2025-08-18T07:46:42.807Z","_User_bound_sourceRecordId":"0198bc25-11f5-7cf1-9f7c-f134436e9199","_User_bound_transformIndex":0,"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Admin User'[39m,
    [32m'admin@example.com'[39m,
    [1mnull[22m,
    [32m'admin'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:42.807Z'[39m,
    [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m,
    [33m0[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.810Z","id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.810Z'[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m,
    [32m'0198bc25-11f7-79ad-8cf5-aab3c0e9d85b'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-11f5-7cf1-9f7c-f134436e9199'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_1"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'admin@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-1200-7595-81e7-9612db2d5980"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-1200-7595-81e7-9612db2d5980'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b","role":"student"},"query":{},"payload":{"name":"Student User","email":"student@example.com","role":"student"},"args":{"user":{"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b","role":"student"},"payload":{"name":"Student User","email":"student@example.com","role":"student"}},"activity":{"_rowId":2,"id":"0198bc25-1200-7595-81e7-9612db2d5980","&":{"id":"0198bc25-1202-79b3-8980-e3edb70ed478"}},"id":"0198bc25-1202-79b3-8980-e3ec3a4ec807"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"Student User","email":"student@example.com","role":"student"}'[39m,
    [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m,
    [32m'0198bc25-1200-7595-81e7-9612db2d5980'[39m,
    [32m'0198bc25-1202-79b3-8980-e3edb70ed478'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"Student User","email":"student@example.com","phone":null,"role":"student","status":"active","createdAt":"2025-08-18T07:46:42.820Z","_User_bound_sourceRecordId":"0198bc25-1202-79b3-8980-e3ec3a4ec807","_User_bound_transformIndex":0,"id":"0198bc25-1204-7400-aad5-6485b3393366"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'Student User'[39m,
    [32m'student@example.com'[39m,
    [1mnull[22m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:42.820Z'[39m,
    [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m,
    [33m0[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-1204-7400-aad5-6485b3393366"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-1204-7400-aad5-6485b3393366"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.824Z","id":"0198bc25-1204-7400-aad5-6485b3393366"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.824Z'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-1202-79b3-8980-e3ec3a4ec807'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
[INFO] interaction: CreateUser {}
{ type: [32m'scheme'[39m, name: [32m'CreateUser'[39m, sql: [32m'BEGIN'[39m, params: [90mundefined[39m }

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-120d-7aeb-a704-1eeb18194d6c"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-120d-7aeb-a704-1eeb18194d6c'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"CreateUser","interactionId":"9b0ecf50-ac67-42b9-a1d7-750c8a589750","user":{"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b","role":"student"},"query":{},"payload":{"name":"DormHead User","email":"dormhead@example.com","role":"dormHead"},"args":{"user":{"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b","role":"student"},"payload":{"name":"DormHead User","email":"dormhead@example.com","role":"dormHead"}},"activity":{"_rowId":3,"id":"0198bc25-120d-7aeb-a704-1eeb18194d6c","&":{"id":"0198bc25-120e-786e-93f6-02ff80e14b2e"}},"id":"0198bc25-120e-786e-93f6-02fe0ad6f6e1"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'CreateUser'[39m,
    [32m'9b0ecf50-ac67-42b9-a1d7-750c8a589750'[39m,
    [32m'{"id":"0198bc25-11f7-79ad-8cf5-aab3c0e9d85b","role":"student"}'[39m,
    [32m'{}'[39m,
    [32m'{"name":"DormHead User","email":"dormhead@example.com","role":"dormHead"}'[39m,
    [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m,
    [32m'0198bc25-120d-7aeb-a704-1eeb18194d6c'[39m,
    [32m'0198bc25-120e-786e-93f6-02ff80e14b2e'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for creation with data {"name":"DormHead User","email":"dormhead@example.com","phone":null,"role":"dormHead","status":"active","createdAt":"2025-08-18T07:46:42.832Z","_User_bound_sourceRecordId":"0198bc25-120e-786e-93f6-02fe0ad6f6e1","_User_bound_transformIndex":0,"id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "User"\n'[39m +
    [32m'("use_nam_1","use_ema_2","use_pho_3","use_rol_4","use_sta_5","use_cre_9","use__11","use__12","use_id_18","use__13","use__14","use__15","use__16","use__17")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) \n'[39m,
  params: [
    [32m'DormHead User'[39m,
    [32m'dormhead@example.com'[39m,
    [1mnull[22m,
    [32m'dormHead'[39m,
    [32m'active'[39m,
    [32m'2025-08-18T07:46:42.832Z'[39m,
    [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m,
    [33m0[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m,
    [32m'nameState'[39m,
    [32m'phoneState'[39m,
    [32m'student'[39m,
    [32m'active'[39m,
    [32m'updated'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"role":"student","id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_rol_4" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'student'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"status":"active","id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_sta_5" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'active'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for User to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.836Z","id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record User by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "User"\n'[39m +
    [32m'SET "use_upd_10" = $1,"use_id_18" = $2\n'[39m +
    [32m'WHERE "use_id_18" = ($3)\n'[39m +
    [32m'         RETURNING "use_id_18" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.836Z'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-120e-786e-93f6-02fe0ad6f6e1'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'CreateUser'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'student@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_0"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_ema_2" = $1 AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'dormhead@example.com'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
[INFO] interaction: InitiateRemovalRequest {}
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'BEGIN'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Activity_ to flash out, for creation with data {"id":"0198bc25-121b-79c4-9417-e38cd173232f"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Activity_"."_act_70" AS "FIELD_0",\n'[39m +
    [32m'"_Activity_"."_act_71" AS "FIELD_1",\n'[39m +
    [32m'"_Activity_"."_act_72" AS "FIELD_2",\n'[39m +
    [32m'"_Activity_"."_act_73" AS "FIELD_3",\n'[39m +
    [32m'"_Activity_"."_act_74" AS "FIELD_4"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Activity_" AS "_Activity_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create merged link dep record _Interaction_.activity'[39m,
  sql: [32m'\nINSERT INTO "_Activity_"\n("_act_74")\nVALUES\n($1) \n'[39m,
  params: [ [32m'0198bc25-121b-79c4-9417-e38cd173232f'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for _Interaction_ to flash out, for creation with data {"interactionName":"InitiateRemovalRequest","interactionId":"9e295763-ba63-44d0-b42c-cf7a0394aa42","user":{"id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"},"query":{},"payload":{"targetUserId":"0198bc25-1204-7400-aad5-6485b3393366","reason":"Test removal"},"args":{"user":{"id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"},"payload":{"targetUserId":"0198bc25-1204-7400-aad5-6485b3393366","reason":"Test removal"}},"activity":{"_rowId":4,"id":"0198bc25-121b-79c4-9417-e38cd173232f","&":{"id":"0198bc25-121c-73af-a583-9697f0c22a5c"}},"id":"0198bc25-121c-73af-a583-9696ad4d01d9"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5",\n'[39m +
    [32m'"_Interaction_"."_int_109" AS "FIELD_6",\n'[39m +
    [32m'"_Interaction_"."act_id_99" AS "FIELD_7"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "_Interaction_"\n'[39m +
    [32m'("_int_76","_int_75","_int_78","_int_79","_int_77","_int_80","_int_109","act_id_99")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8) \n'[39m,
  params: [
    [32m'InitiateRemovalRequest'[39m,
    [32m'9e295763-ba63-44d0-b42c-cf7a0394aa42'[39m,
    [32m'{"id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84"}'[39m,
    [32m'{}'[39m,
    [32m'{"targetUserId":"0198bc25-1204-7400-aad5-6485b3393366","reason":"Test removal"}'[39m,
    [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m,
    [32m'0198bc25-121b-79c4-9417-e38cd173232f'[39m,
    [32m'0198bc25-121c-73af-a583-9697f0c22a5c'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding User from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"User"."use_id_18" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding Dormitory from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"Dormitory"."dor_id_36" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding PointDeduction from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"PointDeduction"."poi_id_55" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for creation with data {"reason":"Test removal","totalPoints":0,"status":"pending","adminComment":null,"processedAt":null,"createdAt":"2025-08-18T07:46:42.848Z","updatedAt":"2025-08-18T07:46:42.848Z","targetUser":{"id":"0198bc25-1204-7400-aad5-6485b3393366","&":{"id":"0198bc25-1220-7b4f-9072-25fd98cde118"}},"requestedBy":{"id":"0198bc25-1210-7f61-a4b9-b9d5b7910a84","&":{"id":"0198bc25-1220-7b4f-9072-25fe07c8cd98"}},"_RemovalRequest_bound_sourceRecordId":"0198bc25-121c-73af-a583-9696ad4d01d9","_RemovalRequest_bound_transformIndex":0,"id":"0198bc25-1220-7b4f-9072-25fcfe0a82f2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'insert'[39m,
  name: [32m'create record RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'INSERT INTO "RemovalRequest"\n'[39m +
    [32m'("rem_rea_56","rem_tot_57","rem_sta_58","rem_adm_59","rem_pro_60","rem_cre_61","rem_upd_62","rem__63","rem__64","rem_id_69","rem__65","rem__66","rem__67","rem__68","rem_tar_106","rem_id_94","rem_req_107","rem_id_95")\n'[39m +
    [32m'VALUES\n'[39m +
    [32m'($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) \n'[39m,
  params: [
    [32m'Test removal'[39m,
    [33m0[39m,
    [32m'pending'[39m,
    [1mnull[22m,
    [1mnull[22m,
    [32m'2025-08-18T07:46:42.848Z'[39m,
    [32m'2025-08-18T07:46:42.848Z'[39m,
    [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m,
    [33m0[39m,
    [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m,
    [32m'pending'[39m,
    [32m'comment'[39m,
    [32m'processed'[39m,
    [32m'updated'[39m,
    [32m'0198bc25-1204-7400-aad5-6485b3393366'[39m,
    [32m'0198bc25-1220-7b4f-9072-25fd98cde118'[39m,
    [32m'0198bc25-1210-7f61-a4b9-b9d5b7910a84'[39m,
    [32m'0198bc25-1220-7b4f-9072-25fe07c8cd98'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"status":"pending","id":"0198bc25-1220-7b4f-9072-25fcfe0a82f2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_sta_58" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'pending'[39m,
    [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m,
    [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'find record for updating RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding combined records for RemovalRequest to flash out, for updating with data {"updatedAt":"2025-08-18T07:46:42.851Z","id":"0198bc25-1220-7b4f-9072-25fcfe0a82f2"}'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'1=$1\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: [ [33m1[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'update'[39m,
  name: [32m'update record RemovalRequest by id'[39m,
  sql: [32m'\n'[39m +
    [32m'UPDATE "RemovalRequest"\n'[39m +
    [32m'SET "rem_upd_62" = $1,"rem_id_69" = $2\n'[39m +
    [32m'WHERE "rem_id_69" = ($3)\n'[39m +
    [32m'         RETURNING "rem_id_69" AS id'[39m,
  params: [
    [32m'2025-08-18T07:46:42.851Z'[39m,
    [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m,
    [32m'0198bc25-1220-7b4f-9072-25fcfe0a82f2'[39m
  ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"_Interaction_"."_int_80" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequestAdminRelation from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding _Interaction_ from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"_Interaction_"."_int_75" AS "FIELD_0",\n'[39m +
    [32m'"_Interaction_"."_int_76" AS "FIELD_1",\n'[39m +
    [32m'"_Interaction_"."_int_77" AS "FIELD_2",\n'[39m +
    [32m'"_Interaction_"."_int_78" AS "FIELD_3",\n'[39m +
    [32m'"_Interaction_"."_int_79" AS "FIELD_4",\n'[39m +
    [32m'"_Interaction_"."_int_80" AS "FIELD_5"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"_Interaction_" AS "_Interaction_"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("_Interaction_"."_int_80" = $1 AND "_Interaction_"."_int_80" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'0198bc25-121c-73af-a583-9696ad4d01d9'[39m ]
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'scheme'[39m,
  name: [32m'InitiateRemovalRequest'[39m,
  sql: [32m'COMMIT'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
{
  type: [32m'query'[39m,
  name: [32m'finding RemovalRequest from handle'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_rea_56" = $1 AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'LIMIT 1\n'[39m,
  params: [ [32m'Test removal'[39m ]
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'CREATE Table IF NOT EXISTS "_IDS_" (last INTEGER, name TEXT)'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "User" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "use_nam_1" TEXT,    "use_ema_2" TEXT,    "use_pho_3" TEXT,    "use_rol_4" TEXT,    "use_sta_5" TEXT,    "use_tot_6" INT,    "use_isr_7" BOOL,    "use_isd_8" BOOL,    "use_cre_9" TEXT,    "use_upd_10" TEXT,    "use__11" TEXT,    "use__12" INT,    "use__13" TEXT,    "use__14" TEXT,    "use__15" TEXT,    "use__16" TEXT,    "use__17" TEXT,    "use_id_18" UUID,    "use__85" TEXT,    "use_id_86" UUID,    "use_dor_100" UUID,    "use__87" TEXT,    "use_id_88" UUID,    "use_bed_101" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Dormitory" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "dor_nam_19" TEXT,    "dor_cap_20" INT,    "dor_flo_21" INT,    "dor_bui_22" TEXT,    "dor_sta_23" TEXT,    "dor_occ_24" INT,    "dor_ava_25" INT,    "dor_has_26" BOOL,    "dor_cre_27" TEXT,    "dor_upd_28" TEXT,    "dor__29" TEXT,    "dor__30" INT,    "dor__31" TEXT,    "dor__32" TEXT,    "dor__33" TEXT,    "dor__34" TEXT,    "dor__35" TEXT,    "dor_id_36" UUID,    "dor__90" TEXT,    "dor_id_91" UUID,    "dor_dor_103" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "Bed" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "bed_bed_37" TEXT,    "bed_sta_38" TEXT,    "bed_isa_39" BOOL,    "bed_ass_40" TEXT,    "bed_cre_41" TEXT,    "bed_upd_42" TEXT,    "bed_id_43" UUID,    "dor_id_89" UUID,    "bed_dor_102" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "PointDeduction" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "poi_rea_44" TEXT,    "poi_poi_45" INT,    "poi_cat_46" TEXT,    "poi_sta_47" TEXT,    "poi_des_48" TEXT,    "poi_evi_49" TEXT,    "poi_ded_50" TEXT,    "poi_cre_51" TEXT,    "poi__52" TEXT,    "poi__53" INT,    "poi__54" TEXT,    "poi_id_55" UUID,    "use_id_92" UUID,    "poi_use_104" UUID,    "ded_id_93" UUID,    "poi_iss_105" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "RemovalRequest" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "rem_rea_56" TEXT,    "rem_tot_57" INT,    "rem_sta_58" TEXT,    "rem_adm_59" TEXT,    "rem_pro_60" TEXT,    "rem_cre_61" TEXT,    "rem_upd_62" TEXT,    "rem__63" TEXT,    "rem__64" INT,    "rem__65" TEXT,    "rem__66" TEXT,    "rem__67" TEXT,    "rem__68" TEXT,    "rem_id_69" UUID,    "rem_id_94" UUID,    "rem_tar_106" UUID,    "rem_id_95" UUID,    "rem_req_107" UUID,    "rem__96" TEXT,    "rem__97" INT,    "rem_id_98" UUID,    "rem_pro_108" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Activity_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_act_70" TEXT,    "_act_71" TEXT,    "_act_72" JSON,    "_act_73" JSON,    "_act_74" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_Interaction_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_int_75" TEXT,    "_int_76" TEXT,    "_int_77" JSON,    "_int_78" JSON,    "_int_79" JSON,    "_int_80" UUID,    "act_id_99" UUID,    "_int_109" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}
{
  type: [32m'scheme'[39m,
  name: [32m''[39m,
  sql: [32m'\n'[39m +
    [32m'CREATE TABLE "_System_" (\n'[39m +
    [32m'    "_rowId" SERIAL PRIMARY KEY,    "_sys_81" TEXT,    "_sys_82" TEXT,    "_sys_83" TEXT,    "_sys_84" UUID\n'[39m +
    [32m')\n'[39m,
  params: [90mundefined[39m
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting User'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"User"."use_nam_1" AS "FIELD_0",\n'[39m +
    [32m'"User"."use_ema_2" AS "FIELD_1",\n'[39m +
    [32m'"User"."use_pho_3" AS "FIELD_2",\n'[39m +
    [32m'"User"."use_rol_4" AS "FIELD_3",\n'[39m +
    [32m'"User"."use_sta_5" AS "FIELD_4",\n'[39m +
    [32m'"User"."use_tot_6" AS "FIELD_5",\n'[39m +
    [32m'"User"."use_isr_7" AS "FIELD_6",\n'[39m +
    [32m'"User"."use_isd_8" AS "FIELD_7",\n'[39m +
    [32m'"User"."use_cre_9" AS "FIELD_8",\n'[39m +
    [32m'"User"."use_upd_10" AS "FIELD_9",\n'[39m +
    [32m'"User"."use__11" AS "FIELD_10",\n'[39m +
    [32m'"User"."use__12" AS "FIELD_11",\n'[39m +
    [32m'"User"."use__13" AS "FIELD_12",\n'[39m +
    [32m'"User"."use__14" AS "FIELD_13",\n'[39m +
    [32m'"User"."use__15" AS "FIELD_14",\n'[39m +
    [32m'"User"."use__16" AS "FIELD_15",\n'[39m +
    [32m'"User"."use__17" AS "FIELD_16",\n'[39m +
    [32m'"User"."use_id_18" AS "FIELD_17",\n'[39m +
    [32m'"User"."use_dor_100" AS "FIELD_18",\n'[39m +
    [32m'"User"."use__85" AS "FIELD_19",\n'[39m +
    [32m'"User"."use_id_86" AS "FIELD_20",\n'[39m +
    [32m'"User"."use_bed_101" AS "FIELD_21",\n'[39m +
    [32m'"User"."use__87" AS "FIELD_22",\n'[39m +
    [32m'"User"."use_id_88" AS "FIELD_23"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"User" AS "User"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("User"."use_id_18" IS NOT NULL AND "User"."use_id_18" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting Dormitory'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"Dormitory"."dor_nam_19" AS "FIELD_0",\n'[39m +
    [32m'"Dormitory"."dor_cap_20" AS "FIELD_1",\n'[39m +
    [32m'"Dormitory"."dor_flo_21" AS "FIELD_2",\n'[39m +
    [32m'"Dormitory"."dor_bui_22" AS "FIELD_3",\n'[39m +
    [32m'"Dormitory"."dor_sta_23" AS "FIELD_4",\n'[39m +
    [32m'"Dormitory"."dor_occ_24" AS "FIELD_5",\n'[39m +
    [32m'"Dormitory"."dor_ava_25" AS "FIELD_6",\n'[39m +
    [32m'"Dormitory"."dor_has_26" AS "FIELD_7",\n'[39m +
    [32m'"Dormitory"."dor_cre_27" AS "FIELD_8",\n'[39m +
    [32m'"Dormitory"."dor_upd_28" AS "FIELD_9",\n'[39m +
    [32m'"Dormitory"."dor__29" AS "FIELD_10",\n'[39m +
    [32m'"Dormitory"."dor__30" AS "FIELD_11",\n'[39m +
    [32m'"Dormitory"."dor__31" AS "FIELD_12",\n'[39m +
    [32m'"Dormitory"."dor__32" AS "FIELD_13",\n'[39m +
    [32m'"Dormitory"."dor__33" AS "FIELD_14",\n'[39m +
    [32m'"Dormitory"."dor__34" AS "FIELD_15",\n'[39m +
    [32m'"Dormitory"."dor__35" AS "FIELD_16",\n'[39m +
    [32m'"Dormitory"."dor_id_36" AS "FIELD_17",\n'[39m +
    [32m'"Dormitory"."dor_dor_103" AS "FIELD_18",\n'[39m +
    [32m'"Dormitory"."dor__90" AS "FIELD_19",\n'[39m +
    [32m'"Dormitory"."dor_id_91" AS "FIELD_20"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"Dormitory" AS "Dormitory"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("Dormitory"."dor_id_36" IS NOT NULL AND "Dormitory"."dor_id_36" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting PointDeduction'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"PointDeduction"."poi_rea_44" AS "FIELD_0",\n'[39m +
    [32m'"PointDeduction"."poi_poi_45" AS "FIELD_1",\n'[39m +
    [32m'"PointDeduction"."poi_cat_46" AS "FIELD_2",\n'[39m +
    [32m'"PointDeduction"."poi_sta_47" AS "FIELD_3",\n'[39m +
    [32m'"PointDeduction"."poi_des_48" AS "FIELD_4",\n'[39m +
    [32m'"PointDeduction"."poi_evi_49" AS "FIELD_5",\n'[39m +
    [32m'"PointDeduction"."poi_ded_50" AS "FIELD_6",\n'[39m +
    [32m'"PointDeduction"."poi_cre_51" AS "FIELD_7",\n'[39m +
    [32m'"PointDeduction"."poi__52" AS "FIELD_8",\n'[39m +
    [32m'"PointDeduction"."poi__53" AS "FIELD_9",\n'[39m +
    [32m'"PointDeduction"."poi__54" AS "FIELD_10",\n'[39m +
    [32m'"PointDeduction"."poi_id_55" AS "FIELD_11",\n'[39m +
    [32m'"PointDeduction"."poi_use_104" AS "FIELD_12",\n'[39m +
    [32m'"PointDeduction"."use_id_92" AS "FIELD_13",\n'[39m +
    [32m'"PointDeduction"."poi_iss_105" AS "FIELD_14",\n'[39m +
    [32m'"PointDeduction"."ded_id_93" AS "FIELD_15"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"PointDeduction" AS "PointDeduction"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("PointDeduction"."poi_id_55" IS NOT NULL AND "PointDeduction"."poi_id_55" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequest'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequest"."rem_rea_56" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequest"."rem_tot_57" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequest"."rem_sta_58" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequest"."rem_adm_59" AS "FIELD_3",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_60" AS "FIELD_4",\n'[39m +
    [32m'"RemovalRequest"."rem_cre_61" AS "FIELD_5",\n'[39m +
    [32m'"RemovalRequest"."rem_upd_62" AS "FIELD_6",\n'[39m +
    [32m'"RemovalRequest"."rem__63" AS "FIELD_7",\n'[39m +
    [32m'"RemovalRequest"."rem__64" AS "FIELD_8",\n'[39m +
    [32m'"RemovalRequest"."rem__65" AS "FIELD_9",\n'[39m +
    [32m'"RemovalRequest"."rem__66" AS "FIELD_10",\n'[39m +
    [32m'"RemovalRequest"."rem__67" AS "FIELD_11",\n'[39m +
    [32m'"RemovalRequest"."rem__68" AS "FIELD_12",\n'[39m +
    [32m'"RemovalRequest"."rem_id_69" AS "FIELD_13",\n'[39m +
    [32m'"RemovalRequest"."rem_tar_106" AS "FIELD_14",\n'[39m +
    [32m'"RemovalRequest"."rem_id_94" AS "FIELD_15",\n'[39m +
    [32m'"RemovalRequest"."rem_req_107" AS "FIELD_16",\n'[39m +
    [32m'"RemovalRequest"."rem_id_95" AS "FIELD_17",\n'[39m +
    [32m'"RemovalRequest"."rem_pro_108" AS "FIELD_18",\n'[39m +
    [32m'"RemovalRequest"."rem__96" AS "FIELD_19",\n'[39m +
    [32m'"RemovalRequest"."rem__97" AS "FIELD_20",\n'[39m +
    [32m'"RemovalRequest"."rem_id_98" AS "FIELD_21"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequest"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequest"."rem_id_69" IS NOT NULL AND "RemovalRequest"."rem_id_69" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

stdout | tests/basic.test.ts > Permission and Business Rules > placeholder - will add tests later
{
  type: [32m'query'[39m,
  name: [32m'find record for deleting RemovalRequestAdminRelation'[39m,
  sql: [32m'\n'[39m +
    [32m'SELECT\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__96" AS "FIELD_0",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem__97" AS "FIELD_1",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_id_98" AS "FIELD_2",\n'[39m +
    [32m'"RemovalRequestAdminRelation"."rem_pro_108" AS "FIELD_3"\n'[39m +
    [32m'FROM\n'[39m +
    [32m'"RemovalRequest" AS "RemovalRequestAdminRelation"\n'[39m +
    [32m'\n'[39m +
    [32m'WHERE\n'[39m +
    [32m'("RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL AND "RemovalRequestAdminRelation"."rem_id_98" IS NOT NULL)\n'[39m +
    [32m'\n'[39m +
    [32m'\n'[39m,
  params: []
}

 ❯ tests/basic.test.ts (23 tests | 11 failed) 11010ms
   ✓ Basic Functionality > User entity is created when CreateUser interaction is triggered  621ms
   ✓ Basic Functionality > User entity defaults to student role when no role provided  447ms
   ✓ Basic Functionality > Dormitory entity is created when CreateDormitory interaction is triggered  442ms
   ✓ Basic Functionality > Dormitory entity defaults floor and building to null when not provided  437ms
   ✓ Basic Functionality > PointDeduction entity is created when IssuePointDeduction interaction is triggered  449ms
   ✓ Basic Functionality > PointDeduction entity defaults description and evidence to null when not provided  436ms
   ✓ Basic Functionality > RemovalRequest entity is created when InitiateRemovalRequest interaction is triggered  445ms
   × Basic Functionality > UserDormitoryRelation is created and deleted correctly 549ms
     → expected { Object (id) } to be undefined
   × Basic Functionality > UserBedRelation is created and deleted correctly 557ms
     → expected { Object (id) } to be undefined
   × Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly 463ms
     → expected undefined to be defined
   ✓ Basic Functionality > Bed entities are created automatically with Dormitory  437ms
   ✓ Basic Functionality > UserPointDeductionRelation and DeductionIssuerRelation are created with PointDeduction  453ms
   ✓ Basic Functionality > RemovalRequestTargetRelation and RemovalRequestInitiatorRelation are created with RemovalRequest  469ms
   × Basic Functionality > RemovalRequestAdminRelation is created when processing removal request 516ms
     → expected undefined to be defined
   × Basic Functionality > User.name and User.phone are updated via UpdateUserProfile 470ms
     → expected 'Original Name' to be 'Updated Name' // Object.is equality
   × Basic Functionality > User.role transitions correctly between student and dormHead 478ms
     → expected 'student' to be 'dormHead' // Object.is equality
   × Basic Functionality > User.status transitions to removed when removal request is approved 490ms
     → expected 'active' to be 'removed' // Object.is equality
   × Basic Functionality > User.updatedAt is updated when user is modified 463ms
     → expected '2025-08-18T07:46:40.873Z' not to be '2025-08-18T07:46:40.873Z' // Object.is equality
   × Basic Functionality > Dormitory properties are updated correctly 456ms
     → expected 'Original Dorm' to be 'Updated Dorm' // Object.is equality
   × Basic Functionality > Dormitory.occupancy counts users correctly 530ms
     → expected +0 to be 3 // Object.is equality
   ✓ Basic Functionality > PointDeduction.status transitions correctly  495ms
   × Basic Functionality > RemovalRequest.status and processedAt are updated correctly 478ms
     → expected undefined to be null
   ✓ Permission and Business Rules > placeholder - will add tests later  428ms

⎯⎯⎯⎯⎯⎯ Failed Tests 11 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/basic.test.ts > Basic Functionality > UserDormitoryRelation is created and deleted correctly
AssertionError: expected { Object (id) } to be undefined

[32m- Expected:[39m 
undefined

[31m+ Received:[39m 
{
  "id": "0198bc24-f794-7505-8b4b-097b0b510a60",
}

 ❯ tests/basic.test.ts:500:27
    498|       ['id']
    499|     )
    500|     expect(finalRelation).toBeUndefined()  // When record not found, r…
       |                           ^
    501| 
    502|     // Test 4: Test that rejection doesn't delete the relation

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > UserBedRelation is created and deleted correctly
AssertionError: expected { Object (id) } to be undefined

[32m- Expected:[39m 
undefined

[31m+ Received:[39m 
{
  "id": "0198bc24-f9ce-7493-897f-6ba443a36529",
}

 ❯ tests/basic.test.ts:757:30
    755|       ['id']
    756|     )
    757|     expect(finalBedRelation).toBeUndefined()
       |                              ^
    758| 
    759|     // Test 5: Test ProcessRemovalRequest with rejection - should NOT …

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > DormitoryDormHeadRelation is created and deleted correctly
AssertionError: expected undefined to be defined
 ❯ tests/basic.test.ts:896:30
    894|       ['id', 'source', 'target']
    895|     )
    896|     expect(dormHeadRelation).toBeDefined()
       |                              ^
    897|     expect(dormHeadRelation.source.id).toBe(dormitory.id)
    898|     expect(dormHeadRelation.target.id).toBe(student.id)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > RemovalRequestAdminRelation is created when processing removal request
AssertionError: expected undefined to be defined
 ❯ tests/basic.test.ts:1300:27
    1298|       ['id', 'source', 'target']
    1299|     )
    1300|     expect(adminRelation).toBeDefined()
       |                           ^
    1301|     expect(adminRelation.id).toBeDefined()
    1302|     expect(adminRelation.source.id).toBe(removalRequest.id)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > User.name and User.phone are updated via UpdateUserProfile
AssertionError: expected 'Original Name' to be 'Updated Name' // Object.is equality

Expected: [32m"[7mUpdated[27m Name"[39m
Received: [31m"[7mOriginal[27m Name"[39m

 ❯ tests/basic.test.ts:1421:30
    1419|     )
    1420|     
    1421|     expect(updatedUser.name).toBe('Updated Name')
       |                              ^
    1422|     expect(updatedUser.phone).toBe('9876543210')
    1423|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > User.role transitions correctly between student and dormHead
AssertionError: expected 'student' to be 'dormHead' // Object.is equality

Expected: [32m"dormHead"[39m
Received: [31m"student"[39m

 ❯ tests/basic.test.ts:1503:27
    1501|     )
    1502|     
    1503|     expect(dormHead.role).toBe('dormHead')
       |                           ^
    1504| 
    1505|     // Remove dorm head - should transition back to student

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > User.status transitions to removed when removal request is approved
AssertionError: expected 'active' to be 'removed' // Object.is equality

Expected: [32m"[7mremo[27mve[7md[27m"[39m
Received: [31m"[7macti[27mve"[39m

 ❯ tests/basic.test.ts:1611:32
    1609|     )
    1610|     
    1611|     expect(removedUser.status).toBe('removed')
       |                                ^
    1612|   })
    1613| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > User.updatedAt is updated when user is modified
AssertionError: expected '2025-08-18T07:46:40.873Z' not to be '2025-08-18T07:46:40.873Z' // Object.is equality
 ❯ tests/basic.test.ts:1672:39
    1670|     // updatedAt should have changed
    1671|     expect(updatedUser.updatedAt).toBeDefined()
    1672|     expect(updatedUser.updatedAt).not.toBe(initialUpdatedAt)
       |                                       ^
    1673|   })
    1674| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > Dormitory properties are updated correctly
AssertionError: expected 'Original Dorm' to be 'Updated Dorm' // Object.is equality

Expected: [32m"[7mUpdated[27m Dorm"[39m
Received: [31m"[7mOriginal[27m Dorm"[39m

 ❯ tests/basic.test.ts:1734:30
    1732|     )
    1733|     
    1734|     expect(updatedDorm.name).toBe('Updated Dorm')
       |                              ^
    1735|     expect(updatedDorm.floor).toBe(2)
    1736|     expect(updatedDorm.building).toBe('B')

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > Dormitory.occupancy counts users correctly
AssertionError: expected +0 to be 3 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 0[39m

 ❯ tests/basic.test.ts:1829:36
    1827|     )
    1828|     
    1829|     expect(occupiedDorm.occupancy).toBe(3)
       |                                    ^
    1830|   })
    1831| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/11]⎯

 FAIL  tests/basic.test.ts > Basic Functionality > RemovalRequest.status and processedAt are updated correctly
AssertionError: expected undefined to be null

[32m- Expected:[39m 
null

[31m+ Received:[39m 
undefined

 ❯ tests/basic.test.ts:2008:33
    2006|     // Initial state
    2007|     expect(request.status).toBe('pending')
    2008|     expect(request.processedAt).toBeNull()
       |                                 ^
    2009|     expect(request.adminComment).toBeNull()
    2010| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/11]⎯


 Test Files  1 failed (1)
      Tests  11 failed | 12 passed (23)
   Start at  15:46:31
   Duration  11.73s (transform 316ms, setup 0ms, collect 470ms, tests 11.01s, environment 0ms, prepare 31ms)

