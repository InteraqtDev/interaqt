{
  "entities": [
    {
      "name": "User",
      "entityLevelAnalysis": {
        "purpose": "System users with different roles (admin, dormHead, student)",
        "creationSource": "interaction-created",
        "updateRequirements": "Profile updates, role changes, status changes",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated identifier, no computation needed",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "User's full name",
          "dataSource": "Direct assignment from CreateUser and UpdateUserProfile interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateUser", "UpdateUserProfile"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "email",
          "type": "string",
          "purpose": "Unique identifier and contact email",
          "dataSource": "Set once at creation by CreateUser, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["CreateUser"],
          "calculationMethod": "Set once at creation, immutable"
        },
        {
          "propertyName": "phone",
          "type": "string",
          "purpose": "Optional contact phone number",
          "dataSource": "Direct assignment from CreateUser and UpdateUserProfile interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateUser", "UpdateUserProfile"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "role",
          "type": "string",
          "purpose": "User role (admin, dormHead, student)",
          "dataSource": "Set at creation by CreateUser, changes via AssignDormHead/RemoveDormHead",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateUser", "AssignDormHead", "RemoveDormHead"],
          "calculationMethod": "State transitions between student, dormHead, admin"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "User account status (active, suspended, removed)",
          "dataSource": "Set to 'active' at creation, changes via ProcessRemovalRequest",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateUser", "ProcessRemovalRequest", "RemoveUserFromDormitory"],
          "calculationMethod": "State transitions between active, suspended, removed"
        },
        {
          "propertyName": "totalPoints",
          "type": "number",
          "purpose": "Total accumulated disciplinary points",
          "dataSource": "Summation of PointDeduction.points across all UserPointDeductionRelation where PointDeduction.status = 'active'",
          "computationDecision": "Summation",
          "reasoning": "Has dataDependencies with aggregation across relations, computationMethod contains 'Summation of'",
          "dependencies": ["UserPointDeductionRelation", "PointDeduction.points", "PointDeduction.status"],
          "interactionDependencies": [],
          "calculationMethod": "Summation of active PointDeduction.points"
        },
        {
          "propertyName": "isRemovable",
          "type": "boolean",
          "purpose": "Whether user is eligible for removal (totalPoints >= 30)",
          "dataSource": "Computed as totalPoints >= 30",
          "computationDecision": "computed",
          "reasoning": "Uses only own entity properties (totalPoints)",
          "dependencies": ["_self.totalPoints"],
          "interactionDependencies": [],
          "calculationMethod": "totalPoints >= 30"
        },
        {
          "propertyName": "isDormHead",
          "type": "boolean",
          "purpose": "Whether user is currently a dorm head",
          "dataSource": "Computed as role === 'dormHead' AND has DormitoryDormHeadRelation",
          "computationDecision": "computed",
          "reasoning": "Uses own property and relation existence check",
          "dependencies": ["_self.role", "DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "calculationMethod": "role === 'dormHead' AND exists(DormitoryDormHeadRelation)"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Account creation timestamp",
          "dataSource": "Set to current timestamp when CreateUser creates the user",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by entity Transform",
          "dependencies": [],
          "interactionDependencies": ["CreateUser"],
          "calculationMethod": "Current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataSource": "Updated to current timestamp whenever user properties are modified",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that update it",
          "dependencies": [],
          "interactionDependencies": ["UpdateUserProfile", "AssignDormHead", "RemoveDormHead", "ProcessRemovalRequest"],
          "calculationMethod": "Current timestamp on any update"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "Has interactionDependencies (CreateUser), lifecycle.creation is 'interaction-created'",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateUser"],
        "calculationMethod": "Create User entity when CreateUser interaction is triggered"
      }
    },
    {
      "name": "Dormitory",
      "entityLevelAnalysis": {
        "purpose": "Dormitory rooms that house students",
        "creationSource": "interaction-created",
        "updateRequirements": "Name, floor, building, status updates",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated identifier, no computation needed",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "Dormitory name (e.g., 'Building A - Room 301')",
          "dataSource": "Direct assignment from CreateDormitory and UpdateDormitory interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "capacity",
          "type": "number",
          "purpose": "Maximum number of beds (4-6)",
          "dataSource": "Set once at creation by CreateDormitory, must be 4-6, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set once at creation, immutable"
        },
        {
          "propertyName": "floor",
          "type": "number",
          "purpose": "Floor number in building",
          "dataSource": "Direct assignment from CreateDormitory and UpdateDormitory interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "building",
          "type": "string",
          "purpose": "Building name or code",
          "dataSource": "Direct assignment from CreateDormitory and UpdateDormitory interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Dormitory operational status (active, inactive)",
          "dataSource": "Set to 'active' at creation, can be changed via UpdateDormitory or DeactivateDormitory",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory", "DeactivateDormitory"],
          "calculationMethod": "State transitions between active and inactive"
        },
        {
          "propertyName": "occupancy",
          "type": "number",
          "purpose": "Current number of assigned users",
          "dataSource": "Count of UserDormitoryRelation where target = this dormitory",
          "computationDecision": "Count",
          "reasoning": "Has dataDependencies with relations, computationMethod contains 'Count of'",
          "dependencies": ["UserDormitoryRelation"],
          "interactionDependencies": [],
          "calculationMethod": "Count of UserDormitoryRelation"
        },
        {
          "propertyName": "availableBeds",
          "type": "number",
          "purpose": "Number of available beds",
          "dataSource": "Computed as capacity - occupancy",
          "computationDecision": "computed",
          "reasoning": "Uses only own entity properties",
          "dependencies": ["_self.capacity", "_self.occupancy"],
          "interactionDependencies": [],
          "calculationMethod": "capacity - occupancy"
        },
        {
          "propertyName": "hasDormHead",
          "type": "boolean",
          "purpose": "Whether dormitory has an assigned dorm head",
          "dataSource": "Computed as existence of DormitoryDormHeadRelation",
          "computationDecision": "Count",
          "reasoning": "Checks existence of relation",
          "dependencies": ["DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "calculationMethod": "Count(DormitoryDormHeadRelation) > 0"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Dormitory creation timestamp",
          "dataSource": "Set to current timestamp when CreateDormitory creates the dormitory",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by entity Transform",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataSource": "Updated to current timestamp whenever dormitory properties are modified",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that update it",
          "dependencies": [],
          "interactionDependencies": ["UpdateDormitory", "DeactivateDormitory"],
          "calculationMethod": "Current timestamp on any update"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "Has interactionDependencies (CreateDormitory), lifecycle.creation is 'interaction-created'",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Create Dormitory entity when CreateDormitory interaction is triggered"
      }
    },
    {
      "name": "Bed",
      "entityLevelAnalysis": {
        "purpose": "Individual bed units within dormitories",
        "creationSource": "created-with-parent",
        "updateRequirements": "Status updates, assignment tracking",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated identifier, no computation needed",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "bedNumber",
          "type": "string",
          "purpose": "Bed identifier within dormitory (e.g., 'A', 'B', '1', '2')",
          "dataSource": "Set at creation based on position (1st bed='A', 2nd='B', etc.)",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Auto-assigned based on creation order"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Bed status (available, occupied, maintenance)",
          "dataSource": "Changes to 'occupied' when UserBedRelation created, 'available' when relation deleted, 'maintenance' via admin action",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["UserBedRelation"],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest", "SetBedMaintenance"],
          "calculationMethod": "State transitions between available, occupied, maintenance"
        },
        {
          "propertyName": "isAvailable",
          "type": "boolean",
          "purpose": "Whether bed can be assigned",
          "dataSource": "Computed as status === 'available' AND no UserBedRelation exists",
          "computationDecision": "computed",
          "reasoning": "Uses own property and relation existence check",
          "dependencies": ["_self.status", "UserBedRelation"],
          "interactionDependencies": [],
          "calculationMethod": "status === 'available' AND !exists(UserBedRelation)"
        },
        {
          "propertyName": "assignedAt",
          "type": "timestamp",
          "purpose": "When current occupant was assigned",
          "dataSource": "Set to current timestamp when UserBedRelation is created, null when deleted",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that update it",
          "dependencies": [],
          "interactionDependencies": ["AssignUserToDormitory"],
          "calculationMethod": "Current timestamp when assigned, null when unassigned"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Bed creation timestamp",
          "dataSource": "Set to current timestamp when CreateDormitory creates the bed",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by parent entity",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataSource": "Updated to current timestamp whenever bed status changes",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that update it",
          "dependencies": [],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest", "SetBedMaintenance"],
          "calculationMethod": "Current timestamp on any update"
        }
      ],
      "entityComputationDecision": {
        "type": "None",
        "reasoning": "Created-with-parent (Dormitory), automatic creation",
        "dependencies": ["Dormitory"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created automatically with Dormitory entity"
      }
    },
    {
      "name": "PointDeduction",
      "entityLevelAnalysis": {
        "purpose": "Disciplinary point records for user violations",
        "creationSource": "interaction-created",
        "updateRequirements": "Status updates for appeals/cancellations",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated identifier, no computation needed",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Brief description of violation",
          "dataSource": "Set at creation by IssuePointDeduction, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set once at creation, immutable"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Number of points deducted (1-10)",
          "dataSource": "Set at creation by IssuePointDeduction, must be 1-10, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set once at creation, immutable"
        },
        {
          "propertyName": "category",
          "type": "string",
          "purpose": "Violation category (hygiene, noise, curfew, damage, other)",
          "dataSource": "Set at creation by IssuePointDeduction from enum values",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set once at creation from enum"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Deduction status (active, appealed, cancelled)",
          "dataSource": "Set to 'active' at creation, can change to 'appealed' or 'cancelled' via interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction", "AppealDeduction", "CancelDeduction"],
          "calculationMethod": "State transitions between active, appealed, cancelled"
        },
        {
          "propertyName": "description",
          "type": "string",
          "purpose": "Detailed explanation of violation",
          "dataSource": "Optional field set at creation by IssuePointDeduction",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set once at creation, optional"
        },
        {
          "propertyName": "evidence",
          "type": "string",
          "purpose": "URL or reference to supporting evidence",
          "dataSource": "Optional field set at creation by IssuePointDeduction",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set once at creation, optional"
        },
        {
          "propertyName": "deductedAt",
          "type": "timestamp",
          "purpose": "When the deduction was issued",
          "dataSource": "Set to current timestamp when IssuePointDeduction creates the deduction",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by entity Transform",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Current timestamp at creation"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Record creation timestamp",
          "dataSource": "Set to current timestamp when IssuePointDeduction creates the deduction",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by entity Transform",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Current timestamp at creation"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "Has interactionDependencies (IssuePointDeduction), lifecycle.creation is 'interaction-created'",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["IssuePointDeduction"],
        "calculationMethod": "Create PointDeduction entity when IssuePointDeduction interaction is triggered"
      }
    },
    {
      "name": "RemovalRequest",
      "entityLevelAnalysis": {
        "purpose": "Requests to remove problematic users from dormitories",
        "creationSource": "interaction-created",
        "updateRequirements": "Status updates, admin comments, processing timestamps",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated identifier, no computation needed",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Explanation for removal request",
          "dataSource": "Set at creation by InitiateRemovalRequest, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest"],
          "calculationMethod": "Set once at creation, immutable"
        },
        {
          "propertyName": "totalPoints",
          "type": "number",
          "purpose": "Total points of target user at request time",
          "dataSource": "Computed from target user's totalPoints when request is created",
          "computationDecision": "None",
          "reasoning": "Set at creation from target user, captured as snapshot",
          "dependencies": ["RemovalRequestTargetRelation", "User.totalPoints"],
          "interactionDependencies": [],
          "calculationMethod": "Snapshot of target user's totalPoints at creation"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Request status (pending, approved, rejected, cancelled)",
          "dataSource": "Set to 'pending' at creation, changes via ProcessRemovalRequest or CancelRemovalRequest",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it after creation",
          "dependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest", "ProcessRemovalRequest", "CancelRemovalRequest"],
          "calculationMethod": "State transitions: pending → approved/rejected/cancelled"
        },
        {
          "propertyName": "adminComment",
          "type": "string",
          "purpose": "Admin's decision comment",
          "dataSource": "Set by ProcessRemovalRequest when admin makes decision",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that set it",
          "dependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set when ProcessRemovalRequest executes"
        },
        {
          "propertyName": "processedAt",
          "type": "timestamp",
          "purpose": "When admin processed the request",
          "dataSource": "Set to current timestamp when ProcessRemovalRequest executes",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that set it",
          "dependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Current timestamp when processed"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Request creation timestamp",
          "dataSource": "Set to current timestamp when InitiateRemovalRequest creates the request",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by entity Transform",
          "dependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest"],
          "calculationMethod": "Current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataSource": "Updated to current timestamp when request status changes",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that update it",
          "dependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest", "CancelRemovalRequest"],
          "calculationMethod": "Current timestamp on any update"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "Has interactionDependencies (InitiateRemovalRequest), lifecycle.creation is 'interaction-created'",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["InitiateRemovalRequest"],
        "calculationMethod": "Create RemovalRequest entity when InitiateRemovalRequest interaction is triggered"
      }
    }
  ],
  "relations": [
    {
      "name": "UserDormitoryRelation",
      "relationAnalysis": {
        "purpose": "Assigns users to dormitories",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveUserFromDormitory", "ProcessRemovalRequest"]
        },
        "computationDecision": "StateMachine",
        "reasoning": "Interaction-created and can be deleted (hard-delete), requires StateMachine only",
        "dependencies": [],
        "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
        "calculationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest"
      }
    },
    {
      "name": "UserBedRelation",
      "relationAnalysis": {
        "purpose": "Assigns users to specific beds",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveUserFromDormitory", "ProcessRemovalRequest"]
        },
        "computationDecision": "StateMachine",
        "reasoning": "Interaction-created and can be deleted (hard-delete), requires StateMachine only",
        "dependencies": [],
        "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
        "calculationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest"
      }
    },
    {
      "name": "DormitoryBedRelation",
      "relationAnalysis": {
        "purpose": "Links dormitories to their beds",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, automatic creation",
        "dependencies": ["Dormitory", "Bed"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created automatically when Bed entities are created with Dormitory"
      }
    },
    {
      "name": "DormitoryDormHeadRelation",
      "relationAnalysis": {
        "purpose": "Assigns dorm heads to manage dormitories",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveDormHead"]
        },
        "computationDecision": "StateMachine",
        "reasoning": "Interaction-created and can be deleted (hard-delete), requires StateMachine only",
        "dependencies": [],
        "interactionDependencies": ["AssignDormHead", "RemoveDormHead"],
        "calculationMethod": "Created by AssignDormHead, deleted by RemoveDormHead"
      }
    },
    {
      "name": "UserPointDeductionRelation",
      "relationAnalysis": {
        "purpose": "Links users to their point deductions",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, automatic creation",
        "dependencies": ["User", "PointDeduction"],
        "interactionDependencies": ["IssuePointDeduction"],
        "calculationMethod": "Created automatically with PointDeduction entity"
      }
    },
    {
      "name": "DeductionIssuerRelation",
      "relationAnalysis": {
        "purpose": "Tracks who issued each point deduction",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, automatic creation",
        "dependencies": ["PointDeduction", "User"],
        "interactionDependencies": ["IssuePointDeduction"],
        "calculationMethod": "Created automatically with PointDeduction entity"
      }
    },
    {
      "name": "RemovalRequestTargetRelation",
      "relationAnalysis": {
        "purpose": "Links removal requests to target users",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, automatic creation",
        "dependencies": ["RemovalRequest", "User"],
        "interactionDependencies": ["InitiateRemovalRequest"],
        "calculationMethod": "Created automatically with RemovalRequest entity"
      }
    },
    {
      "name": "RemovalRequestInitiatorRelation",
      "relationAnalysis": {
        "purpose": "Tracks who initiated each removal request",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, automatic creation",
        "dependencies": ["RemovalRequest", "User"],
        "interactionDependencies": ["InitiateRemovalRequest"],
        "calculationMethod": "Created automatically with RemovalRequest entity"
      }
    },
    {
      "name": "RemovalRequestAdminRelation",
      "relationAnalysis": {
        "purpose": "Tracks which admin processed each removal request",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "Transform",
        "reasoning": "Interaction-created but cannot be deleted, use Transform with InteractionEventEntity",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["ProcessRemovalRequest"],
        "calculationMethod": "Created when ProcessRemovalRequest approves or rejects the request"
      }
    }
  ],
  "dictionaries": []
}
