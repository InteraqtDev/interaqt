{
  "entities": [
    {
      "name": "User",
      "entityLevelAnalysis": {
        "purpose": "System users with different roles (admin, dormHead, user) who can be assigned to dormitories",
        "creationSource": "interaction-created",
        "updateRequirements": "Role updated by AppointDormHead, status by ApproveEviction, points by RecordPointDeduction",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, no computation needed",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "User's display name",
          "dataSource": "Set at creation, assumed to be provided",
          "computationDecision": "None",
          "reasoning": "Set at creation, no modification interactions",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set at creation, assumed to be provided"
        },
        {
          "propertyName": "email",
          "type": "string",
          "purpose": "Unique email identifier for the user",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set at creation, immutable",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "phone",
          "type": "string",
          "purpose": "Contact phone number",
          "dataSource": "Set at creation, can be updated",
          "computationDecision": "None",
          "reasoning": "Optional field, no interactions modify it in current scope",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set at creation, can be updated"
        },
        {
          "propertyName": "role",
          "type": "string",
          "purpose": "User role in the system (admin, dormHead, user)",
          "dataSource": "Initially set to 'user', changed to 'dormHead' by AppointDormHead interaction",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["AppointDormHead"],
          "calculationMethod": "Initially set to 'user', changed to 'dormHead' by AppointDormHead interaction"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "User account status (active or inactive)",
          "dataSource": "Initially 'active', set to 'inactive' when ApproveEviction is executed for this user",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["ApproveEviction"],
          "calculationMethod": "Initially 'active', set to 'inactive' when ApproveEviction is executed for this user"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "User's behavior points, reduced by deductions",
          "dataSource": "Initially 100, reduced by points value in RecordPointDeduction interaction",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["RecordPointDeduction"],
          "calculationMethod": "Initially 100, reduced by points value in RecordPointDeduction interaction"
        },
        {
          "propertyName": "joinedAt",
          "type": "datetime",
          "purpose": "Timestamp when user joined the system",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "totalDeductions",
          "type": "number",
          "purpose": "Total points deducted from this user",
          "dataSource": "Summation of PointDeduction.points across all UserPointDeductionRelation",
          "computationDecision": "Summation",
          "reasoning": "ComputationMethod contains 'Summation of', has dataDependencies with relations",
          "dependencies": ["UserPointDeductionRelation", "PointDeduction.points"],
          "interactionDependencies": [],
          "calculationMethod": "Summation of PointDeduction.points across all UserPointDeductionRelation"
        },
        {
          "propertyName": "deductionCount",
          "type": "number",
          "purpose": "Number of times points have been deducted",
          "dataSource": "Count of UserPointDeductionRelation where target = this user",
          "computationDecision": "Count",
          "reasoning": "ComputationMethod contains 'Count of', has dataDependencies with relations",
          "dependencies": ["UserPointDeductionRelation"],
          "interactionDependencies": [],
          "calculationMethod": "Count of UserPointDeductionRelation where target = this user"
        }
      ],
      "entityComputationDecision": {
        "type": "None",
        "reasoning": "User entities are assumed to exist before system starts, not created by current system interactions",
        "dependencies": [],
        "interactionDependencies": [],
        "calculationMethod": "Independently created during system initialization or user registration (not part of current system scope)"
      }
    },
    {
      "name": "Dormitory",
      "entityLevelAnalysis": {
        "purpose": "Dormitory rooms that can house multiple students",
        "creationSource": "interaction-created",
        "updateRequirements": "Status automatically updated based on occupancy",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, no computation needed",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "Dormitory name (e.g., 'A栋101')",
          "dataSource": "Set from CreateDormitory payload",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by CreateDormitory",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set from CreateDormitory payload"
        },
        {
          "propertyName": "capacity",
          "type": "number",
          "purpose": "Maximum number of beds/residents (4-6)",
          "dataSource": "Set from CreateDormitory payload, must be between 4-6",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by CreateDormitory",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set from CreateDormitory payload, must be between 4-6"
        },
        {
          "propertyName": "floor",
          "type": "number",
          "purpose": "Floor number where dormitory is located",
          "dataSource": "Set from CreateDormitory payload",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by CreateDormitory",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set from CreateDormitory payload"
        },
        {
          "propertyName": "building",
          "type": "string",
          "purpose": "Building name where dormitory is located",
          "dataSource": "Set from CreateDormitory payload",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by CreateDormitory",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set from CreateDormitory payload"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Dormitory availability status (available, full, maintenance)",
          "dataSource": "Set to 'full' when occupancy equals capacity, 'available' when occupancy < capacity",
          "computationDecision": "computed",
          "reasoning": "Uses only own properties (occupancy and capacity) for calculation",
          "dependencies": ["_self.occupancy", "_self.capacity"],
          "interactionDependencies": [],
          "calculationMethod": "Set to 'full' when occupancy equals capacity, 'available' when occupancy < capacity"
        },
        {
          "propertyName": "createdAt",
          "type": "datetime",
          "purpose": "Timestamp when dormitory was created",
          "dataSource": "Set to current timestamp when CreateDormitory is executed",
          "computationDecision": "None",
          "reasoning": "Set only at creation time by CreateDormitory",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set to current timestamp when CreateDormitory is executed"
        },
        {
          "propertyName": "occupancy",
          "type": "number",
          "purpose": "Current number of occupied beds",
          "dataSource": "Count of DormitoryBedRelation where Bed.status = 'occupied'",
          "computationDecision": "Count",
          "reasoning": "ComputationMethod contains 'Count of', has dataDependencies with relations",
          "dependencies": ["DormitoryBedRelation", "Bed.status"],
          "interactionDependencies": [],
          "calculationMethod": "Count of DormitoryBedRelation where Bed.status = 'occupied'"
        },
        {
          "propertyName": "availableBeds",
          "type": "number",
          "purpose": "Number of available beds",
          "dataSource": "capacity - occupancy",
          "computationDecision": "computed",
          "reasoning": "Uses only own properties for calculation",
          "dependencies": ["_self.capacity", "_self.occupancy"],
          "interactionDependencies": [],
          "calculationMethod": "capacity - occupancy"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interactionDependencies includes CreateDormitory which creates the entity",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created by CreateDormitory interaction from admin users"
      }
    },
    {
      "name": "Bed",
      "entityLevelAnalysis": {
        "purpose": "Individual bed within a dormitory",
        "creationSource": "created-with-parent",
        "updateRequirements": "Status updated by AssignUserToDormitory and ApproveEviction",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, no computation needed",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "bedNumber",
          "type": "string",
          "purpose": "Bed number within dormitory (e.g., '1号床')",
          "dataSource": "Auto-generated based on index when CreateDormitory creates beds",
          "computationDecision": "None",
          "reasoning": "Set only at creation time when created with parent",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Auto-generated based on index when CreateDormitory creates beds"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Bed occupancy status (vacant or occupied)",
          "dataSource": "Set to 'occupied' by AssignUserToDormitory, set to 'vacant' by ApproveEviction",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["AssignUserToDormitory", "ApproveEviction"],
          "calculationMethod": "Set to 'occupied' by AssignUserToDormitory, set to 'vacant' by ApproveEviction"
        },
        {
          "propertyName": "createdAt",
          "type": "datetime",
          "purpose": "Timestamp when bed was created",
          "dataSource": "Set to current timestamp when CreateDormitory creates the bed",
          "computationDecision": "None",
          "reasoning": "Set only at creation time with parent",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set to current timestamp when CreateDormitory creates the bed"
        }
      ],
      "entityComputationDecision": {
        "type": "None",
        "reasoning": "Created-with-parent (Dormitory), automatic creation",
        "dependencies": ["Dormitory"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created together with Dormitory entity by CreateDormitory interaction"
      }
    },
    {
      "name": "PointDeduction",
      "entityLevelAnalysis": {
        "purpose": "Record of points deducted from a user for violations",
        "creationSource": "interaction-created",
        "updateRequirements": "Never updated after creation",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, no computation needed",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Reason for the point deduction",
          "dataSource": "Set from RecordPointDeduction payload",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RecordPointDeduction"],
          "calculationMethod": "Set from RecordPointDeduction payload"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Number of points deducted (positive number)",
          "dataSource": "Set from RecordPointDeduction payload, must be positive",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RecordPointDeduction"],
          "calculationMethod": "Set from RecordPointDeduction payload, must be positive"
        },
        {
          "propertyName": "category",
          "type": "string",
          "purpose": "Category of violation (hygiene, noise, lateness, damage, other)",
          "dataSource": "Set from RecordPointDeduction payload",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RecordPointDeduction"],
          "calculationMethod": "Set from RecordPointDeduction payload"
        },
        {
          "propertyName": "occurredAt",
          "type": "datetime",
          "purpose": "When the violation occurred",
          "dataSource": "Set from RecordPointDeduction payload or defaults to current time",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RecordPointDeduction"],
          "calculationMethod": "Set from RecordPointDeduction payload or defaults to current time"
        },
        {
          "propertyName": "recordedAt",
          "type": "datetime",
          "purpose": "When the deduction was recorded",
          "dataSource": "Set to current timestamp when RecordPointDeduction is executed",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RecordPointDeduction"],
          "calculationMethod": "Set to current timestamp when RecordPointDeduction is executed"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interactionDependencies includes RecordPointDeduction which creates the entity",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["RecordPointDeduction"],
        "calculationMethod": "Created by RecordPointDeduction interaction when dormHead or admin records a violation"
      }
    },
    {
      "name": "EvictionRequest",
      "entityLevelAnalysis": {
        "purpose": "Request to evict a user from dormitory due to violations",
        "creationSource": "interaction-created",
        "updateRequirements": "Status, processedAt, and adminComment updated by ApproveEviction/RejectEviction",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, no computation needed",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Reason for requesting eviction",
          "dataSource": "Set from RequestEviction payload",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RequestEviction"],
          "calculationMethod": "Set from RequestEviction payload"
        },
        {
          "propertyName": "totalPoints",
          "type": "number",
          "purpose": "User's total points at time of request",
          "dataSource": "Captured from target user's points when RequestEviction is executed",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RequestEviction"],
          "calculationMethod": "Captured from target user's points when RequestEviction is executed"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Request status (pending, approved, rejected)",
          "dataSource": "Initially 'pending', changed to 'approved' by ApproveEviction or 'rejected' by RejectEviction",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["RequestEviction", "ApproveEviction", "RejectEviction"],
          "calculationMethod": "Initially 'pending', changed to 'approved' by ApproveEviction or 'rejected' by RejectEviction"
        },
        {
          "propertyName": "requestedAt",
          "type": "datetime",
          "purpose": "When the eviction was requested",
          "dataSource": "Set to current timestamp when RequestEviction is executed",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": ["RequestEviction"],
          "calculationMethod": "Set to current timestamp when RequestEviction is executed"
        },
        {
          "propertyName": "processedAt",
          "type": "datetime",
          "purpose": "When the request was processed",
          "dataSource": "Set to current timestamp when ApproveEviction or RejectEviction is executed",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["ApproveEviction", "RejectEviction"],
          "calculationMethod": "Set to current timestamp when ApproveEviction or RejectEviction is executed"
        },
        {
          "propertyName": "adminComment",
          "type": "string",
          "purpose": "Admin's comment on the decision",
          "dataSource": "Set from ApproveEviction or RejectEviction payload",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": [],
          "interactionDependencies": ["ApproveEviction", "RejectEviction"],
          "calculationMethod": "Set from ApproveEviction or RejectEviction payload"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interactionDependencies includes RequestEviction which creates the entity",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["RequestEviction"],
        "calculationMethod": "Created by RequestEviction interaction when dormHead requests to evict a user"
      }
    }
  ],
  "relations": [
    {
      "name": "UserDormitoryRelation",
      "relationAnalysis": {
        "purpose": "Assigns users to their dormitory",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["ApproveEviction"]
        },
        "computationDecision": "StateMachine",
        "reasoning": "Interaction-created relation that can be deleted (hard-delete), requires StateMachine only",
        "dependencies": ["User", "Dormitory"],
        "interactionDependencies": ["AssignUserToDormitory", "ApproveEviction"],
        "calculationMethod": "Created by AssignUserToDormitory when user is assigned, deleted by ApproveEviction when user is evicted"
      },
      "propertyAnalysis": [
        {
          "propertyName": "assignedAt",
          "type": "datetime",
          "purpose": "When the user was assigned to this dormitory",
          "dataSource": "Set to current timestamp when AssignUserToDormitory creates the relation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["AssignUserToDormitory"],
          "calculationMethod": "Set to current timestamp when AssignUserToDormitory creates the relation"
        }
      ]
    },
    {
      "name": "UserBedRelation",
      "relationAnalysis": {
        "purpose": "Assigns users to their specific bed",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["ApproveEviction"]
        },
        "computationDecision": "StateMachine",
        "reasoning": "Interaction-created relation that can be deleted (hard-delete), requires StateMachine only",
        "dependencies": ["User", "Bed"],
        "interactionDependencies": ["AssignUserToDormitory", "ApproveEviction"],
        "calculationMethod": "Created by AssignUserToDormitory when user is assigned, deleted by ApproveEviction when user is evicted"
      },
      "propertyAnalysis": [
        {
          "propertyName": "occupiedAt",
          "type": "datetime",
          "purpose": "When the user occupied this bed",
          "dataSource": "Set to current timestamp when AssignUserToDormitory creates the relation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["AssignUserToDormitory"],
          "calculationMethod": "Set to current timestamp when AssignUserToDormitory creates the relation"
        }
      ]
    },
    {
      "name": "DormitoryBedRelation",
      "relationAnalysis": {
        "purpose": "Links dormitories to their beds",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, no computation needed",
        "dependencies": ["Dormitory", "Bed"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created together with Bed entities when CreateDormitory is executed"
      },
      "propertyAnalysis": []
    },
    {
      "name": "DormitoryDormHeadRelation",
      "relationAnalysis": {
        "purpose": "Designates the head of a dormitory",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": []
        },
        "computationDecision": "StateMachine",
        "reasoning": "Interaction-created relation that can be deleted (hard-delete), requires StateMachine only",
        "dependencies": ["Dormitory", "User"],
        "interactionDependencies": ["AppointDormHead"],
        "calculationMethod": "Created by AppointDormHead when admin appoints a user as dormitory head"
      },
      "propertyAnalysis": [
        {
          "propertyName": "appointedAt",
          "type": "datetime",
          "purpose": "When the user was appointed as dorm head",
          "dataSource": "Set to current timestamp when AppointDormHead creates the relation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": [],
          "interactionDependencies": ["AppointDormHead"],
          "calculationMethod": "Set to current timestamp when AppointDormHead creates the relation"
        }
      ]
    },
    {
      "name": "UserPointDeductionRelation",
      "relationAnalysis": {
        "purpose": "Links users to their point deduction records",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, no computation needed",
        "dependencies": ["User", "PointDeduction"],
        "interactionDependencies": ["RecordPointDeduction"],
        "calculationMethod": "Created together with PointDeduction entity by RecordPointDeduction interaction"
      },
      "propertyAnalysis": []
    },
    {
      "name": "PointDeductionRecorderRelation",
      "relationAnalysis": {
        "purpose": "Links point deductions to the user who recorded them",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, no computation needed",
        "dependencies": ["PointDeduction", "User"],
        "interactionDependencies": ["RecordPointDeduction"],
        "calculationMethod": "Created together with PointDeduction entity by RecordPointDeduction interaction"
      },
      "propertyAnalysis": []
    },
    {
      "name": "EvictionRequestTargetUserRelation",
      "relationAnalysis": {
        "purpose": "Links eviction requests to the target user",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, no computation needed",
        "dependencies": ["EvictionRequest", "User"],
        "interactionDependencies": ["RequestEviction"],
        "calculationMethod": "Created together with EvictionRequest entity by RequestEviction interaction"
      },
      "propertyAnalysis": []
    },
    {
      "name": "EvictionRequestRequesterRelation",
      "relationAnalysis": {
        "purpose": "Links eviction requests to the requester (dormHead)",
        "creation": "created-with-entity",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "None",
        "reasoning": "Created-with-entity and cannot be deleted, no computation needed",
        "dependencies": ["EvictionRequest", "User"],
        "interactionDependencies": ["RequestEviction"],
        "calculationMethod": "Created together with EvictionRequest entity by RequestEviction interaction"
      },
      "propertyAnalysis": []
    },
    {
      "name": "EvictionRequestApproverRelation",
      "relationAnalysis": {
        "purpose": "Links eviction requests to the admin who approved/rejected them",
        "creation": "interaction-created",
        "deletionRequirements": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        },
        "computationDecision": "Transform",
        "reasoning": "Interaction-created relation that cannot be deleted, requires Transform with InteractionEventEntity",
        "dependencies": ["EvictionRequest", "User", "InteractionEventEntity"],
        "interactionDependencies": ["ApproveEviction", "RejectEviction"],
        "calculationMethod": "Created when ApproveEviction or RejectEviction is executed"
      },
      "propertyAnalysis": []
    }
  ],
  "dictionaries": []
}
