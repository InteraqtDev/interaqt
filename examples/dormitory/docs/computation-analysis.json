{
  "entities": [
    {
      "name": "User",
      "entityLevelAnalysis": {
        "purpose": "System users with different roles (admin, dormHead, student)",
        "creationSource": "interaction-created",
        "updateRequirements": "Properties can be updated via UpdateUserProfile, role changes via AssignDormHead/RemoveDormHead",
        "deletionStrategy": "soft-delete (status changed to 'removed')"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, handled by framework",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "User's full name",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions (CreateUser, RegisterUser, UpdateUserProfile)",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "RegisterUser", "UpdateUserProfile"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "email",
          "type": "string",
          "purpose": "Unique identifier and authentication",
          "dataSource": "Set once at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["CreateUser", "RegisterUser"],
          "calculationMethod": "Set once at creation, immutable thereafter"
        },
        {
          "propertyName": "phone",
          "type": "string",
          "purpose": "Contact number",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions (CreateUser, RegisterUser, UpdateUserProfile)",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "RegisterUser", "UpdateUserProfile"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "role",
          "type": "string",
          "purpose": "User role (admin, dormHead, student)",
          "dataSource": "Set at creation, can be changed to/from dormHead by admin interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by multiple interactions with state transitions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "RegisterUser", "AssignDormHead", "RemoveDormHead"],
          "calculationMethod": "Set at creation, can be changed to/from dormHead by admin interactions"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "User account status (active, suspended, removed)",
          "dataSource": "Set to 'active' at creation, changed to 'removed' when removal request approved",
          "computationDecision": "StateMachine",
          "reasoning": "State transitions managed by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "RegisterUser", "ProcessRemovalRequest", "RemoveUserFromDormitory"],
          "calculationMethod": "Set to 'active' at creation, changed to 'removed' when removal request approved, can be set to 'suspended' by admin"
        },
        {
          "propertyName": "totalPoints",
          "type": "number",
          "purpose": "Total active point deductions",
          "dataSource": "Summation of PointDeduction.points where PointDeduction.status = 'active' across UserPointDeductionRelation",
          "computationDecision": "Summation",
          "reasoning": "Aggregation of points from related entities",
          "dependencies": ["UserPointDeductionRelation", "PointDeduction.points", "PointDeduction.status"],
          "interactionDependencies": [],
          "calculationMethod": "Summation of PointDeduction.points where PointDeduction.status = 'active' across UserPointDeductionRelation"
        },
        {
          "propertyName": "isRemovable",
          "type": "boolean",
          "purpose": "Whether user has enough points for removal",
          "dataSource": "totalPoints >= 30",
          "computationDecision": "computed",
          "reasoning": "Simple derivation from own property",
          "dependencies": ["_self.totalPoints"],
          "interactionDependencies": [],
          "calculationMethod": "totalPoints >= 30"
        },
        {
          "propertyName": "isDormHead",
          "type": "boolean",
          "purpose": "Whether user is a dorm head",
          "dataSource": "role === 'dormHead' && exists DormitoryDormHeadRelation where target = this user",
          "computationDecision": "Custom",
          "reasoning": "Complex logic combining property and relation existence",
          "dependencies": ["_self.role", "DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "calculationMethod": "role === 'dormHead' && exists DormitoryDormHeadRelation where target = this user"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Account creation timestamp",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataSource": "Updated to current timestamp on any modification",
          "computationDecision": "StateMachine",
          "reasoning": "Updated by multiple interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["UpdateUserProfile", "AssignDormHead", "RemoveDormHead", "ProcessRemovalRequest"],
          "calculationMethod": "Updated to current timestamp on any modification"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with soft-delete, Transform for creation + status StateMachine",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateUser", "RegisterUser"],
        "calculationMethod": "Independently created by CreateUser (admin) or RegisterUser (self-registration) interactions"
      }
    },
    {
      "name": "Dormitory",
      "entityLevelAnalysis": {
        "purpose": "Dormitory rooms that house students",
        "creationSource": "interaction-created",
        "updateRequirements": "Properties updated via UpdateDormitory, status via DeactivateDormitory",
        "deletionStrategy": "soft-delete (status changed to 'inactive')"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, handled by framework",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "Dormitory name",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions (CreateDormitory, UpdateDormitory)",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "capacity",
          "type": "number",
          "purpose": "Maximum number of beds (4-6)",
          "dataSource": "Set at creation, immutable (must be 4-6)",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set at creation, immutable (must be 4-6)"
        },
        {
          "propertyName": "floor",
          "type": "number",
          "purpose": "Floor number",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "building",
          "type": "string",
          "purpose": "Building name or code",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Dormitory status (active, inactive)",
          "dataSource": "Set to 'active' at creation, can be set to 'inactive' by DeactivateDormitory",
          "computationDecision": "StateMachine",
          "reasoning": "State transitions managed by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "DeactivateDormitory"],
          "calculationMethod": "Set to 'active' at creation, can be set to 'inactive' by DeactivateDormitory"
        },
        {
          "propertyName": "occupancy",
          "type": "number",
          "purpose": "Current number of assigned users",
          "dataSource": "Count of UserDormitoryRelation where target = this dormitory",
          "computationDecision": "Count",
          "reasoning": "Counting related entities",
          "dependencies": ["UserDormitoryRelation"],
          "interactionDependencies": [],
          "calculationMethod": "Count of UserDormitoryRelation where target = this dormitory"
        },
        {
          "propertyName": "availableBeds",
          "type": "number",
          "purpose": "Number of available beds",
          "dataSource": "capacity - occupancy",
          "computationDecision": "computed",
          "reasoning": "Simple calculation from own properties",
          "dependencies": ["_self.capacity", "_self.occupancy"],
          "interactionDependencies": [],
          "calculationMethod": "capacity - occupancy"
        },
        {
          "propertyName": "hasDormHead",
          "type": "boolean",
          "purpose": "Whether dormitory has an assigned dorm head",
          "dataSource": "exists DormitoryDormHeadRelation where source = this dormitory",
          "computationDecision": "Any",
          "reasoning": "Checking existence of relation",
          "dependencies": ["DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "calculationMethod": "exists DormitoryDormHeadRelation where source = this dormitory"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataSource": "Updated to current timestamp on any modification",
          "computationDecision": "StateMachine",
          "reasoning": "Updated by multiple interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["UpdateDormitory", "DeactivateDormitory"],
          "calculationMethod": "Updated to current timestamp on any modification"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with soft-delete, Transform for creation + status StateMachine",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Independently created by CreateDormitory interaction"
      }
    },
    {
      "name": "Bed",
      "entityLevelAnalysis": {
        "purpose": "Individual beds within dormitories",
        "creationSource": "created-with-parent (Dormitory)",
        "updateRequirements": "Status updated via AssignUserToDormitory, RemoveUserFromDormitory",
        "deletionStrategy": "auto-delete with parent"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, handled by framework",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "bedNumber",
          "type": "string",
          "purpose": "Bed identifier within dormitory",
          "dataSource": "Set at creation based on position (1, 2, 3, etc.)",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set at creation based on position (1, 2, 3, etc.)"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Bed status (available, occupied, maintenance)",
          "dataSource": "Set to 'occupied' when UserBedRelation exists, 'available' when no relation",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions with state transitions",
          "dependencies": ["InteractionEventEntity", "UserBedRelation"],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
          "calculationMethod": "Set to 'occupied' when UserBedRelation exists, 'available' when no relation, can be set to 'maintenance' by admin"
        },
        {
          "propertyName": "isAvailable",
          "type": "boolean",
          "purpose": "Whether bed can be assigned",
          "dataSource": "status === 'available' && !exists UserBedRelation",
          "computationDecision": "Custom",
          "reasoning": "Complex logic combining property and relation existence",
          "dependencies": ["_self.status", "UserBedRelation"],
          "interactionDependencies": [],
          "calculationMethod": "status === 'available' && !exists UserBedRelation"
        },
        {
          "propertyName": "assignedAt",
          "type": "timestamp",
          "purpose": "When current user was assigned",
          "dataSource": "Set to current timestamp when user assigned, null when unassigned",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["AssignUserToDormitory"],
          "calculationMethod": "Set to current timestamp when user assigned, null when unassigned"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataSource": "Updated to current timestamp on any modification",
          "computationDecision": "StateMachine",
          "reasoning": "Updated by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory"],
          "calculationMethod": "Updated to current timestamp on any modification"
        }
      ],
      "entityComputationDecision": {
        "type": "_parent:Dormitory",
        "reasoning": "created-with-parent, created by Dormitory's computation",
        "dependencies": ["Dormitory"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created together with Dormitory entity by CreateDormitory interaction (creates capacity number of beds)"
      }
    },
    {
      "name": "PointDeduction",
      "entityLevelAnalysis": {
        "purpose": "Disciplinary point deductions for rule violations",
        "creationSource": "interaction-created",
        "updateRequirements": "Status can be changed to cancelled",
        "deletionStrategy": "soft-delete (status changed)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, handled by framework",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Description of violation",
          "dataSource": "Set at creation, immutable",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set at creation, immutable"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Deduction amount (1-10)",
          "dataSource": "Set at creation, immutable (must be 1-10)",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set at creation, immutable (must be 1-10)"
        },
        {
          "propertyName": "category",
          "type": "string",
          "purpose": "Violation category",
          "dataSource": "Set at creation, immutable",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set at creation, immutable"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Deduction status (active, appealed, cancelled)",
          "dataSource": "Set to 'active' at creation, can be changed to 'cancelled' by admin",
          "computationDecision": "StateMachine",
          "reasoning": "State transitions managed by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set to 'active' at creation, can be changed to 'cancelled' by admin (future: appeal system)"
        },
        {
          "propertyName": "description",
          "type": "string",
          "purpose": "Detailed explanation",
          "dataSource": "Set at creation, immutable",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set at creation, immutable"
        },
        {
          "propertyName": "evidence",
          "type": "string",
          "purpose": "URL or reference to evidence",
          "dataSource": "Set at creation, immutable",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "calculationMethod": "Set at creation, immutable"
        },
        {
          "propertyName": "deductedAt",
          "type": "timestamp",
          "purpose": "When deduction was made",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with soft-delete, Transform for creation + status StateMachine",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["IssuePointDeduction"],
        "calculationMethod": "Independently created by IssuePointDeduction interaction"
      }
    },
    {
      "name": "RemovalRequest",
      "entityLevelAnalysis": {
        "purpose": "Requests to remove problematic users from dormitory",
        "creationSource": "interaction-created",
        "updateRequirements": "Status updated via ProcessRemovalRequest, CancelRemovalRequest",
        "deletionStrategy": "soft-delete (status changed)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "System-generated ID, handled by framework",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Explanation for removal request",
          "dataSource": "Set at creation, immutable",
          "computationDecision": "None",
          "reasoning": "Only set at creation, never modified",
          "dependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest"],
          "calculationMethod": "Set at creation, immutable"
        },
        {
          "propertyName": "totalPoints",
          "type": "number",
          "purpose": "Total points deducted for target user at time of request",
          "dataSource": "Copy of target User.totalPoints at creation time",
          "computationDecision": "Custom",
          "reasoning": "Requires accessing related user's property at creation",
          "dependencies": ["RemovalRequestTargetRelation", "User.totalPoints"],
          "interactionDependencies": [],
          "calculationMethod": "Copy of target User.totalPoints at creation time"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Request status (pending, approved, rejected, cancelled)",
          "dataSource": "Set to 'pending' at creation, changed by interactions",
          "computationDecision": "StateMachine",
          "reasoning": "State transitions managed by interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["InitiateRemovalRequest", "ProcessRemovalRequest", "CancelRemovalRequest"],
          "calculationMethod": "Set to 'pending' at creation, changed to 'approved'/'rejected' by ProcessRemovalRequest, or 'cancelled' by CancelRemovalRequest"
        },
        {
          "propertyName": "adminComment",
          "type": "string",
          "purpose": "Admin's decision comment",
          "dataSource": "Set by ProcessRemovalRequest when approving/rejecting",
          "computationDecision": "StateMachine",
          "reasoning": "Modified by interaction",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set by ProcessRemovalRequest when approving/rejecting"
        },
        {
          "propertyName": "processedAt",
          "type": "timestamp",
          "purpose": "When admin made decision",
          "dataSource": "Set to current timestamp when ProcessRemovalRequest executes",
          "computationDecision": "StateMachine",
          "reasoning": "Set by interaction when processing",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set to current timestamp when ProcessRemovalRequest executes"
        },
        {
          "propertyName": "createdAt",
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time",
          "dependencies": [],
          "interactionDependencies": [],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataSource": "Updated to current timestamp on any modification",
          "computationDecision": "StateMachine",
          "reasoning": "Updated by multiple interactions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["ProcessRemovalRequest", "CancelRemovalRequest"],
          "calculationMethod": "Updated to current timestamp on any modification"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with soft-delete, Transform for creation + status StateMachine",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["InitiateRemovalRequest"],
        "calculationMethod": "Independently created by InitiateRemovalRequest interaction"
      }
    }
  ],
  "relations": [
    {
      "name": "UserDormitoryRelation",
      "relationAnalysis": {
        "purpose": "Assigns users to their dormitory",
        "creation": "interaction-created",
        "deletionRequirements": "canBeDeleted: true, hard-delete",
        "computationDecision": "StateMachine",
        "reasoning": "interaction-created with hard-delete capability, must use StateMachine",
        "dependencies": ["InteractionEventEntity", "User", "Dormitory"],
        "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
        "calculationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest"
      }
    },
    {
      "name": "UserBedRelation",
      "relationAnalysis": {
        "purpose": "Assigns users to specific beds",
        "creation": "interaction-created",
        "deletionRequirements": "canBeDeleted: true, hard-delete",
        "computationDecision": "StateMachine",
        "reasoning": "interaction-created with hard-delete capability, must use StateMachine",
        "dependencies": ["InteractionEventEntity", "User", "Bed"],
        "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
        "calculationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest"
      }
    },
    {
      "name": "DormitoryBedRelation",
      "relationAnalysis": {
        "purpose": "Links dormitories to their beds",
        "creation": "created-with-entity (Bed)",
        "deletionRequirements": "canBeDeleted: false, auto-delete",
        "computationDecision": "_parent:Bed",
        "reasoning": "created-with-entity, created by Bed's computation",
        "dependencies": ["Dormitory", "Bed"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Created together with Bed entities by CreateDormitory interaction"
      }
    },
    {
      "name": "DormitoryDormHeadRelation",
      "relationAnalysis": {
        "purpose": "Assigns dorm heads to dormitories",
        "creation": "interaction-created",
        "deletionRequirements": "canBeDeleted: true, hard-delete",
        "computationDecision": "StateMachine",
        "reasoning": "interaction-created with hard-delete capability, must use StateMachine",
        "dependencies": ["InteractionEventEntity", "Dormitory", "User"],
        "interactionDependencies": ["AssignDormHead", "RemoveDormHead"],
        "calculationMethod": "Created by AssignDormHead, deleted by RemoveDormHead"
      }
    },
    {
      "name": "UserPointDeductionRelation",
      "relationAnalysis": {
        "purpose": "Links users to their point deductions",
        "creation": "created-with-entity (PointDeduction)",
        "deletionRequirements": "canBeDeleted: false, auto-delete",
        "computationDecision": "_parent:PointDeduction",
        "reasoning": "created-with-entity, created by PointDeduction's computation",
        "dependencies": ["User", "PointDeduction"],
        "interactionDependencies": ["IssuePointDeduction"],
        "calculationMethod": "Created together with PointDeduction by IssuePointDeduction interaction"
      }
    },
    {
      "name": "DeductionIssuerRelation",
      "relationAnalysis": {
        "purpose": "Links point deductions to the user who issued them",
        "creation": "created-with-entity (PointDeduction)",
        "deletionRequirements": "canBeDeleted: false, auto-delete",
        "computationDecision": "_parent:PointDeduction",
        "reasoning": "created-with-entity, created by PointDeduction's computation",
        "dependencies": ["PointDeduction", "User"],
        "interactionDependencies": ["IssuePointDeduction"],
        "calculationMethod": "Created together with PointDeduction by IssuePointDeduction interaction"
      }
    },
    {
      "name": "RemovalRequestTargetRelation",
      "relationAnalysis": {
        "purpose": "Links removal requests to the target user",
        "creation": "created-with-entity (RemovalRequest)",
        "deletionRequirements": "canBeDeleted: false, auto-delete",
        "computationDecision": "_parent:RemovalRequest",
        "reasoning": "created-with-entity, created by RemovalRequest's computation",
        "dependencies": ["RemovalRequest", "User"],
        "interactionDependencies": ["InitiateRemovalRequest"],
        "calculationMethod": "Created together with RemovalRequest by InitiateRemovalRequest interaction"
      }
    },
    {
      "name": "RemovalRequestInitiatorRelation",
      "relationAnalysis": {
        "purpose": "Links removal requests to the dorm head who initiated them",
        "creation": "created-with-entity (RemovalRequest)",
        "deletionRequirements": "canBeDeleted: false, auto-delete",
        "computationDecision": "_parent:RemovalRequest",
        "reasoning": "created-with-entity, created by RemovalRequest's computation",
        "dependencies": ["RemovalRequest", "User"],
        "interactionDependencies": ["InitiateRemovalRequest"],
        "calculationMethod": "Created together with RemovalRequest by InitiateRemovalRequest interaction"
      }
    },
    {
      "name": "RemovalRequestAdminRelation",
      "relationAnalysis": {
        "purpose": "Links removal requests to the admin who processed them",
        "creation": "interaction-created",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "Transform",
        "reasoning": "interaction-created with no deletion capability",
        "dependencies": ["InteractionEventEntity", "RemovalRequest", "User"],
        "interactionDependencies": ["ProcessRemovalRequest"],
        "calculationMethod": "Created by ProcessRemovalRequest when admin approves/rejects"
      }
    }
  ],
  "dictionaries": []
}
