{
  "entities": [
    {
      "name": "User",
      "entityLevelAnalysis": {
        "purpose": "Represents all system users including administrators, dormitory heads, and regular residents",
        "creationSource": "interaction-created",
        "updateRequirements": "Updates to name, email, isAdmin, points from various interactions",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "Auto-generated at creation, never modified",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "User's display name",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "UpdateUserProfile"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "email",
          "type": "string",
          "purpose": "User's email for authentication and contact",
          "dataSource": "Set at creation, modifiable with restrictions via UpdateUserEmail",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "UpdateUserEmail"],
          "calculationMethod": "Set at creation, modifiable with restrictions via UpdateUserEmail"
        },
        {
          "propertyName": "isAdmin",
          "type": "boolean",
          "purpose": "Whether user has admin privileges",
          "dataSource": "Set at creation, can be modified by admin interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "PromoteToAdmin", "DemoteFromAdmin"],
          "calculationMethod": "Set at creation, can be modified by admin interactions"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Behavior monitoring points",
          "dataSource": "Set to 100 at creation, decremented by DeductPoints interaction",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "DeductPoints"],
          "calculationMethod": "Set to 100 at creation, decremented by DeductPoints interaction"
        },
        {
          "propertyName": "totalDeductions",
          "type": "number",
          "purpose": "Sum of all point deductions",
          "dataSource": "Summation of points across all UserPointDeductionRelation",
          "computationDecision": "Summation",
          "reasoning": "Has dataDependencies with relations, computationMethod indicates sum",
          "dependencies": ["UserPointDeductionRelation.points"],
          "interactionDependencies": [],
          "calculationMethod": "Summation of points across all UserPointDeductionRelation"
        },
        {
          "propertyName": "isRemovable",
          "type": "boolean",
          "purpose": "Whether user can be requested for removal",
          "dataSource": "Computed as points <= 20",
          "computationDecision": "computed",
          "reasoning": "Only uses own entity properties",
          "dependencies": ["_self.points"],
          "interactionDependencies": [],
          "calculationMethod": "Computed as points <= 20"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of account creation",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["CreateUser"],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "number",
          "purpose": "Timestamp of last modification",
          "dataSource": "Updated to current timestamp on any modification",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateUser", "UpdateUserProfile", "UpdateUserEmail", "DeductPoints"],
          "calculationMethod": "Updated to current timestamp on any modification"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with soft-delete, uses Transform for creation + status property with StateMachine for deletion",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateUser", "AssignDormitoryHead"],
        "calculationMethod": "Independently created by CreateUser interaction"
      }
    },
    {
      "name": "Dormitory",
      "entityLevelAnalysis": {
        "purpose": "Represents individual dormitory units with configurable bed capacity",
        "creationSource": "interaction-created",
        "updateRequirements": "Updates to name and bedCount from admin interactions",
        "deletionStrategy": "soft-delete"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "Auto-generated at creation, never modified",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "Dormitory identifier/name",
          "dataSource": "Direct assignment from interactions",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitoryName"],
          "calculationMethod": "Direct assignment from interactions"
        },
        {
          "propertyName": "bedCount",
          "type": "number",
          "purpose": "Number of beds in the dormitory (4-6)",
          "dataSource": "Set at creation (4-6), can be modified only when dormitory is empty",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitoryCapacity"],
          "calculationMethod": "Set at creation (4-6), can be modified only when dormitory is empty"
        },
        {
          "propertyName": "occupancy",
          "type": "number",
          "purpose": "Count of active bed assignments",
          "dataSource": "Count of DormitoryBedAssignmentRelation where BedAssignment.removedAt is null",
          "computationDecision": "Count",
          "reasoning": "Has dataDependencies with relations, computationMethod indicates count",
          "dependencies": ["DormitoryBedAssignmentRelation"],
          "interactionDependencies": [],
          "calculationMethod": "Count of DormitoryBedAssignmentRelation where BedAssignment.removedAt is null"
        },
        {
          "propertyName": "availableBeds",
          "type": "number",
          "purpose": "Number of available beds",
          "dataSource": "Custom: bedCount - occupancy",
          "computationDecision": "computed",
          "reasoning": "Only uses own entity properties",
          "dependencies": ["_self.bedCount", "_self.occupancy"],
          "interactionDependencies": [],
          "calculationMethod": "Custom: bedCount - occupancy"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of dormitory creation",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["CreateDormitory"],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "updatedAt",
          "type": "number",
          "purpose": "Timestamp of last modification",
          "dataSource": "Updated to current timestamp on any modification",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitoryName", "UpdateDormitoryCapacity"],
          "calculationMethod": "Updated to current timestamp on any modification"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with soft-delete, uses Transform for creation + status property with StateMachine for deletion",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateDormitory"],
        "calculationMethod": "Independently created by CreateDormitory interaction"
      }
    },
    {
      "name": "BedAssignment",
      "entityLevelAnalysis": {
        "purpose": "Tracks the assignment of users to specific dormitory beds",
        "creationSource": "interaction-created",
        "updateRequirements": "Updates to removedAt when user is removed",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "Auto-generated at creation, never modified",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "bedNumber",
          "type": "number",
          "purpose": "Assigned bed position (1-6)",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["AssignUserToBed"],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "assignedAt",
          "type": "number",
          "purpose": "Timestamp of bed assignment",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["AssignUserToBed"],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "removedAt",
          "type": "number",
          "purpose": "Timestamp when user was removed from bed",
          "dataSource": "Set to current timestamp when user is removed",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["ProcessRemovalRequest", "RemoveUserFromBed"],
          "calculationMethod": "Set to current timestamp when user is removed"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with canBeDeleted: false",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["AssignUserToBed"],
        "calculationMethod": "Independently created by AssignUserToBed interaction"
      }
    },
    {
      "name": "PointDeduction",
      "entityLevelAnalysis": {
        "purpose": "Records behavioral infractions and associated point penalties",
        "creationSource": "interaction-created",
        "updateRequirements": "None - all properties are immutable after creation",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "Auto-generated at creation, never modified",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Description of infraction",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["DeductPoints"],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Points deducted",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["DeductPoints"],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of deduction",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["DeductPoints"],
          "calculationMethod": "Set to current timestamp at creation"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with canBeDeleted: false",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["DeductPoints"],
        "calculationMethod": "Independently created by DeductPoints interaction"
      }
    },
    {
      "name": "RemovalRequest",
      "entityLevelAnalysis": {
        "purpose": "Tracks dormitory head requests to remove residents",
        "creationSource": "interaction-created",
        "updateRequirements": "Updates to status and processedAt when processed",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "Auto-generated at creation, never modified",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Justification for removal",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["RequestUserRemoval"],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Request status (pending/approved/rejected)",
          "dataSource": "Set to 'pending' at creation, updated to 'approved' or 'rejected' by ProcessRemovalRequest",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it, defined state transitions",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["RequestUserRemoval", "ProcessRemovalRequest"],
          "calculationMethod": "Set to 'pending' at creation, updated to 'approved' or 'rejected' by ProcessRemovalRequest"
        },
        {
          "propertyName": "isPending",
          "type": "boolean",
          "purpose": "Whether request is still pending",
          "dataSource": "Computed as status === 'pending'",
          "computationDecision": "computed",
          "reasoning": "Only uses own entity properties",
          "dependencies": ["_self.status"],
          "interactionDependencies": [],
          "calculationMethod": "Computed as status === 'pending'"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of request creation",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["RequestUserRemoval"],
          "calculationMethod": "Set to current timestamp at creation"
        },
        {
          "propertyName": "processedAt",
          "type": "number",
          "purpose": "Timestamp when admin processed request",
          "dataSource": "Set to current timestamp when processed",
          "computationDecision": "StateMachine",
          "reasoning": "Has interactionDependencies that can modify it",
          "dependencies": ["InteractionEventEntity"],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set to current timestamp when processed"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "reasoning": "interaction-created with canBeDeleted: false",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["RequestUserRemoval"],
        "calculationMethod": "Independently created by RequestUserRemoval interaction"
      }
    },
    {
      "name": "AdminComment",
      "entityLevelAnalysis": {
        "purpose": "Admin's feedback when processing removal requests",
        "creationSource": "created-with-parent",
        "updateRequirements": "None - all properties are immutable after creation",
        "deletionStrategy": "none"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataSource": "auto-generated",
          "computationDecision": "None",
          "reasoning": "Auto-generated at creation, never modified",
          "dependencies": null,
          "interactionDependencies": null,
          "calculationMethod": "auto-generated"
        },
        {
          "propertyName": "comment",
          "type": "string",
          "purpose": "Admin's decision rationale",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "decision",
          "type": "string",
          "purpose": "Admin's decision (approved/rejected)",
          "dataSource": "Set at creation, immutable thereafter",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set at creation, immutable thereafter"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of comment creation",
          "dataSource": "Set to current timestamp at creation",
          "computationDecision": "None",
          "reasoning": "Set only at creation time, never modified",
          "dependencies": null,
          "interactionDependencies": ["ProcessRemovalRequest"],
          "calculationMethod": "Set to current timestamp at creation"
        }
      ],
      "entityComputationDecision": {
        "type": "_parent:RemovalRequest",
        "reasoning": "created-with-parent, created by RemovalRequest's computation",
        "dependencies": ["RemovalRequest"],
        "interactionDependencies": ["ProcessRemovalRequest"],
        "calculationMethod": "Created by RemovalRequest's computation when ProcessRemovalRequest is executed"
      }
    }
  ],
  "relations": [
    {
      "name": "DormitoryHeadRelation",
      "relationAnalysis": {
        "purpose": "Links dormitory to its head user",
        "creation": "interaction-created",
        "deletionRequirements": "canBeDeleted: true, deletionType: hard-delete",
        "computationDecision": "StateMachine",
        "reasoning": "interaction-created with canBeDeleted: true (hard-delete), must use StateMachine",
        "dependencies": ["Dormitory", "User", "InteractionEventEntity"],
        "interactionDependencies": ["AssignDormitoryHead", "RemoveDormitoryHead"],
        "calculationMethod": "Independently created by AssignDormitoryHead, removed by RemoveDormitoryHead"
      }
    },
    {
      "name": "UserBedAssignmentRelation",
      "relationAnalysis": {
        "purpose": "Links user to their current bed assignment",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:BedAssignment",
        "reasoning": "created-with-entity, created by BedAssignment's computation",
        "dependencies": ["User", "BedAssignment"],
        "interactionDependencies": ["AssignUserToBed"],
        "calculationMethod": "Created together with BedAssignment by AssignUserToBed interaction"
      }
    },
    {
      "name": "DormitoryBedAssignmentRelation",
      "relationAnalysis": {
        "purpose": "Links dormitory to all its bed assignments",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:BedAssignment",
        "reasoning": "created-with-entity, created by BedAssignment's computation",
        "dependencies": ["Dormitory", "BedAssignment"],
        "interactionDependencies": ["AssignUserToBed"],
        "calculationMethod": "Created together with BedAssignment by AssignUserToBed interaction"
      }
    },
    {
      "name": "UserPointDeductionRelation",
      "relationAnalysis": {
        "purpose": "Links user to their point deduction history",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:PointDeduction",
        "reasoning": "created-with-entity, created by PointDeduction's computation",
        "dependencies": ["User", "PointDeduction"],
        "interactionDependencies": ["DeductPoints"],
        "calculationMethod": "Created together with PointDeduction by DeductPoints interaction"
      }
    },
    {
      "name": "CreatorPointDeductionRelation",
      "relationAnalysis": {
        "purpose": "Links admin/dorm head to deductions they created",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:PointDeduction",
        "reasoning": "created-with-entity, created by PointDeduction's computation",
        "dependencies": ["User", "PointDeduction"],
        "interactionDependencies": ["DeductPoints"],
        "calculationMethod": "Created together with PointDeduction by DeductPoints interaction"
      }
    },
    {
      "name": "RemovalRequestUserRelation",
      "relationAnalysis": {
        "purpose": "Links resident to removal requests about them",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:RemovalRequest",
        "reasoning": "created-with-entity, created by RemovalRequest's computation",
        "dependencies": ["User", "RemovalRequest"],
        "interactionDependencies": ["RequestUserRemoval"],
        "calculationMethod": "Created together with RemovalRequest by RequestUserRemoval interaction"
      }
    },
    {
      "name": "RemovalRequestCreatorRelation",
      "relationAnalysis": {
        "purpose": "Links dormitory head to removal requests they created",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:RemovalRequest",
        "reasoning": "created-with-entity, created by RemovalRequest's computation",
        "dependencies": ["User", "RemovalRequest"],
        "interactionDependencies": ["RequestUserRemoval"],
        "calculationMethod": "Created together with RemovalRequest by RequestUserRemoval interaction"
      }
    },
    {
      "name": "RemovalRequestDormitoryRelation",
      "relationAnalysis": {
        "purpose": "Links dormitory to all removal requests",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:RemovalRequest",
        "reasoning": "created-with-entity, created by RemovalRequest's computation",
        "dependencies": ["Dormitory", "RemovalRequest"],
        "interactionDependencies": ["RequestUserRemoval"],
        "calculationMethod": "Created together with RemovalRequest by RequestUserRemoval interaction"
      }
    },
    {
      "name": "RemovalRequestAdminCommentRelation",
      "relationAnalysis": {
        "purpose": "Links removal request to admin's comment",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:AdminComment",
        "reasoning": "created-with-entity, created by AdminComment's computation",
        "dependencies": ["RemovalRequest", "AdminComment"],
        "interactionDependencies": ["ProcessRemovalRequest"],
        "calculationMethod": "Created together with AdminComment by ProcessRemovalRequest interaction"
      }
    },
    {
      "name": "AdminCommentAuthorRelation",
      "relationAnalysis": {
        "purpose": "Links admin to comments they wrote",
        "creation": "created-with-entity",
        "deletionRequirements": "canBeDeleted: false",
        "computationDecision": "_parent:AdminComment",
        "reasoning": "created-with-entity, created by AdminComment's computation",
        "dependencies": ["User", "AdminComment"],
        "interactionDependencies": ["ProcessRemovalRequest"],
        "calculationMethod": "Created together with AdminComment by ProcessRemovalRequest interaction"
      }
    }
  ],
  "dictionaries": [
    {
      "name": "totalUsers",
      "dictionaryAnalysis": {
        "purpose": "Track total number of users in the system",
        "type": "number",
        "collection": "single",
        "computationDecision": "StateMachine",
        "reasoning": "Modified by interactions (increment/decrement), not data-derived",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateUser", "DeleteUser"],
        "calculationMethod": "Incremented by 1 on CreateUser, decremented by 1 on DeleteUser"
      }
    },
    {
      "name": "totalDormitories",
      "dictionaryAnalysis": {
        "purpose": "Track total number of dormitories",
        "type": "number",
        "collection": "single",
        "computationDecision": "StateMachine",
        "reasoning": "Modified by interactions (increment/decrement), not data-derived",
        "dependencies": ["InteractionEventEntity"],
        "interactionDependencies": ["CreateDormitory", "DeleteDormitory"],
        "calculationMethod": "Incremented by 1 on CreateDormitory, decremented by 1 on DeleteDormitory"
      }
    },
    {
      "name": "totalActiveAssignments",
      "dictionaryAnalysis": {
        "purpose": "Total number of active bed assignments",
        "type": "number",
        "collection": "single",
        "computationDecision": "Count",
        "reasoning": "Has dataDependencies, computationMethod indicates count with condition",
        "dependencies": ["BedAssignment"],
        "interactionDependencies": [],
        "calculationMethod": "Count of BedAssignment where removedAt is null"
      }
    }
  ]
}