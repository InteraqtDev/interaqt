{
  "entities": [
    {
      "name": "User",
      "entityLevelAnalysis": {
        "purpose": "System users with different roles and permissions",
        "creationSource": "Created via CreateUser interaction",
        "updateRequirements": "Role updates, status changes, point adjustments",
        "deletionStrategy": "Soft delete with status (evicted)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "Unique identifier",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "IDs are auto-generated by the framework"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "User's display name",
          "dataSource": "CreateUser payload",
          "updateFrequency": "Via UpdateUser interaction",
          "computationDecision": "None",
          "reasoning": "Simple field updated directly"
        },
        {
          "propertyName": "email",
          "type": "string",
          "purpose": "Unique login identifier",
          "dataSource": "CreateUser payload",
          "updateFrequency": "Via UpdateUser interaction",
          "computationDecision": "None",
          "reasoning": "Simple field updated directly"
        },
        {
          "propertyName": "role",
          "type": "string",
          "purpose": "User role (admin/dormHead/student)",
          "dataSource": "CreateUser payload",
          "updateFrequency": "Via UpdateUserRole interaction",
          "computationDecision": "None",
          "reasoning": "Simple field updated directly"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "User status (active/evicted)",
          "dataSource": "State transitions",
          "updateFrequency": "On eviction approval",
          "strongConsistency": false,
          "computationDecision": "StateMachine",
          "reasoning": "Has defined states with clear transitions triggered by business events",
          "dependencies": ["ApproveEviction"],
          "calculationMethod": "State transition from active to evicted when eviction is approved"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Behavior points (starts at 100)",
          "dataSource": "Initial value + deductions",
          "updateFrequency": "When points are deducted",
          "strongConsistency": true,
          "computationDecision": "Custom",
          "reasoning": "Need to calculate initial points minus all deductions",
          "dependencies": ["UserPointDeductionRelation.points"],
          "calculationMethod": "Initial value (100) minus sum of all point deductions for this user"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Account creation timestamp",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "source": "InteractionEventEntity",
        "reasoning": "Users are created via CreateUser interaction",
        "dependencies": ["CreateUser", "InteractionEventEntity"],
        "calculationMethod": "When CreateUser interaction fires, create new User entity with data from event.payload, initializing points to 100"
      }
    },
    {
      "name": "Dormitory",
      "entityLevelAnalysis": {
        "purpose": "Physical dormitory buildings with capacity management",
        "creationSource": "Created via CreateDormitory interaction",
        "updateRequirements": "Name and capacity changes",
        "deletionStrategy": "Soft delete with status (inactive)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "Unique identifier",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "IDs are auto-generated by the framework"
        },
        {
          "propertyName": "name",
          "type": "string",
          "purpose": "Dormitory name/number",
          "dataSource": "CreateDormitory payload",
          "updateFrequency": "Via UpdateDormitory interaction",
          "computationDecision": "None",
          "reasoning": "Simple field updated directly"
        },
        {
          "propertyName": "capacity",
          "type": "number",
          "purpose": "Number of beds (4-6)",
          "dataSource": "CreateDormitory payload",
          "updateFrequency": "Via UpdateDormitory interaction",
          "computationDecision": "None",
          "reasoning": "Simple field updated directly"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Dormitory status (active/full)",
          "dataSource": "Calculated from occupancy",
          "updateFrequency": "When users are assigned/removed",
          "strongConsistency": true,
          "computationDecision": "Custom",
          "reasoning": "Status depends on whether occupancy equals capacity",
          "dependencies": ["UserDormitoryRelation", "Dormitory.capacity"],
          "calculationMethod": "If count of assigned users equals capacity, status is 'full', otherwise 'active'"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Creation timestamp",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "source": "InteractionEventEntity",
        "reasoning": "Dormitories are created via CreateDormitory interaction",
        "dependencies": ["CreateDormitory", "InteractionEventEntity"],
        "calculationMethod": "When CreateDormitory interaction fires, create new Dormitory entity and automatically create Bed records based on capacity"
      }
    },
    {
      "name": "Bed",
      "entityLevelAnalysis": {
        "purpose": "Individual bed spaces within dormitories",
        "creationSource": "Created automatically with dormitory",
        "updateRequirements": "Status changes",
        "deletionStrategy": "Never deleted (belongs to dormitory)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "Unique identifier",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "IDs are auto-generated by the framework"
        },
        {
          "propertyName": "bedNumber",
          "type": "number",
          "purpose": "Bed number within dormitory (1-6)",
          "dataSource": "Generated during creation",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Bed status (available/occupied)",
          "dataSource": "State transitions",
          "updateFrequency": "When users are assigned/removed",
          "strongConsistency": false,
          "computationDecision": "StateMachine",
          "reasoning": "Status changes based on user assignment/removal",
          "dependencies": ["AssignUserToBed", "RemoveFromDormitory"],
          "calculationMethod": "Transition to 'occupied' when user assigned, 'available' when user removed"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Creation timestamp",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "source": "Dormitory",
        "reasoning": "Beds are created automatically when dormitory is created",
        "dependencies": ["CreateDormitory", "Dormitory.capacity"],
        "calculationMethod": "When CreateDormitory creates a dormitory, automatically create Bed records numbered 1 to capacity"
      }
    },
    {
      "name": "PointDeduction",
      "entityLevelAnalysis": {
        "purpose": "Track behavior violations and point deductions",
        "creationSource": "Created via DeductPoints interaction",
        "updateRequirements": "Never updated once created",
        "deletionStrategy": "Never deleted (audit trail)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "Unique identifier",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "IDs are auto-generated by the framework"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Description of violation",
          "dataSource": "DeductPoints payload",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        },
        {
          "propertyName": "points",
          "type": "number",
          "purpose": "Points deducted",
          "dataSource": "DeductPoints payload",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of deduction",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        },
        {
          "propertyName": "recordedBy",
          "type": "string",
          "purpose": "Who recorded the violation",
          "dataSource": "Interaction event user",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "source": "InteractionEventEntity",
        "reasoning": "Point deductions are created via DeductPoints interaction",
        "dependencies": ["DeductPoints", "InteractionEventEntity"],
        "calculationMethod": "When DeductPoints interaction fires, create new PointDeduction entity with data from event.payload and event.user"
      }
    },
    {
      "name": "EvictionRequest",
      "entityLevelAnalysis": {
        "purpose": "Track requests to evict users from dormitories",
        "creationSource": "Created via RequestEviction interaction",
        "updateRequirements": "Status updates when processed",
        "deletionStrategy": "Never deleted (audit trail)"
      },
      "propertyAnalysis": [
        {
          "propertyName": "id",
          "type": "string",
          "purpose": "Unique identifier",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "IDs are auto-generated by the framework"
        },
        {
          "propertyName": "reason",
          "type": "string",
          "purpose": "Reason for eviction request",
          "dataSource": "RequestEviction payload",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        },
        {
          "propertyName": "status",
          "type": "string",
          "purpose": "Request status (pending/approved/rejected)",
          "dataSource": "State transitions",
          "updateFrequency": "When admin processes request",
          "strongConsistency": false,
          "computationDecision": "StateMachine",
          "reasoning": "Has defined states with clear transitions",
          "dependencies": ["ApproveEviction", "RejectEviction"],
          "calculationMethod": "Initial state 'pending', transitions to 'approved' or 'rejected' based on admin action"
        },
        {
          "propertyName": "createdAt",
          "type": "number",
          "purpose": "Timestamp of request",
          "dataSource": "System-generated",
          "updateFrequency": "Never",
          "computationDecision": "None",
          "reasoning": "Set once during creation, never changes"
        },
        {
          "propertyName": "processedAt",
          "type": "number",
          "purpose": "Timestamp of admin decision",
          "dataSource": "System-generated when processed",
          "updateFrequency": "When status changes from pending",
          "strongConsistency": false,
          "computationDecision": "StateMachine with computeValue",
          "reasoning": "Updates to current timestamp when request is processed",
          "dependencies": ["ApproveEviction", "RejectEviction"],
          "calculationMethod": "Set to Date.now() when state transitions from pending to approved/rejected"
        },
        {
          "propertyName": "processedBy",
          "type": "string",
          "purpose": "Admin who processed request",
          "dataSource": "Interaction event user",
          "updateFrequency": "When status changes from pending",
          "strongConsistency": false,
          "computationDecision": "StateMachine with computeValue",
          "reasoning": "Updates to admin user when request is processed",
          "dependencies": ["ApproveEviction", "RejectEviction"],
          "calculationMethod": "Set to event.user.id when state transitions from pending to approved/rejected"
        }
      ],
      "entityComputationDecision": {
        "type": "Transform",
        "source": "InteractionEventEntity",
        "reasoning": "Eviction requests are created via RequestEviction interaction",
        "dependencies": ["RequestEviction", "InteractionEventEntity"],
        "calculationMethod": "When RequestEviction interaction fires, create new EvictionRequest entity with initial status 'pending'"
      }
    }
  ],
  "relations": [
    {
      "name": "UserDormitoryRelation",
      "relationAnalysis": {
        "purpose": "Assigns students to dormitories",
        "creation": "Via AssignUserToDormitory interaction between existing entities",
        "deletionRequirements": "Hard delete when user is evicted or removed from dormitory",
        "updateRequirements": "No property updates needed",
        "stateManagement": "No status needed (existence = assigned)",
        "computationDecision": "StateMachine",
        "reasoning": "Need both creation and deletion capability, no audit trail required",
        "dependencies": ["AssignUserToDormitory", "RemoveFromDormitory", "ApproveEviction"],
        "calculationMethod": "Create relation on AssignUserToDormitory, delete (hard) on RemoveFromDormitory or ApproveEviction"
      }
    },
    {
      "name": "UserBedRelation",
      "relationAnalysis": {
        "purpose": "Assigns specific bed to user",
        "creation": "Via AssignUserToBed interaction between existing entities",
        "deletionRequirements": "Hard delete when user is removed from dormitory or bed",
        "updateRequirements": "No property updates needed",
        "stateManagement": "No status needed (existence = assigned)",
        "computationDecision": "StateMachine",
        "reasoning": "Need both creation and deletion capability, no audit trail required",
        "dependencies": ["AssignUserToBed", "RemoveFromDormitory", "ApproveEviction"],
        "calculationMethod": "Create relation on AssignUserToBed, delete (hard) on RemoveFromDormitory or ApproveEviction"
      }
    },
    {
      "name": "DormitoryBedsRelation",
      "relationAnalysis": {
        "purpose": "Links beds to their dormitory",
        "creation": "Created automatically when Bed is created with dormitory",
        "deletionRequirements": "Never deleted (structural relationship)",
        "updateRequirements": "No property updates needed",
        "stateManagement": "No status needed",
        "computationDecision": "None",
        "reasoning": "Created as part of Bed creation via entity reference",
        "dependencies": [],
        "calculationMethod": "N/A (automatic with Bed creation)"
      }
    },
    {
      "name": "UserPointDeductionRelation",
      "relationAnalysis": {
        "purpose": "Links point deductions to users",
        "creation": "Created automatically when PointDeduction is created",
        "deletionRequirements": "Never deleted (audit trail)",
        "updateRequirements": "No property updates needed",
        "stateManagement": "No status needed",
        "computationDecision": "None",
        "reasoning": "Created as part of PointDeduction creation via entity reference",
        "dependencies": [],
        "calculationMethod": "N/A (automatic with PointDeduction creation)"
      }
    },
    {
      "name": "UserEvictionRequestRelation",
      "relationAnalysis": {
        "purpose": "Links eviction requests to users",
        "creation": "Created automatically when EvictionRequest is created",
        "deletionRequirements": "Never deleted (audit trail)",
        "updateRequirements": "No property updates needed",
        "stateManagement": "No status needed",
        "computationDecision": "None",
        "reasoning": "Created as part of EvictionRequest creation via entity reference",
        "dependencies": [],
        "calculationMethod": "N/A (automatic with EvictionRequest creation)"
      }
    }
  ],
  "dictionaries": []
}