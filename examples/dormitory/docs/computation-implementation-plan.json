{
  "totalComputations": 44,
  "implementationOrder": [
    {
      "phase": 1,
      "computations": [
        {
          "id": "User",
          "type": "entity",
          "entityName": "User",
          "computationType": "Transform",
          "dependencies": [],
          "expandedDependencies": [],
          "interactionDependencies": [
            "CreateUser",
            "Registration"
          ],
          "reasoning": "interaction-created with soft-delete capability, uses Transform for creation with status property for soft deletion",
          "calculationMethod": "Independently created by CreateUser or Registration interactions",
          "completed": true
        },
        {
          "id": "Dormitory",
          "type": "entity",
          "entityName": "Dormitory",
          "computationType": "Transform",
          "dependencies": [],
          "expandedDependencies": [],
          "interactionDependencies": [
            "CreateDormitory"
          ],
          "reasoning": "interaction-created with soft-delete capability, uses Transform for creation with status property for soft deletion",
          "calculationMethod": "Independently created by CreateDormitory interaction",
          "completed": true
        },
        {
          "id": "Bed",
          "type": "entity",
          "entityName": "Bed",
          "computationType": "_parent:Dormitory",
          "dependencies": [],
          "expandedDependencies": [],
          "interactionDependencies": [
            "CreateDormitory"
          ],
          "reasoning": "created-with-parent type, created by Dormitory's computation",
          "calculationMethod": "Created by Dormitory's computation when Dormitory is created (NOT by Bed's own computation)",
          "completed": true
        },
        {
          "id": "PointDeduction",
          "type": "entity",
          "entityName": "PointDeduction",
          "computationType": "Transform",
          "dependencies": [],
          "expandedDependencies": [],
          "interactionDependencies": [
            "DeductPoints",
            "DeductResidentPoints"
          ],
          "reasoning": "interaction-created with canBeDeleted: false, uses Transform with InteractionEventEntity",
          "calculationMethod": "Independently created by DeductPoints or DeductResidentPoints interactions",
          "completed": true
        },
        {
          "id": "RemovalRequest",
          "type": "entity",
          "entityName": "RemovalRequest",
          "computationType": "Transform",
          "dependencies": [],
          "expandedDependencies": [],
          "interactionDependencies": [
            "SubmitRemovalRequest"
          ],
          "reasoning": "interaction-created with canBeDeleted: false, uses Transform with InteractionEventEntity",
          "calculationMethod": "Independently created by SubmitRemovalRequest interaction",
          "completed": true
        }
      ],
      "description": "Phase 1: 5 entity computation(s)"
    },
    {
      "phase": 2,
      "computations": [
        {
          "id": "UserDormitoryLeaderRelation",
          "type": "relation",
          "relationName": "UserDormitoryLeaderRelation",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User",
            "Dormitory"
          ],
          "interactionDependencies": [
            "AssignDormitoryLeader"
          ],
          "reasoning": "interaction-created with canBeDeleted: true (hard-delete), must use StateMachine for both create and delete",
          "calculationMethod": "Independently created by AssignDormitoryLeader interaction",
          "completed": true
        },
        {
          "id": "DormitoryBedsRelation",
          "type": "relation",
          "relationName": "DormitoryBedsRelation",
          "computationType": "_parent:Dormitory",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory",
            "Bed"
          ],
          "interactionDependencies": [
            "CreateDormitory"
          ],
          "reasoning": "created-with-entity type with canBeDeleted: false, created by parent entity's computation",
          "calculationMethod": "Created together with Bed entities by Dormitory's computation when Dormitory is created",
          "completed": true
        },
        {
          "id": "UserBedRelation",
          "type": "relation",
          "relationName": "UserBedRelation",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User",
            "Bed"
          ],
          "interactionDependencies": [
            "AssignUserToBed"
          ],
          "reasoning": "interaction-created with canBeDeleted: true (hard-delete), must use StateMachine for both create and delete",
          "calculationMethod": "Independently created by AssignUserToBed interaction",
          "completed": true
        },
        {
          "id": "UserPointDeductionsRelation",
          "type": "relation",
          "relationName": "UserPointDeductionsRelation",
          "computationType": "_parent:PointDeduction",
          "dependencies": [],
          "expandedDependencies": [
            "User",
            "PointDeduction"
          ],
          "interactionDependencies": [
            "DeductPoints",
            "DeductResidentPoints"
          ],
          "reasoning": "created-with-entity type with canBeDeleted: false, created by parent entity's computation",
          "calculationMethod": "Created together with PointDeduction entity by PointDeduction's creation interactions",
          "completed": true
        },
        {
          "id": "UserRemovalRequestsRelation",
          "type": "relation",
          "relationName": "UserRemovalRequestsRelation",
          "computationType": "_parent:RemovalRequest",
          "dependencies": [],
          "expandedDependencies": [
            "User",
            "RemovalRequest"
          ],
          "interactionDependencies": [
            "SubmitRemovalRequest"
          ],
          "reasoning": "created-with-entity type with canBeDeleted: false, created by parent entity's computation",
          "calculationMethod": "Created together with RemovalRequest entity by RemovalRequest's creation interactions",
          "completed": true
        },
        {
          "id": "DormitoryLeaderRemovalRequestsRelation",
          "type": "relation",
          "relationName": "DormitoryLeaderRemovalRequestsRelation",
          "computationType": "_parent:RemovalRequest",
          "dependencies": [],
          "expandedDependencies": [
            "User",
            "RemovalRequest"
          ],
          "interactionDependencies": [
            "SubmitRemovalRequest"
          ],
          "reasoning": "created-with-entity type with canBeDeleted: false, created by parent entity's computation",
          "calculationMethod": "Created together with RemovalRequest entity by RemovalRequest's creation interactions",
          "completed": true
        },
        {
          "id": "User.id",
          "type": "property",
          "entityName": "User",
          "propertyName": "id",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": null,
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "auto-generated",
          "completed": true
        },
        {
          "id": "User.username",
          "type": "property",
          "entityName": "User",
          "propertyName": "username",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [
            "CreateUser",
            "Registration",
            "UpdateUsername"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions with uniqueness validation",
          "completed": true
        },
        {
          "id": "User.password",
          "type": "property",
          "entityName": "User",
          "propertyName": "password",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [
            "CreateUser",
            "Registration",
            "ChangePassword"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Hashed value from interactions",
          "completed": true
        },
        {
          "id": "User.email",
          "type": "property",
          "entityName": "User",
          "propertyName": "email",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [
            "CreateUser",
            "Registration",
            "UpdateProfile"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions with format validation",
          "completed": true
        },
        {
          "id": "User.name",
          "type": "property",
          "entityName": "User",
          "propertyName": "name",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [
            "CreateUser",
            "Registration",
            "UpdateProfile"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions",
          "completed": true
        },
        {
          "id": "User.role",
          "type": "property",
          "entityName": "User",
          "propertyName": "role",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [
            "CreateUser",
            "Registration",
            "AssignDormitoryLeader",
            "RemoveDormitoryLeader",
            "PromoteToAdmin"
          ],
          "reasoning": "Has interactionDependencies that can modify it, represents state transitions",
          "calculationMethod": "Direct assignment from interactions, restricted to admin operations",
          "completed": true
        },
        {
          "id": "User.createdAt",
          "type": "property",
          "entityName": "User",
          "propertyName": "createdAt",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set to current timestamp at creation",
          "completed": true
        },
        {
          "id": "User.isDeleted",
          "type": "property",
          "entityName": "User",
          "propertyName": "isDeleted",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "User"
          ],
          "interactionDependencies": [
            "DeleteUser",
            "RestoreUser"
          ],
          "reasoning": "Has interactionDependencies that can modify it, represents deletion state",
          "calculationMethod": "Set to true by DeleteUser, false by RestoreUser",
          "completed": true
        },
        {
          "id": "Dormitory.id",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "id",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": null,
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "auto-generated",
          "completed": false
        },
        {
          "id": "Dormitory.name",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "name",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": [
            "CreateDormitory",
            "UpdateDormitory"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions, admin only",
          "completed": true
        },
        {
          "id": "Dormitory.capacity",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "capacity",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": [
            "CreateDormitory",
            "UpdateDormitoryCapacity"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions with range validation (4-6)",
          "completed": true
        },
        {
          "id": "Dormitory.floor",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "floor",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": [
            "CreateDormitory",
            "UpdateDormitory"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions, admin only",
          "completed": true
        },
        {
          "id": "Dormitory.building",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "building",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": [
            "CreateDormitory",
            "UpdateDormitory"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Direct assignment from interactions, admin only",
          "completed": true
        },
        {
          "id": "Dormitory.createdAt",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "createdAt",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set to current timestamp at creation",
          "completed": false
        },
        {
          "id": "Dormitory.isDeleted",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "isDeleted",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "Dormitory"
          ],
          "interactionDependencies": [
            "DeleteDormitory",
            "RestoreDormitory"
          ],
          "reasoning": "Has interactionDependencies that can modify it, represents deletion state",
          "calculationMethod": "Set to true by DeleteDormitory, false by RestoreDormitory",
          "completed": true
        },
        {
          "id": "Bed.id",
          "type": "property",
          "entityName": "Bed",
          "propertyName": "id",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "Bed"
          ],
          "interactionDependencies": null,
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "auto-generated",
          "completed": false
        },
        {
          "id": "Bed.bedNumber",
          "type": "property",
          "entityName": "Bed",
          "propertyName": "bedNumber",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "Bed"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Generated based on position when Dormitory creates beds",
          "completed": false
        },
        {
          "id": "Bed.createdAt",
          "type": "property",
          "entityName": "Bed",
          "propertyName": "createdAt",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "Bed"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set to current timestamp at creation",
          "completed": false
        },
        {
          "id": "PointDeduction.id",
          "type": "property",
          "entityName": "PointDeduction",
          "propertyName": "id",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "PointDeduction"
          ],
          "interactionDependencies": null,
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "auto-generated",
          "completed": false
        },
        {
          "id": "PointDeduction.reason",
          "type": "property",
          "entityName": "PointDeduction",
          "propertyName": "reason",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "PointDeduction"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set from interaction payload at creation",
          "completed": false
        },
        {
          "id": "PointDeduction.points",
          "type": "property",
          "entityName": "PointDeduction",
          "propertyName": "points",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "PointDeduction"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set from interaction payload at creation",
          "completed": false
        },
        {
          "id": "PointDeduction.description",
          "type": "property",
          "entityName": "PointDeduction",
          "propertyName": "description",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "PointDeduction"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set from interaction payload at creation",
          "completed": false
        },
        {
          "id": "PointDeduction.createdAt",
          "type": "property",
          "entityName": "PointDeduction",
          "propertyName": "createdAt",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "PointDeduction"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set to current timestamp at creation",
          "completed": false
        },
        {
          "id": "PointDeduction.createdBy",
          "type": "property",
          "entityName": "PointDeduction",
          "propertyName": "createdBy",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "PointDeduction"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set from current user at creation",
          "completed": false
        },
        {
          "id": "RemovalRequest.id",
          "type": "property",
          "entityName": "RemovalRequest",
          "propertyName": "id",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "RemovalRequest"
          ],
          "interactionDependencies": null,
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "auto-generated",
          "completed": false
        },
        {
          "id": "RemovalRequest.reason",
          "type": "property",
          "entityName": "RemovalRequest",
          "propertyName": "reason",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "RemovalRequest"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set from interaction payload at creation",
          "completed": false
        },
        {
          "id": "RemovalRequest.status",
          "type": "property",
          "entityName": "RemovalRequest",
          "propertyName": "status",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "RemovalRequest"
          ],
          "interactionDependencies": [
            "SubmitRemovalRequest",
            "ProcessRemovalRequest"
          ],
          "reasoning": "Has interactionDependencies that can modify it, represents state transitions",
          "calculationMethod": "Set to 'pending' at creation, updated to 'approved' or 'rejected' by ProcessRemovalRequest",
          "completed": true
        },
        {
          "id": "RemovalRequest.createdAt",
          "type": "property",
          "entityName": "RemovalRequest",
          "propertyName": "createdAt",
          "computationType": "_owner",
          "dependencies": [],
          "expandedDependencies": [
            "RemovalRequest"
          ],
          "interactionDependencies": [],
          "reasoning": "controlType is creation-only, controlled by entity creation",
          "calculationMethod": "Set to current timestamp at creation",
          "completed": false
        },
        {
          "id": "RemovalRequest.processedAt",
          "type": "property",
          "entityName": "RemovalRequest",
          "propertyName": "processedAt",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "RemovalRequest"
          ],
          "interactionDependencies": [
            "ProcessRemovalRequest"
          ],
          "reasoning": "Has interactionDependencies that can modify it, timestamp update",
          "calculationMethod": "Set to current timestamp when ProcessRemovalRequest is executed",
          "completed": true
        },
        {
          "id": "RemovalRequest.adminComment",
          "type": "property",
          "entityName": "RemovalRequest",
          "propertyName": "adminComment",
          "computationType": "StateMachine",
          "dependencies": [],
          "expandedDependencies": [
            "RemovalRequest"
          ],
          "interactionDependencies": [
            "ProcessRemovalRequest"
          ],
          "reasoning": "Has interactionDependencies that can modify it",
          "calculationMethod": "Set from ProcessRemovalRequest payload",
          "completed": true
        }
      ],
      "description": "Phase 2: 30 property computation(s), 6 relation computation(s)"
    },
    {
      "phase": 3,
      "computations": [
        {
          "id": "User.points",
          "type": "property",
          "entityName": "User",
          "propertyName": "points",
          "computationType": "StateMachine",
          "dependencies": [
            "UserPointDeductionsRelation",
            "PointDeduction.points"
          ],
          "expandedDependencies": [
            "User",
            "UserPointDeductionsRelation",
            "PointDeduction.points",
            "PointDeduction"
          ],
          "interactionDependencies": [
            "CreateUser",
            "Registration",
            "DeductPoints",
            "DeductResidentPoints"
          ],
          "reasoning": "Implemented as StateMachine per user request - handles interaction-based point deductions",
          "calculationMethod": "Starts at 100, reduced by DeductPoints/DeductResidentPoints interactions, minimum 0",
          "completed": true
        },
        {
          "id": "Bed.isOccupied",
          "type": "property",
          "entityName": "Bed",
          "propertyName": "isOccupied",
          "computationType": "Custom",
          "dependencies": [
            "UserBedRelation"
          ],
          "expandedDependencies": [
            "Bed",
            "UserBedRelation"
          ],
          "interactionDependencies": [],
          "reasoning": "Has dataDependencies with relations, checking existence of relation",
          "calculationMethod": "True if UserBedRelation exists for this bed, false otherwise",
          "completed": true
        }
      ],
      "description": "Phase 3: 2 property computation(s)"
    },
    {
      "phase": 4,
      "computations": [
        {
          "id": "Dormitory.occupiedBeds",
          "type": "property",
          "entityName": "Dormitory",
          "propertyName": "occupiedBeds",
          "computationType": "Count",
          "dependencies": [
            "DormitoryBedsRelation",
            "Bed.isOccupied"
          ],
          "expandedDependencies": [
            "Dormitory",
            "DormitoryBedsRelation",
            "Bed.isOccupied",
            "Bed"
          ],
          "interactionDependencies": [],
          "reasoning": "Has dataDependencies with relations, computationMethod indicates count aggregation",
          "calculationMethod": "Count of Bed through DormitoryBedsRelation where Bed.isOccupied = true",
          "completed": true
        }
      ],
      "description": "Phase 4: 1 property computation(s)"
    }
  ]
}