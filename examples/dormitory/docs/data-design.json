{
  "entities": {
    "User": {
      "purpose": "System users with different roles (admin, dormHead, student)",
      "dataDependencies": [],
      "interactionDependencies": ["CreateUser", "RegisterUser"],
      "computationMethod": "Independently created by CreateUser (admin) or RegisterUser (self-registration) interactions",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "name": {
          "type": "string",
          "purpose": "User's full name",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "RegisterUser", "UpdateUserProfile"],
          "computationMethod": "Direct assignment from interactions",
          "initialValue": "Required at creation"
        },
        "email": {
          "type": "string",
          "purpose": "Unique identifier and authentication",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "RegisterUser"],
          "computationMethod": "Set once at creation, immutable thereafter",
          "initialValue": "Required at creation"
        },
        "phone": {
          "type": "string",
          "purpose": "Contact number",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "RegisterUser", "UpdateUserProfile"],
          "computationMethod": "Direct assignment from interactions",
          "initialValue": "optional"
        },
        "role": {
          "type": "string",
          "purpose": "User role (admin, dormHead, student)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "RegisterUser", "AssignDormHead", "RemoveDormHead"],
          "computationMethod": "Set at creation, can be changed to/from dormHead by admin interactions",
          "initialValue": "student"
        },
        "status": {
          "type": "string",
          "purpose": "User account status (active, suspended, removed)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "RegisterUser", "ProcessRemovalRequest", "RemoveUserFromDormitory"],
          "computationMethod": "Set to 'active' at creation, changed to 'removed' when removal request approved, can be set to 'suspended' by admin",
          "initialValue": "active"
        },
        "totalPoints": {
          "type": "number",
          "purpose": "Total active point deductions",
          "dataDependencies": ["UserPointDeductionRelation", "PointDeduction.points", "PointDeduction.status"],
          "interactionDependencies": [],
          "computationMethod": "Summation of PointDeduction.points where PointDeduction.status = 'active' across UserPointDeductionRelation",
          "initialValue": 0
        },
        "isRemovable": {
          "type": "boolean",
          "purpose": "Whether user has enough points for removal",
          "dataDependencies": ["totalPoints"],
          "interactionDependencies": [],
          "computationMethod": "totalPoints >= 30",
          "initialValue": false
        },
        "isDormHead": {
          "type": "boolean",
          "purpose": "Whether user is a dorm head",
          "dataDependencies": ["role", "DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "computationMethod": "role === 'dormHead' && exists DormitoryDormHeadRelation where target = this user",
          "initialValue": false
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Account creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": [],
          "computationMethod": "Set to current timestamp at creation",
          "initialValue": "auto-generated"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["UpdateUserProfile", "AssignDormHead", "RemoveDormHead", "ProcessRemovalRequest"],
          "computationMethod": "Updated to current timestamp on any modification",
          "initialValue": "auto-generated"
        }
      }
    },
    "Dormitory": {
      "purpose": "Dormitory rooms that house students",
      "dataDependencies": [],
      "interactionDependencies": ["CreateDormitory"],
      "computationMethod": "Independently created by CreateDormitory interaction",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": ["DeactivateDormitory"]
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "name": {
          "type": "string",
          "purpose": "Dormitory name (e.g., Building A - Room 301)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "computationMethod": "Direct assignment from interactions",
          "initialValue": "Required at creation"
        },
        "capacity": {
          "type": "number",
          "purpose": "Maximum number of beds (4-6)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "computationMethod": "Set at creation, immutable (must be 4-6)",
          "initialValue": "Required at creation"
        },
        "floor": {
          "type": "number",
          "purpose": "Floor number",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "computationMethod": "Direct assignment from interactions",
          "initialValue": "optional"
        },
        "building": {
          "type": "string",
          "purpose": "Building name or code",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "computationMethod": "Direct assignment from interactions",
          "initialValue": "optional"
        },
        "status": {
          "type": "string",
          "purpose": "Dormitory status (active, inactive)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "DeactivateDormitory"],
          "computationMethod": "Set to 'active' at creation, can be set to 'inactive' by DeactivateDormitory",
          "initialValue": "active"
        },
        "occupancy": {
          "type": "number",
          "purpose": "Current number of assigned users",
          "dataDependencies": ["UserDormitoryRelation"],
          "interactionDependencies": [],
          "computationMethod": "Count of UserDormitoryRelation where target = this dormitory",
          "initialValue": 0
        },
        "availableBeds": {
          "type": "number",
          "purpose": "Number of available beds",
          "dataDependencies": ["capacity", "occupancy"],
          "interactionDependencies": [],
          "computationMethod": "capacity - occupancy",
          "initialValue": "equals capacity at creation"
        },
        "hasDormHead": {
          "type": "boolean",
          "purpose": "Whether dormitory has an assigned dorm head",
          "dataDependencies": ["DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "computationMethod": "exists DormitoryDormHeadRelation where source = this dormitory",
          "initialValue": false
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": [],
          "computationMethod": "Set to current timestamp at creation",
          "initialValue": "auto-generated"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["UpdateDormitory", "DeactivateDormitory"],
          "computationMethod": "Updated to current timestamp on any modification",
          "initialValue": "auto-generated"
        }
      }
    },
    "Bed": {
      "purpose": "Individual beds within dormitories",
      "dataDependencies": ["Dormitory"],
      "interactionDependencies": ["CreateDormitory"],
      "computationMethod": "Created together with Dormitory entity by CreateDormitory interaction (creates capacity number of beds)",
      "lifecycle": {
        "creation": {
          "type": "created-with-parent",
          "parent": "Dormitory"
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "auto-delete",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "bedNumber": {
          "type": "string",
          "purpose": "Bed identifier within dormitory (e.g., A, B, 1, 2)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "computationMethod": "Set at creation based on position (1, 2, 3, etc.)",
          "initialValue": "auto-assigned"
        },
        "status": {
          "type": "string",
          "purpose": "Bed status (available, occupied, maintenance)",
          "dataDependencies": ["UserBedRelation"],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
          "computationMethod": "Set to 'occupied' when UserBedRelation exists, 'available' when no relation, can be set to 'maintenance' by admin",
          "initialValue": "available"
        },
        "isAvailable": {
          "type": "boolean",
          "purpose": "Whether bed can be assigned",
          "dataDependencies": ["status", "UserBedRelation"],
          "interactionDependencies": [],
          "computationMethod": "status === 'available' && !exists UserBedRelation",
          "initialValue": true
        },
        "assignedAt": {
          "type": "timestamp",
          "purpose": "When current user was assigned",
          "dataDependencies": [],
          "interactionDependencies": ["AssignUserToDormitory"],
          "computationMethod": "Set to current timestamp when user assigned, null when unassigned",
          "initialValue": null
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": [],
          "computationMethod": "Set to current timestamp at creation",
          "initialValue": "auto-generated"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory"],
          "computationMethod": "Updated to current timestamp on any modification",
          "initialValue": "auto-generated"
        }
      }
    },
    "PointDeduction": {
      "purpose": "Disciplinary point deductions for rule violations",
      "dataDependencies": [],
      "interactionDependencies": ["IssuePointDeduction"],
      "computationMethod": "Independently created by IssuePointDeduction interaction",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "reason": {
          "type": "string",
          "purpose": "Description of violation",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation, immutable",
          "initialValue": "Required at creation"
        },
        "points": {
          "type": "number",
          "purpose": "Deduction amount (1-10)",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation, immutable (must be 1-10)",
          "initialValue": "Required at creation"
        },
        "category": {
          "type": "string",
          "purpose": "Violation category (hygiene, noise, curfew, damage, other)",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation, immutable",
          "initialValue": "Required at creation"
        },
        "status": {
          "type": "string",
          "purpose": "Deduction status (active, appealed, cancelled)",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set to 'active' at creation, can be changed to 'cancelled' by admin (future: appeal system)",
          "initialValue": "active"
        },
        "description": {
          "type": "string",
          "purpose": "Detailed explanation",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation, immutable",
          "initialValue": "optional"
        },
        "evidence": {
          "type": "string",
          "purpose": "URL or reference to evidence",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation, immutable",
          "initialValue": "optional"
        },
        "deductedAt": {
          "type": "timestamp",
          "purpose": "When deduction was made",
          "dataDependencies": [],
          "interactionDependencies": [],
          "computationMethod": "Set to current timestamp at creation",
          "initialValue": "auto-generated"
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": [],
          "computationMethod": "Set to current timestamp at creation",
          "initialValue": "auto-generated"
        }
      }
    },
    "RemovalRequest": {
      "purpose": "Requests to remove problematic users from dormitory",
      "dataDependencies": [],
      "interactionDependencies": ["InitiateRemovalRequest"],
      "computationMethod": "Independently created by InitiateRemovalRequest interaction",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "reason": {
          "type": "string",
          "purpose": "Explanation for removal request",
          "dataDependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest"],
          "computationMethod": "Set at creation, immutable",
          "initialValue": "Required at creation"
        },
        "totalPoints": {
          "type": "number",
          "purpose": "Total points deducted for target user at time of request",
          "dataDependencies": ["RemovalRequestTargetRelation", "User.totalPoints"],
          "interactionDependencies": [],
          "computationMethod": "Copy of target User.totalPoints at creation time",
          "initialValue": "Set from target user's totalPoints"
        },
        "status": {
          "type": "string",
          "purpose": "Request status (pending, approved, rejected, cancelled)",
          "dataDependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest", "ProcessRemovalRequest", "CancelRemovalRequest"],
          "computationMethod": "Set to 'pending' at creation, changed to 'approved'/'rejected' by ProcessRemovalRequest, or 'cancelled' by CancelRemovalRequest",
          "initialValue": "pending"
        },
        "adminComment": {
          "type": "string",
          "purpose": "Admin's decision comment",
          "dataDependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "computationMethod": "Set by ProcessRemovalRequest when approving/rejecting",
          "initialValue": null
        },
        "processedAt": {
          "type": "timestamp",
          "purpose": "When admin made decision",
          "dataDependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "computationMethod": "Set to current timestamp when ProcessRemovalRequest executes",
          "initialValue": null
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": [],
          "computationMethod": "Set to current timestamp at creation",
          "initialValue": "auto-generated"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last modification timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest", "CancelRemovalRequest"],
          "computationMethod": "Updated to current timestamp on any modification",
          "initialValue": "auto-generated"
        }
      }
    }
  },
  "relations": {
    "UserDormitoryRelation": {
      "type": "n:1",
      "purpose": "Assigns users to their dormitory",
      "sourceEntity": "User",
      "targetEntity": "Dormitory",
      "sourceProperty": "dormitory",
      "targetProperty": "users",
      "dataDependencies": ["User", "Dormitory"],
      "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
      "computationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveUserFromDormitory", "ProcessRemovalRequest"]
        }
      },
      "properties": {}
    },
    "UserBedRelation": {
      "type": "1:1",
      "purpose": "Assigns users to specific beds",
      "sourceEntity": "User",
      "targetEntity": "Bed",
      "sourceProperty": "bed",
      "targetProperty": "occupant",
      "dataDependencies": ["User", "Bed"],
      "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
      "computationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveUserFromDormitory", "ProcessRemovalRequest"]
        }
      },
      "properties": {}
    },
    "DormitoryBedRelation": {
      "type": "1:n",
      "purpose": "Links dormitories to their beds",
      "sourceEntity": "Dormitory",
      "targetEntity": "Bed",
      "sourceProperty": "beds",
      "targetProperty": "dormitory",
      "dataDependencies": ["Dormitory", "Bed"],
      "interactionDependencies": ["CreateDormitory"],
      "computationMethod": "Created together with Bed entities by CreateDormitory interaction",
      "lifecycle": {
        "creation": {
          "type": "created-with-entity",
          "parent": "Bed"
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "auto-delete",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "DormitoryDormHeadRelation": {
      "type": "n:1",
      "purpose": "Assigns dorm heads to dormitories",
      "sourceEntity": "Dormitory",
      "targetEntity": "User",
      "sourceProperty": "dormHead",
      "targetProperty": "managedDormitory",
      "dataDependencies": ["Dormitory", "User"],
      "interactionDependencies": ["AssignDormHead", "RemoveDormHead"],
      "computationMethod": "Created by AssignDormHead, deleted by RemoveDormHead",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveDormHead"]
        }
      },
      "properties": {}
    },
    "UserPointDeductionRelation": {
      "type": "1:n",
      "purpose": "Links users to their point deductions",
      "sourceEntity": "User",
      "targetEntity": "PointDeduction",
      "sourceProperty": "pointDeductions",
      "targetProperty": "user",
      "dataDependencies": ["User", "PointDeduction"],
      "interactionDependencies": ["IssuePointDeduction"],
      "computationMethod": "Created together with PointDeduction by IssuePointDeduction interaction",
      "lifecycle": {
        "creation": {
          "type": "created-with-entity",
          "parent": "PointDeduction"
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "auto-delete",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "DeductionIssuerRelation": {
      "type": "n:1",
      "purpose": "Links point deductions to the user who issued them",
      "sourceEntity": "PointDeduction",
      "targetEntity": "User",
      "sourceProperty": "issuedBy",
      "targetProperty": "issuedDeductions",
      "dataDependencies": ["PointDeduction", "User"],
      "interactionDependencies": ["IssuePointDeduction"],
      "computationMethod": "Created together with PointDeduction by IssuePointDeduction interaction",
      "lifecycle": {
        "creation": {
          "type": "created-with-entity",
          "parent": "PointDeduction"
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "auto-delete",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "RemovalRequestTargetRelation": {
      "type": "n:1",
      "purpose": "Links removal requests to the target user",
      "sourceEntity": "RemovalRequest",
      "targetEntity": "User",
      "sourceProperty": "targetUser",
      "targetProperty": "removalRequests",
      "dataDependencies": ["RemovalRequest", "User"],
      "interactionDependencies": ["InitiateRemovalRequest"],
      "computationMethod": "Created together with RemovalRequest by InitiateRemovalRequest interaction",
      "lifecycle": {
        "creation": {
          "type": "created-with-entity",
          "parent": "RemovalRequest"
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "auto-delete",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "RemovalRequestInitiatorRelation": {
      "type": "n:1",
      "purpose": "Links removal requests to the dorm head who initiated them",
      "sourceEntity": "RemovalRequest",
      "targetEntity": "User",
      "sourceProperty": "requestedBy",
      "targetProperty": "initiatedRemovalRequests",
      "dataDependencies": ["RemovalRequest", "User"],
      "interactionDependencies": ["InitiateRemovalRequest"],
      "computationMethod": "Created together with RemovalRequest by InitiateRemovalRequest interaction",
      "lifecycle": {
        "creation": {
          "type": "created-with-entity",
          "parent": "RemovalRequest"
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "auto-delete",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "RemovalRequestAdminRelation": {
      "type": "n:1",
      "purpose": "Links removal requests to the admin who processed them",
      "sourceEntity": "RemovalRequest",
      "targetEntity": "User",
      "sourceProperty": "processedBy",
      "targetProperty": "processedRemovalRequests",
      "dataDependencies": ["RemovalRequest", "User"],
      "interactionDependencies": ["ProcessRemovalRequest"],
      "computationMethod": "Created by ProcessRemovalRequest when admin approves/rejects",
      "lifecycle": {
        "creation": {
          "type": "interaction-created",
          "parent": null
        },
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    }
  },
  "dictionaries": {}
}
