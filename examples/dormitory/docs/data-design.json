{
  "entities": {
    "User": {
      "purpose": "System users with different roles (admin, dormHead, student)",
      "dataDependencies": [],
      "interactionDependencies": ["CreateUser"],
      "computationMethod": "Independently created by CreateUser interaction or system initialization",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "name": {
          "type": "string",
          "purpose": "User's full name",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "UpdateUserProfile"],
          "computationMethod": "Direct assignment from CreateUser and UpdateUserProfile interactions",
          "initialValue": "Required at creation"
        },
        "email": {
          "type": "string",
          "purpose": "Unique identifier and contact email",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser"],
          "computationMethod": "Set once at creation by CreateUser, immutable thereafter",
          "initialValue": "Required at creation, must be unique"
        },
        "phone": {
          "type": "string",
          "purpose": "Optional contact phone number",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "UpdateUserProfile"],
          "computationMethod": "Direct assignment from CreateUser and UpdateUserProfile interactions",
          "initialValue": "null"
        },
        "role": {
          "type": "string",
          "purpose": "User role (admin, dormHead, student)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "AssignDormHead", "RemoveDormHead"],
          "computationMethod": "Set at creation by CreateUser, changes to 'dormHead' via AssignDormHead, reverts to 'student' via RemoveDormHead",
          "initialValue": "student"
        },
        "status": {
          "type": "string",
          "purpose": "User account status (active, suspended, removed)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser", "ProcessRemovalRequest", "RemoveUserFromDormitory"],
          "computationMethod": "Set to 'active' at creation, changes to 'removed' when removal request approved, can be 'suspended' via admin action",
          "initialValue": "active"
        },
        "totalPoints": {
          "type": "number",
          "purpose": "Total accumulated disciplinary points",
          "dataDependencies": ["UserPointDeductionRelation", "PointDeduction.points", "PointDeduction.status"],
          "interactionDependencies": [],
          "computationMethod": "Summation of PointDeduction.points across all UserPointDeductionRelation where PointDeduction.status = 'active'",
          "initialValue": 0
        },
        "isRemovable": {
          "type": "boolean",
          "purpose": "Whether user is eligible for removal (totalPoints >= 30)",
          "dataDependencies": ["totalPoints"],
          "interactionDependencies": [],
          "computationMethod": "Computed as totalPoints >= 30",
          "initialValue": false
        },
        "isDormHead": {
          "type": "boolean",
          "purpose": "Whether user is currently a dorm head",
          "dataDependencies": ["role", "DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "computationMethod": "Computed as role === 'dormHead' AND has DormitoryDormHeadRelation",
          "initialValue": false
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Account creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["CreateUser"],
          "computationMethod": "Set to current timestamp when CreateUser creates the user",
          "initialValue": "Current timestamp at creation"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["UpdateUserProfile", "AssignDormHead", "RemoveDormHead", "ProcessRemovalRequest"],
          "computationMethod": "Updated to current timestamp whenever user properties are modified",
          "initialValue": "Current timestamp at creation"
        }
      }
    },
    "Dormitory": {
      "purpose": "Dormitory rooms that house students",
      "dataDependencies": [],
      "interactionDependencies": ["CreateDormitory"],
      "computationMethod": "Independently created by CreateDormitory interaction",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": ["DeactivateDormitory"]
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "name": {
          "type": "string",
          "purpose": "Dormitory name (e.g., 'Building A - Room 301')",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "computationMethod": "Direct assignment from CreateDormitory and UpdateDormitory interactions",
          "initialValue": "Required at creation"
        },
        "capacity": {
          "type": "number",
          "purpose": "Maximum number of beds (4-6)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "computationMethod": "Set once at creation by CreateDormitory, must be 4-6, immutable thereafter",
          "initialValue": "Required at creation (4-6)"
        },
        "floor": {
          "type": "number",
          "purpose": "Floor number in building",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "computationMethod": "Direct assignment from CreateDormitory and UpdateDormitory interactions",
          "initialValue": "null"
        },
        "building": {
          "type": "string",
          "purpose": "Building name or code",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory"],
          "computationMethod": "Direct assignment from CreateDormitory and UpdateDormitory interactions",
          "initialValue": "null"
        },
        "status": {
          "type": "string",
          "purpose": "Dormitory operational status (active, inactive)",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory", "UpdateDormitory", "DeactivateDormitory"],
          "computationMethod": "Set to 'active' at creation, can be changed to 'inactive' via UpdateDormitory or DeactivateDormitory",
          "initialValue": "active"
        },
        "occupancy": {
          "type": "number",
          "purpose": "Current number of assigned users",
          "dataDependencies": ["UserDormitoryRelation"],
          "interactionDependencies": [],
          "computationMethod": "Count of UserDormitoryRelation where target = this dormitory",
          "initialValue": 0
        },
        "availableBeds": {
          "type": "number",
          "purpose": "Number of available beds",
          "dataDependencies": ["capacity", "occupancy"],
          "interactionDependencies": [],
          "computationMethod": "Computed as capacity - occupancy",
          "initialValue": "Same as capacity"
        },
        "hasDormHead": {
          "type": "boolean",
          "purpose": "Whether dormitory has an assigned dorm head",
          "dataDependencies": ["DormitoryDormHeadRelation"],
          "interactionDependencies": [],
          "computationMethod": "Computed as existence of DormitoryDormHeadRelation",
          "initialValue": false
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Dormitory creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "computationMethod": "Set to current timestamp when CreateDormitory creates the dormitory",
          "initialValue": "Current timestamp at creation"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["UpdateDormitory", "DeactivateDormitory"],
          "computationMethod": "Updated to current timestamp whenever dormitory properties are modified",
          "initialValue": "Current timestamp at creation"
        }
      }
    },
    "Bed": {
      "purpose": "Individual bed units within dormitories",
      "dataDependencies": ["Dormitory"],
      "interactionDependencies": ["CreateDormitory"],
      "computationMethod": "Created together with Dormitory entity, number of beds equals dormitory capacity",
      "lifecycle": {
        "creation": "created-with-parent",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "bedNumber": {
          "type": "string",
          "purpose": "Bed identifier within dormitory (e.g., 'A', 'B', '1', '2')",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "computationMethod": "Set at creation based on position (1st bed='A', 2nd='B', etc.)",
          "initialValue": "Auto-assigned based on creation order"
        },
        "status": {
          "type": "string",
          "purpose": "Bed status (available, occupied, maintenance)",
          "dataDependencies": ["UserBedRelation"],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest", "SetBedMaintenance"],
          "computationMethod": "Changes to 'occupied' when UserBedRelation created, 'available' when relation deleted, 'maintenance' via admin action",
          "initialValue": "available"
        },
        "isAvailable": {
          "type": "boolean",
          "purpose": "Whether bed can be assigned",
          "dataDependencies": ["status", "UserBedRelation"],
          "interactionDependencies": [],
          "computationMethod": "Computed as status === 'available' AND no UserBedRelation exists",
          "initialValue": true
        },
        "assignedAt": {
          "type": "timestamp",
          "purpose": "When current occupant was assigned",
          "dataDependencies": [],
          "interactionDependencies": ["AssignUserToDormitory"],
          "computationMethod": "Set to current timestamp when UserBedRelation is created, null when deleted",
          "initialValue": "null"
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Bed creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["CreateDormitory"],
          "computationMethod": "Set to current timestamp when CreateDormitory creates the bed",
          "initialValue": "Current timestamp at creation"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest", "SetBedMaintenance"],
          "computationMethod": "Updated to current timestamp whenever bed status changes",
          "initialValue": "Current timestamp at creation"
        }
      }
    },
    "PointDeduction": {
      "purpose": "Disciplinary point records for user violations",
      "dataDependencies": ["User"],
      "interactionDependencies": ["IssuePointDeduction"],
      "computationMethod": "Independently created by IssuePointDeduction interaction",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": ["CancelDeduction"]
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "reason": {
          "type": "string",
          "purpose": "Brief description of violation",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation by IssuePointDeduction, immutable thereafter",
          "initialValue": "Required at creation"
        },
        "points": {
          "type": "number",
          "purpose": "Number of points deducted (1-10)",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation by IssuePointDeduction, must be 1-10, immutable thereafter",
          "initialValue": "Required at creation (1-10)"
        },
        "category": {
          "type": "string",
          "purpose": "Violation category (hygiene, noise, curfew, damage, other)",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set at creation by IssuePointDeduction from enum values",
          "initialValue": "Required at creation"
        },
        "status": {
          "type": "string",
          "purpose": "Deduction status (active, appealed, cancelled)",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction", "AppealDeduction", "CancelDeduction"],
          "computationMethod": "Set to 'active' at creation, can change to 'appealed' or 'cancelled' via interactions",
          "initialValue": "active"
        },
        "description": {
          "type": "string",
          "purpose": "Detailed explanation of violation",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Optional field set at creation by IssuePointDeduction",
          "initialValue": "null"
        },
        "evidence": {
          "type": "string",
          "purpose": "URL or reference to supporting evidence",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Optional field set at creation by IssuePointDeduction",
          "initialValue": "null"
        },
        "deductedAt": {
          "type": "timestamp",
          "purpose": "When the deduction was issued",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set to current timestamp when IssuePointDeduction creates the deduction",
          "initialValue": "Current timestamp at creation"
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Record creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["IssuePointDeduction"],
          "computationMethod": "Set to current timestamp when IssuePointDeduction creates the deduction",
          "initialValue": "Current timestamp at creation"
        }
      }
    },
    "RemovalRequest": {
      "purpose": "Requests to remove problematic users from dormitories",
      "dataDependencies": ["User"],
      "interactionDependencies": ["InitiateRemovalRequest"],
      "computationMethod": "Independently created by InitiateRemovalRequest when user has ≥30 points",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "soft-delete",
          "deletionInteractions": []
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "purpose": "System-generated unique identifier",
          "dataDependencies": null,
          "interactionDependencies": null,
          "initialValue": "auto-generated"
        },
        "reason": {
          "type": "string",
          "purpose": "Explanation for removal request",
          "dataDependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest"],
          "computationMethod": "Set at creation by InitiateRemovalRequest, immutable thereafter",
          "initialValue": "Required at creation"
        },
        "totalPoints": {
          "type": "number",
          "purpose": "Total points of target user at request time",
          "dataDependencies": ["RemovalRequestTargetRelation", "User.totalPoints"],
          "interactionDependencies": [],
          "computationMethod": "Computed from target user's totalPoints when request is created",
          "initialValue": "Target user's total points"
        },
        "status": {
          "type": "string",
          "purpose": "Request status (pending, approved, rejected, cancelled)",
          "dataDependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest", "ProcessRemovalRequest", "CancelRemovalRequest"],
          "computationMethod": "Set to 'pending' at creation, changes via ProcessRemovalRequest or CancelRemovalRequest",
          "initialValue": "pending"
        },
        "adminComment": {
          "type": "string",
          "purpose": "Admin's decision comment",
          "dataDependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "computationMethod": "Set by ProcessRemovalRequest when admin makes decision",
          "initialValue": "null"
        },
        "processedAt": {
          "type": "timestamp",
          "purpose": "When admin processed the request",
          "dataDependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest"],
          "computationMethod": "Set to current timestamp when ProcessRemovalRequest executes",
          "initialValue": "null"
        },
        "createdAt": {
          "type": "timestamp",
          "purpose": "Request creation timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["InitiateRemovalRequest"],
          "computationMethod": "Set to current timestamp when InitiateRemovalRequest creates the request",
          "initialValue": "Current timestamp at creation"
        },
        "updatedAt": {
          "type": "timestamp",
          "purpose": "Last update timestamp",
          "dataDependencies": [],
          "interactionDependencies": ["ProcessRemovalRequest", "CancelRemovalRequest"],
          "computationMethod": "Updated to current timestamp when request status changes",
          "initialValue": "Current timestamp at creation"
        }
      }
    }
  },
  "relations": {
    "UserDormitoryRelation": {
      "type": "n:1",
      "purpose": "Assigns users to dormitories",
      "sourceEntity": "User",
      "targetEntity": "Dormitory",
      "sourceProperty": "dormitory",
      "targetProperty": "users",
      "dataDependencies": ["User", "Dormitory"],
      "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
      "computationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveUserFromDormitory", "ProcessRemovalRequest"]
        }
      },
      "properties": {}
    },
    "UserBedRelation": {
      "type": "1:1",
      "purpose": "Assigns users to specific beds",
      "sourceEntity": "User",
      "targetEntity": "Bed",
      "sourceProperty": "bed",
      "targetProperty": "occupant",
      "dataDependencies": ["User", "Bed"],
      "interactionDependencies": ["AssignUserToDormitory", "RemoveUserFromDormitory", "ProcessRemovalRequest"],
      "computationMethod": "Created by AssignUserToDormitory, deleted by RemoveUserFromDormitory or approved ProcessRemovalRequest",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveUserFromDormitory", "ProcessRemovalRequest"]
        }
      },
      "properties": {}
    },
    "DormitoryBedRelation": {
      "type": "1:n",
      "purpose": "Links dormitories to their beds",
      "sourceEntity": "Dormitory",
      "targetEntity": "Bed",
      "sourceProperty": "beds",
      "targetProperty": "dormitory",
      "dataDependencies": ["Dormitory", "Bed"],
      "interactionDependencies": ["CreateDormitory"],
      "computationMethod": "Created together with Bed entities when CreateDormitory creates the dormitory",
      "lifecycle": {
        "creation": "created-with-entity",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "DormitoryDormHeadRelation": {
      "type": "n:1",
      "purpose": "Assigns dorm heads to manage dormitories",
      "sourceEntity": "Dormitory",
      "targetEntity": "User",
      "sourceProperty": "dormHead",
      "targetProperty": "managedDormitory",
      "dataDependencies": ["Dormitory", "User"],
      "interactionDependencies": ["AssignDormHead", "RemoveDormHead"],
      "computationMethod": "Created by AssignDormHead when appointing dorm head, deleted by RemoveDormHead",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": true,
          "deletionType": "hard-delete",
          "deletionInteractions": ["RemoveDormHead"]
        }
      },
      "properties": {}
    },
    "UserPointDeductionRelation": {
      "type": "1:n",
      "purpose": "Links users to their point deductions",
      "sourceEntity": "User",
      "targetEntity": "PointDeduction",
      "sourceProperty": "pointDeductions",
      "targetProperty": "user",
      "dataDependencies": ["User", "PointDeduction"],
      "interactionDependencies": ["IssuePointDeduction"],
      "computationMethod": "Created together with PointDeduction entity by IssuePointDeduction",
      "lifecycle": {
        "creation": "created-with-entity",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "DeductionIssuerRelation": {
      "type": "n:1",
      "purpose": "Tracks who issued each point deduction",
      "sourceEntity": "PointDeduction",
      "targetEntity": "User",
      "sourceProperty": "issuedBy",
      "targetProperty": "issuedDeductions",
      "dataDependencies": ["PointDeduction", "User"],
      "interactionDependencies": ["IssuePointDeduction"],
      "computationMethod": "Created together with PointDeduction entity by IssuePointDeduction",
      "lifecycle": {
        "creation": "created-with-entity",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "RemovalRequestTargetRelation": {
      "type": "n:1",
      "purpose": "Links removal requests to target users",
      "sourceEntity": "RemovalRequest",
      "targetEntity": "User",
      "sourceProperty": "targetUser",
      "targetProperty": "removalRequests",
      "dataDependencies": ["RemovalRequest", "User"],
      "interactionDependencies": ["InitiateRemovalRequest"],
      "computationMethod": "Created together with RemovalRequest entity by InitiateRemovalRequest",
      "lifecycle": {
        "creation": "created-with-entity",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "RemovalRequestInitiatorRelation": {
      "type": "n:1",
      "purpose": "Tracks who initiated each removal request",
      "sourceEntity": "RemovalRequest",
      "targetEntity": "User",
      "sourceProperty": "requestedBy",
      "targetProperty": "initiatedRemovalRequests",
      "dataDependencies": ["RemovalRequest", "User"],
      "interactionDependencies": ["InitiateRemovalRequest"],
      "computationMethod": "Created together with RemovalRequest entity by InitiateRemovalRequest",
      "lifecycle": {
        "creation": "created-with-entity",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    },
    "RemovalRequestAdminRelation": {
      "type": "n:1",
      "purpose": "Tracks which admin processed each removal request",
      "sourceEntity": "RemovalRequest",
      "targetEntity": "User",
      "sourceProperty": "processedBy",
      "targetProperty": "processedRemovalRequests",
      "dataDependencies": ["RemovalRequest", "User"],
      "interactionDependencies": ["ProcessRemovalRequest"],
      "computationMethod": "Created when ProcessRemovalRequest approves or rejects the request",
      "lifecycle": {
        "creation": "interaction-created",
        "deletion": {
          "canBeDeleted": false,
          "deletionType": "none",
          "deletionInteractions": []
        }
      },
      "properties": {}
    }
  },
  "dictionaries": {}
}
